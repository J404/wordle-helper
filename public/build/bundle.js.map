{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/words.ts","../../src/index.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export const words = [\r\n    'cigar',\r\n    'rebut',\r\n    'sissy',\r\n    'humph',\r\n    'awake',\r\n    'blush',\r\n    'focal',\r\n    'evade',\r\n    'naval',\r\n    'serve',\r\n    'heath',\r\n    'dwarf',\r\n    'model',\r\n    'karma',\r\n    'stink',\r\n    'grade',\r\n    'quiet',\r\n    'bench',\r\n    'abate',\r\n    'feign',\r\n    'major',\r\n    'death',\r\n    'fresh',\r\n    'crust',\r\n    'stool',\r\n    'colon',\r\n    'abase',\r\n    'marry',\r\n    'react',\r\n    'batty',\r\n    'pride',\r\n    'floss',\r\n    'helix',\r\n    'croak',\r\n    'staff',\r\n    'paper',\r\n    'unfed',\r\n    'whelp',\r\n    'trawl',\r\n    'outdo',\r\n    'adobe',\r\n    'crazy',\r\n    'sower',\r\n    'repay',\r\n    'digit',\r\n    'crate',\r\n    'cluck',\r\n    'spike',\r\n    'mimic',\r\n    'pound',\r\n    'maxim',\r\n    'linen',\r\n    'unmet',\r\n    'flesh',\r\n    'booby',\r\n    'forth',\r\n    'first',\r\n    'stand',\r\n    'belly',\r\n    'ivory',\r\n    'seedy',\r\n    'print',\r\n    'yearn',\r\n    'drain',\r\n    'bribe',\r\n    'stout',\r\n    'panel',\r\n    'crass',\r\n    'flume',\r\n    'offal',\r\n    'agree',\r\n    'error',\r\n    'swirl',\r\n    'argue',\r\n    'bleed',\r\n    'delta',\r\n    'flick',\r\n    'totem',\r\n    'wooer',\r\n    'front',\r\n    'shrub',\r\n    'parry',\r\n    'biome',\r\n    'lapel',\r\n    'start',\r\n    'greet',\r\n    'goner',\r\n    'golem',\r\n    'lusty',\r\n    'loopy',\r\n    'round',\r\n    'audit',\r\n    'lying',\r\n    'gamma',\r\n    'labor',\r\n    'islet',\r\n    'civic',\r\n    'forge',\r\n    'corny',\r\n    'moult',\r\n    'basic',\r\n    'salad',\r\n    'agate',\r\n    'spicy',\r\n    'spray',\r\n    'essay',\r\n    'fjord',\r\n    'spend',\r\n    'kebab',\r\n    'guild',\r\n    'aback',\r\n    'motor',\r\n    'alone',\r\n    'hatch',\r\n    'hyper',\r\n    'thumb',\r\n    'dowry',\r\n    'ought',\r\n    'belch',\r\n    'dutch',\r\n    'pilot',\r\n    'tweed',\r\n    'comet',\r\n    'jaunt',\r\n    'enema',\r\n    'steed',\r\n    'abyss',\r\n    'growl',\r\n    'fling',\r\n    'dozen',\r\n    'boozy',\r\n    'erode',\r\n    'world',\r\n    'gouge',\r\n    'click',\r\n    'briar',\r\n    'great',\r\n    'altar',\r\n    'pulpy',\r\n    'blurt',\r\n    'coast',\r\n    'duchy',\r\n    'groin',\r\n    'fixer',\r\n    'group',\r\n    'rogue',\r\n    'badly',\r\n    'smart',\r\n    'pithy',\r\n    'gaudy',\r\n    'chill',\r\n    'heron',\r\n    'vodka',\r\n    'finer',\r\n    'surer',\r\n    'radio',\r\n    'rouge',\r\n    'perch',\r\n    'retch',\r\n    'wrote',\r\n    'clock',\r\n    'tilde',\r\n    'store',\r\n    'prove',\r\n    'bring',\r\n    'solve',\r\n    'cheat',\r\n    'grime',\r\n    'exult',\r\n    'usher',\r\n    'epoch',\r\n    'triad',\r\n    'break',\r\n    'rhino',\r\n    'viral',\r\n    'conic',\r\n    'masse',\r\n    'sonic',\r\n    'vital',\r\n    'trace',\r\n    'using',\r\n    'peach',\r\n    'champ',\r\n    'baton',\r\n    'brake',\r\n    'pluck',\r\n    'craze',\r\n    'gripe',\r\n    'weary',\r\n    'picky',\r\n    'acute',\r\n    'ferry',\r\n    'aside',\r\n    'tapir',\r\n    'troll',\r\n    'unify',\r\n    'rebus',\r\n    'boost',\r\n    'truss',\r\n    'siege',\r\n    'tiger',\r\n    'banal',\r\n    'slump',\r\n    'crank',\r\n    'gorge',\r\n    'query',\r\n    'drink',\r\n    'favor',\r\n    'abbey',\r\n    'tangy',\r\n    'panic',\r\n    'solar',\r\n    'shire',\r\n    'proxy',\r\n    'point',\r\n    'robot',\r\n    'prick',\r\n    'wince',\r\n    'crimp',\r\n    'knoll',\r\n    'sugar',\r\n    'whack',\r\n    'mount',\r\n    'perky',\r\n    'could',\r\n    'wrung',\r\n    'light',\r\n    'those',\r\n    'moist',\r\n    'shard',\r\n    'pleat',\r\n    'aloft',\r\n    'skill',\r\n    'elder',\r\n    'frame',\r\n    'humor',\r\n    'pause',\r\n    'ulcer',\r\n    'ultra',\r\n    'robin',\r\n    'cynic',\r\n    'agora',\r\n    'aroma',\r\n    'caulk',\r\n    'shake',\r\n    'pupal',\r\n    'dodge',\r\n    'swill',\r\n    'tacit',\r\n    'other',\r\n    'thorn',\r\n    'trove',\r\n    'bloke',\r\n    'vivid',\r\n    'spill',\r\n    'chant',\r\n    'choke',\r\n    'rupee',\r\n    'nasty',\r\n    'mourn',\r\n    'ahead',\r\n    'brine',\r\n    'cloth',\r\n    'hoard',\r\n    'sweet',\r\n    'month',\r\n    'lapse',\r\n    'watch',\r\n    'today',\r\n    'focus',\r\n    'smelt',\r\n    'tease',\r\n    'cater',\r\n    'movie',\r\n    'lynch',\r\n    'saute',\r\n    'allow',\r\n    'renew',\r\n    'their',\r\n    'slosh',\r\n    'purge',\r\n    'chest',\r\n    'depot',\r\n    'epoxy',\r\n    'nymph',\r\n    'found',\r\n    'shall',\r\n    'harry',\r\n    'stove',\r\n    'lowly',\r\n    'snout',\r\n    'trope',\r\n    'fewer',\r\n    'shawl',\r\n    'natal',\r\n    'fibre',\r\n    'comma',\r\n    'foray',\r\n    'scare',\r\n    'stair',\r\n    'black',\r\n    'squad',\r\n    'royal',\r\n    'chunk',\r\n    'mince',\r\n    'slave',\r\n    'shame',\r\n    'cheek',\r\n    'ample',\r\n    'flair',\r\n    'foyer',\r\n    'cargo',\r\n    'oxide',\r\n    'plant',\r\n    'olive',\r\n    'inert',\r\n    'askew',\r\n    'heist',\r\n    'shown',\r\n    'zesty',\r\n    'hasty',\r\n    'trash',\r\n    'fella',\r\n    'larva',\r\n    'forgo',\r\n    'story',\r\n    'hairy',\r\n    'train',\r\n    'homer',\r\n    'badge',\r\n    'midst',\r\n    'canny',\r\n    'fetus',\r\n    'butch',\r\n    'farce',\r\n    'slung',\r\n    'tipsy',\r\n    'metal',\r\n    'yield',\r\n    'delve',\r\n    'being',\r\n    'scour',\r\n    'glass',\r\n    'gamer',\r\n    'scrap',\r\n    'money',\r\n    'hinge',\r\n    'album',\r\n    'vouch',\r\n    'asset',\r\n    'tiara',\r\n    'crept',\r\n    'bayou',\r\n    'atoll',\r\n    'manor',\r\n    'creak',\r\n    'showy',\r\n    'phase',\r\n    'froth',\r\n    'depth',\r\n    'gloom',\r\n    'flood',\r\n    'trait',\r\n    'girth',\r\n    'piety',\r\n    'payer',\r\n    'goose',\r\n    'float',\r\n    'donor',\r\n    'atone',\r\n    'primo',\r\n    'apron',\r\n    'blown',\r\n    'cacao',\r\n    'loser',\r\n    'input',\r\n    'gloat',\r\n    'awful',\r\n    'brink',\r\n    'smite',\r\n    'beady',\r\n    'rusty',\r\n    'retro',\r\n    'droll',\r\n    'gawky',\r\n    'hutch',\r\n    'pinto',\r\n    'gaily',\r\n    'egret',\r\n    'lilac',\r\n    'sever',\r\n    'field',\r\n    'fluff',\r\n    'hydro',\r\n    'flack',\r\n    'agape',\r\n    'wench',\r\n    'voice',\r\n    'stead',\r\n    'stalk',\r\n    'berth',\r\n    'madam',\r\n    'night',\r\n    'bland',\r\n    'liver',\r\n    'wedge',\r\n    'augur',\r\n    'roomy',\r\n    'wacky',\r\n    'flock',\r\n    'angry',\r\n    'bobby',\r\n    'trite',\r\n    'aphid',\r\n    'tryst',\r\n    'midge',\r\n    'power',\r\n    'elope',\r\n    'cinch',\r\n    'motto',\r\n    'stomp',\r\n    'upset',\r\n    'bluff',\r\n    'cramp',\r\n    'quart',\r\n    'coyly',\r\n    'youth',\r\n    'rhyme',\r\n    'buggy',\r\n    'alien',\r\n    'smear',\r\n    'unfit',\r\n    'patty',\r\n    'cling',\r\n    'glean',\r\n    'label',\r\n    'hunky',\r\n    'khaki',\r\n    'poker',\r\n    'gruel',\r\n    'twice',\r\n    'twang',\r\n    'shrug',\r\n    'treat',\r\n    'unlit',\r\n    'waste',\r\n    'merit',\r\n    'woven',\r\n    'octal',\r\n    'needy',\r\n    'clown',\r\n    'widow',\r\n    'irony',\r\n    'ruder',\r\n    'gauze',\r\n    'chief',\r\n    'onset',\r\n    'prize',\r\n    'fungi',\r\n    'charm',\r\n    'gully',\r\n    'inter',\r\n    'whoop',\r\n    'taunt',\r\n    'leery',\r\n    'class',\r\n    'theme',\r\n    'lofty',\r\n    'tibia',\r\n    'booze',\r\n    'alpha',\r\n    'thyme',\r\n    'eclat',\r\n    'doubt',\r\n    'parer',\r\n    'chute',\r\n    'stick',\r\n    'trice',\r\n    'alike',\r\n    'sooth',\r\n    'recap',\r\n    'saint',\r\n    'liege',\r\n    'glory',\r\n    'grate',\r\n    'admit',\r\n    'brisk',\r\n    'soggy',\r\n    'usurp',\r\n    'scald',\r\n    'scorn',\r\n    'leave',\r\n    'twine',\r\n    'sting',\r\n    'bough',\r\n    'marsh',\r\n    'sloth',\r\n    'dandy',\r\n    'vigor',\r\n    'howdy',\r\n    'enjoy',\r\n    'valid',\r\n    'ionic',\r\n    'equal',\r\n    'unset',\r\n    'floor',\r\n    'catch',\r\n    'spade',\r\n    'stein',\r\n    'exist',\r\n    'quirk',\r\n    'denim',\r\n    'grove',\r\n    'spiel',\r\n    'mummy',\r\n    'fault',\r\n    'foggy',\r\n    'flout',\r\n    'carry',\r\n    'sneak',\r\n    'libel',\r\n    'waltz',\r\n    'aptly',\r\n    'piney',\r\n    'inept',\r\n    'aloud',\r\n    'photo',\r\n    'dream',\r\n    'stale',\r\n    'vomit',\r\n    'ombre',\r\n    'fanny',\r\n    'unite',\r\n    'snarl',\r\n    'baker',\r\n    'there',\r\n    'glyph',\r\n    'pooch',\r\n    'hippy',\r\n    'spell',\r\n    'folly',\r\n    'louse',\r\n    'gulch',\r\n    'vault',\r\n    'godly',\r\n    'threw',\r\n    'fleet',\r\n    'grave',\r\n    'inane',\r\n    'shock',\r\n    'crave',\r\n    'spite',\r\n    'valve',\r\n    'skimp',\r\n    'claim',\r\n    'rainy',\r\n    'musty',\r\n    'pique',\r\n    'daddy',\r\n    'quasi',\r\n    'arise',\r\n    'aging',\r\n    'valet',\r\n    'opium',\r\n    'avert',\r\n    'stuck',\r\n    'recut',\r\n    'mulch',\r\n    'genre',\r\n    'plume',\r\n    'rifle',\r\n    'count',\r\n    'incur',\r\n    'total',\r\n    'wrest',\r\n    'mocha',\r\n    'deter',\r\n    'study',\r\n    'lover',\r\n    'safer',\r\n    'rivet',\r\n    'funny',\r\n    'smoke',\r\n    'mound',\r\n    'undue',\r\n    'sedan',\r\n    'pagan',\r\n    'swine',\r\n    'guile',\r\n    'gusty',\r\n    'equip',\r\n    'tough',\r\n    'canoe',\r\n    'chaos',\r\n    'covet',\r\n    'human',\r\n    'udder',\r\n    'lunch',\r\n    'blast',\r\n    'stray',\r\n    'manga',\r\n    'melee',\r\n    'lefty',\r\n    'quick',\r\n    'paste',\r\n    'given',\r\n    'octet',\r\n    'risen',\r\n    'groan',\r\n    'leaky',\r\n    'grind',\r\n    'carve',\r\n    'loose',\r\n    'sadly',\r\n    'spilt',\r\n    'apple',\r\n    'slack',\r\n    'honey',\r\n    'final',\r\n    'sheen',\r\n    'eerie',\r\n    'minty',\r\n    'slick',\r\n    'derby',\r\n    'wharf',\r\n    'spelt',\r\n    'coach',\r\n    'erupt',\r\n    'singe',\r\n    'price',\r\n    'spawn',\r\n    'fairy',\r\n    'jiffy',\r\n    'filmy',\r\n    'stack',\r\n    'chose',\r\n    'sleep',\r\n    'ardor',\r\n    'nanny',\r\n    'niece',\r\n    'woozy',\r\n    'handy',\r\n    'grace',\r\n    'ditto',\r\n    'stank',\r\n    'cream',\r\n    'usual',\r\n    'diode',\r\n    'valor',\r\n    'angle',\r\n    'ninja',\r\n    'muddy',\r\n    'chase',\r\n    'reply',\r\n    'prone',\r\n    'spoil',\r\n    'heart',\r\n    'shade',\r\n    'diner',\r\n    'arson',\r\n    'onion',\r\n    'sleet',\r\n    'dowel',\r\n    'couch',\r\n    'palsy',\r\n    'bowel',\r\n    'smile',\r\n    'evoke',\r\n    'creek',\r\n    'lance',\r\n    'eagle',\r\n    'idiot',\r\n    'siren',\r\n    'built',\r\n    'embed',\r\n    'award',\r\n    'dross',\r\n    'annul',\r\n    'goody',\r\n    'frown',\r\n    'patio',\r\n    'laden',\r\n    'humid',\r\n    'elite',\r\n    'lymph',\r\n    'edify',\r\n    'might',\r\n    'reset',\r\n    'visit',\r\n    'gusto',\r\n    'purse',\r\n    'vapor',\r\n    'crock',\r\n    'write',\r\n    'sunny',\r\n    'loath',\r\n    'chaff',\r\n    'slide',\r\n    'queer',\r\n    'venom',\r\n    'stamp',\r\n    'sorry',\r\n    'still',\r\n    'acorn',\r\n    'aping',\r\n    'pushy',\r\n    'tamer',\r\n    'hater',\r\n    'mania',\r\n    'awoke',\r\n    'brawn',\r\n    'swift',\r\n    'exile',\r\n    'birch',\r\n    'lucky',\r\n    'freer',\r\n    'risky',\r\n    'ghost',\r\n    'plier',\r\n    'lunar',\r\n    'winch',\r\n    'snare',\r\n    'nurse',\r\n    'house',\r\n    'borax',\r\n    'nicer',\r\n    'lurch',\r\n    'exalt',\r\n    'about',\r\n    'savvy',\r\n    'toxin',\r\n    'tunic',\r\n    'pried',\r\n    'inlay',\r\n    'chump',\r\n    'lanky',\r\n    'cress',\r\n    'eater',\r\n    'elude',\r\n    'cycle',\r\n    'kitty',\r\n    'boule',\r\n    'moron',\r\n    'tenet',\r\n    'place',\r\n    'lobby',\r\n    'plush',\r\n    'vigil',\r\n    'index',\r\n    'blink',\r\n    'clung',\r\n    'qualm',\r\n    'croup',\r\n    'clink',\r\n    'juicy',\r\n    'stage',\r\n    'decay',\r\n    'nerve',\r\n    'flier',\r\n    'shaft',\r\n    'crook',\r\n    'clean',\r\n    'china',\r\n    'ridge',\r\n    'vowel',\r\n    'gnome',\r\n    'snuck',\r\n    'icing',\r\n    'spiny',\r\n    'rigor',\r\n    'snail',\r\n    'flown',\r\n    'rabid',\r\n    'prose',\r\n    'thank',\r\n    'poppy',\r\n    'budge',\r\n    'fiber',\r\n    'moldy',\r\n    'dowdy',\r\n    'kneel',\r\n    'track',\r\n    'caddy',\r\n    'quell',\r\n    'dumpy',\r\n    'paler',\r\n    'swore',\r\n    'rebar',\r\n    'scuba',\r\n    'splat',\r\n    'flyer',\r\n    'horny',\r\n    'mason',\r\n    'doing',\r\n    'ozone',\r\n    'amply',\r\n    'molar',\r\n    'ovary',\r\n    'beset',\r\n    'queue',\r\n    'cliff',\r\n    'magic',\r\n    'truce',\r\n    'sport',\r\n    'fritz',\r\n    'edict',\r\n    'twirl',\r\n    'verse',\r\n    'llama',\r\n    'eaten',\r\n    'range',\r\n    'whisk',\r\n    'hovel',\r\n    'rehab',\r\n    'macaw',\r\n    'sigma',\r\n    'spout',\r\n    'verve',\r\n    'sushi',\r\n    'dying',\r\n    'fetid',\r\n    'brain',\r\n    'buddy',\r\n    'thump',\r\n    'scion',\r\n    'candy',\r\n    'chord',\r\n    'basin',\r\n    'march',\r\n    'crowd',\r\n    'arbor',\r\n    'gayly',\r\n    'musky',\r\n    'stain',\r\n    'dally',\r\n    'bless',\r\n    'bravo',\r\n    'stung',\r\n    'title',\r\n    'ruler',\r\n    'kiosk',\r\n    'blond',\r\n    'ennui',\r\n    'layer',\r\n    'fluid',\r\n    'tatty',\r\n    'score',\r\n    'cutie',\r\n    'zebra',\r\n    'barge',\r\n    'matey',\r\n    'bluer',\r\n    'aider',\r\n    'shook',\r\n    'river',\r\n    'privy',\r\n    'betel',\r\n    'frisk',\r\n    'bongo',\r\n    'begun',\r\n    'azure',\r\n    'weave',\r\n    'genie',\r\n    'sound',\r\n    'glove',\r\n    'braid',\r\n    'scope',\r\n    'wryly',\r\n    'rover',\r\n    'assay',\r\n    'ocean',\r\n    'bloom',\r\n    'irate',\r\n    'later',\r\n    'woken',\r\n    'silky',\r\n    'wreck',\r\n    'dwelt',\r\n    'slate',\r\n    'smack',\r\n    'solid',\r\n    'amaze',\r\n    'hazel',\r\n    'wrist',\r\n    'jolly',\r\n    'globe',\r\n    'flint',\r\n    'rouse',\r\n    'civil',\r\n    'vista',\r\n    'relax',\r\n    'cover',\r\n    'alive',\r\n    'beech',\r\n    'jetty',\r\n    'bliss',\r\n    'vocal',\r\n    'often',\r\n    'dolly',\r\n    'eight',\r\n    'joker',\r\n    'since',\r\n    'event',\r\n    'ensue',\r\n    'shunt',\r\n    'diver',\r\n    'poser',\r\n    'worst',\r\n    'sweep',\r\n    'alley',\r\n    'creed',\r\n    'anime',\r\n    'leafy',\r\n    'bosom',\r\n    'dunce',\r\n    'stare',\r\n    'pudgy',\r\n    'waive',\r\n    'choir',\r\n    'stood',\r\n    'spoke',\r\n    'outgo',\r\n    'delay',\r\n    'bilge',\r\n    'ideal',\r\n    'clasp',\r\n    'seize',\r\n    'hotly',\r\n    'laugh',\r\n    'sieve',\r\n    'block',\r\n    'meant',\r\n    'grape',\r\n    'noose',\r\n    'hardy',\r\n    'shied',\r\n    'drawl',\r\n    'daisy',\r\n    'putty',\r\n    'strut',\r\n    'burnt',\r\n    'tulip',\r\n    'crick',\r\n    'idyll',\r\n    'vixen',\r\n    'furor',\r\n    'geeky',\r\n    'cough',\r\n    'naive',\r\n    'shoal',\r\n    'stork',\r\n    'bathe',\r\n    'aunty',\r\n    'check',\r\n    'prime',\r\n    'brass',\r\n    'outer',\r\n    'furry',\r\n    'razor',\r\n    'elect',\r\n    'evict',\r\n    'imply',\r\n    'demur',\r\n    'quota',\r\n    'haven',\r\n    'cavil',\r\n    'swear',\r\n    'crump',\r\n    'dough',\r\n    'gavel',\r\n    'wagon',\r\n    'salon',\r\n    'nudge',\r\n    'harem',\r\n    'pitch',\r\n    'sworn',\r\n    'pupil',\r\n    'excel',\r\n    'stony',\r\n    'cabin',\r\n    'unzip',\r\n    'queen',\r\n    'trout',\r\n    'polyp',\r\n    'earth',\r\n    'storm',\r\n    'until',\r\n    'taper',\r\n    'enter',\r\n    'child',\r\n    'adopt',\r\n    'minor',\r\n    'fatty',\r\n    'husky',\r\n    'brave',\r\n    'filet',\r\n    'slime',\r\n    'glint',\r\n    'tread',\r\n    'steal',\r\n    'regal',\r\n    'guest',\r\n    'every',\r\n    'murky',\r\n    'share',\r\n    'spore',\r\n    'hoist',\r\n    'buxom',\r\n    'inner',\r\n    'otter',\r\n    'dimly',\r\n    'level',\r\n    'sumac',\r\n    'donut',\r\n    'stilt',\r\n    'arena',\r\n    'sheet',\r\n    'scrub',\r\n    'fancy',\r\n    'slimy',\r\n    'pearl',\r\n    'silly',\r\n    'porch',\r\n    'dingo',\r\n    'sepia',\r\n    'amble',\r\n    'shady',\r\n    'bread',\r\n    'friar',\r\n    'reign',\r\n    'dairy',\r\n    'quill',\r\n    'cross',\r\n    'brood',\r\n    'tuber',\r\n    'shear',\r\n    'posit',\r\n    'blank',\r\n    'villa',\r\n    'shank',\r\n    'piggy',\r\n    'freak',\r\n    'which',\r\n    'among',\r\n    'fecal',\r\n    'shell',\r\n    'would',\r\n    'algae',\r\n    'large',\r\n    'rabbi',\r\n    'agony',\r\n    'amuse',\r\n    'bushy',\r\n    'copse',\r\n    'swoon',\r\n    'knife',\r\n    'pouch',\r\n    'ascot',\r\n    'plane',\r\n    'crown',\r\n    'urban',\r\n    'snide',\r\n    'relay',\r\n    'abide',\r\n    'viola',\r\n    'rajah',\r\n    'straw',\r\n    'dilly',\r\n    'crash',\r\n    'amass',\r\n    'third',\r\n    'trick',\r\n    'tutor',\r\n    'woody',\r\n    'blurb',\r\n    'grief',\r\n    'disco',\r\n    'where',\r\n    'sassy',\r\n    'beach',\r\n    'sauna',\r\n    'comic',\r\n    'clued',\r\n    'creep',\r\n    'caste',\r\n    'graze',\r\n    'snuff',\r\n    'frock',\r\n    'gonad',\r\n    'drunk',\r\n    'prong',\r\n    'lurid',\r\n    'steel',\r\n    'halve',\r\n    'buyer',\r\n    'vinyl',\r\n    'utile',\r\n    'smell',\r\n    'adage',\r\n    'worry',\r\n    'tasty',\r\n    'local',\r\n    'trade',\r\n    'finch',\r\n    'ashen',\r\n    'modal',\r\n    'gaunt',\r\n    'clove',\r\n    'enact',\r\n    'adorn',\r\n    'roast',\r\n    'speck',\r\n    'sheik',\r\n    'missy',\r\n    'grunt',\r\n    'snoop',\r\n    'party',\r\n    'touch',\r\n    'mafia',\r\n    'emcee',\r\n    'array',\r\n    'south',\r\n    'vapid',\r\n    'jelly',\r\n    'skulk',\r\n    'angst',\r\n    'tubal',\r\n    'lower',\r\n    'crest',\r\n    'sweat',\r\n    'cyber',\r\n    'adore',\r\n    'tardy',\r\n    'swami',\r\n    'notch',\r\n    'groom',\r\n    'roach',\r\n    'hitch',\r\n    'young',\r\n    'align',\r\n    'ready',\r\n    'frond',\r\n    'strap',\r\n    'puree',\r\n    'realm',\r\n    'venue',\r\n    'swarm',\r\n    'offer',\r\n    'seven',\r\n    'dryer',\r\n    'diary',\r\n    'dryly',\r\n    'drank',\r\n    'acrid',\r\n    'heady',\r\n    'theta',\r\n    'junto',\r\n    'pixie',\r\n    'quoth',\r\n    'bonus',\r\n    'shalt',\r\n    'penne',\r\n    'amend',\r\n    'datum',\r\n    'build',\r\n    'piano',\r\n    'shelf',\r\n    'lodge',\r\n    'suing',\r\n    'rearm',\r\n    'coral',\r\n    'ramen',\r\n    'worth',\r\n    'psalm',\r\n    'infer',\r\n    'overt',\r\n    'mayor',\r\n    'ovoid',\r\n    'glide',\r\n    'usage',\r\n    'poise',\r\n    'randy',\r\n    'chuck',\r\n    'prank',\r\n    'fishy',\r\n    'tooth',\r\n    'ether',\r\n    'drove',\r\n    'idler',\r\n    'swath',\r\n    'stint',\r\n    'while',\r\n    'begat',\r\n    'apply',\r\n    'slang',\r\n    'tarot',\r\n    'radar',\r\n    'credo',\r\n    'aware',\r\n    'canon',\r\n    'shift',\r\n    'timer',\r\n    'bylaw',\r\n    'serum',\r\n    'three',\r\n    'steak',\r\n    'iliac',\r\n    'shirk',\r\n    'blunt',\r\n    'puppy',\r\n    'penal',\r\n    'joist',\r\n    'bunny',\r\n    'shape',\r\n    'beget',\r\n    'wheel',\r\n    'adept',\r\n    'stunt',\r\n    'stole',\r\n    'topaz',\r\n    'chore',\r\n    'fluke',\r\n    'afoot',\r\n    'bloat',\r\n    'bully',\r\n    'dense',\r\n    'caper',\r\n    'sneer',\r\n    'boxer',\r\n    'jumbo',\r\n    'lunge',\r\n    'space',\r\n    'avail',\r\n    'short',\r\n    'slurp',\r\n    'loyal',\r\n    'flirt',\r\n    'pizza',\r\n    'conch',\r\n    'tempo',\r\n    'droop',\r\n    'plate',\r\n    'bible',\r\n    'plunk',\r\n    'afoul',\r\n    'savoy',\r\n    'steep',\r\n    'agile',\r\n    'stake',\r\n    'dwell',\r\n    'knave',\r\n    'beard',\r\n    'arose',\r\n    'motif',\r\n    'smash',\r\n    'broil',\r\n    'glare',\r\n    'shove',\r\n    'baggy',\r\n    'mammy',\r\n    'swamp',\r\n    'along',\r\n    'rugby',\r\n    'wager',\r\n    'quack',\r\n    'squat',\r\n    'snaky',\r\n    'debit',\r\n    'mange',\r\n    'skate',\r\n    'ninth',\r\n    'joust',\r\n    'tramp',\r\n    'spurn',\r\n    'medal',\r\n    'micro',\r\n    'rebel',\r\n    'flank',\r\n    'learn',\r\n    'nadir',\r\n    'maple',\r\n    'comfy',\r\n    'remit',\r\n    'gruff',\r\n    'ester',\r\n    'least',\r\n    'mogul',\r\n    'fetch',\r\n    'cause',\r\n    'oaken',\r\n    'aglow',\r\n    'meaty',\r\n    'gaffe',\r\n    'shyly',\r\n    'racer',\r\n    'prowl',\r\n    'thief',\r\n    'stern',\r\n    'poesy',\r\n    'rocky',\r\n    'tweet',\r\n    'waist',\r\n    'spire',\r\n    'grope',\r\n    'havoc',\r\n    'patsy',\r\n    'truly',\r\n    'forty',\r\n    'deity',\r\n    'uncle',\r\n    'swish',\r\n    'giver',\r\n    'preen',\r\n    'bevel',\r\n    'lemur',\r\n    'draft',\r\n    'slope',\r\n    'annoy',\r\n    'lingo',\r\n    'bleak',\r\n    'ditty',\r\n    'curly',\r\n    'cedar',\r\n    'dirge',\r\n    'grown',\r\n    'horde',\r\n    'drool',\r\n    'shuck',\r\n    'crypt',\r\n    'cumin',\r\n    'stock',\r\n    'gravy',\r\n    'locus',\r\n    'wider',\r\n    'breed',\r\n    'quite',\r\n    'chafe',\r\n    'cache',\r\n    'blimp',\r\n    'deign',\r\n    'fiend',\r\n    'logic',\r\n    'cheap',\r\n    'elide',\r\n    'rigid',\r\n    'false',\r\n    'renal',\r\n    'pence',\r\n    'rowdy',\r\n    'shoot',\r\n    'blaze',\r\n    'envoy',\r\n    'posse',\r\n    'brief',\r\n    'never',\r\n    'abort',\r\n    'mouse',\r\n    'mucky',\r\n    'sulky',\r\n    'fiery',\r\n    'media',\r\n    'trunk',\r\n    'yeast',\r\n    'clear',\r\n    'skunk',\r\n    'scalp',\r\n    'bitty',\r\n    'cider',\r\n    'koala',\r\n    'duvet',\r\n    'segue',\r\n    'creme',\r\n    'super',\r\n    'grill',\r\n    'after',\r\n    'owner',\r\n    'ember',\r\n    'reach',\r\n    'nobly',\r\n    'empty',\r\n    'speed',\r\n    'gipsy',\r\n    'recur',\r\n    'smock',\r\n    'dread',\r\n    'merge',\r\n    'burst',\r\n    'kappa',\r\n    'amity',\r\n    'shaky',\r\n    'hover',\r\n    'carol',\r\n    'snort',\r\n    'synod',\r\n    'faint',\r\n    'haunt',\r\n    'flour',\r\n    'chair',\r\n    'detox',\r\n    'shrew',\r\n    'tense',\r\n    'plied',\r\n    'quark',\r\n    'burly',\r\n    'novel',\r\n    'waxen',\r\n    'stoic',\r\n    'jerky',\r\n    'blitz',\r\n    'beefy',\r\n    'lyric',\r\n    'hussy',\r\n    'towel',\r\n    'quilt',\r\n    'below',\r\n    'bingo',\r\n    'wispy',\r\n    'brash',\r\n    'scone',\r\n    'toast',\r\n    'easel',\r\n    'saucy',\r\n    'value',\r\n    'spice',\r\n    'honor',\r\n    'route',\r\n    'sharp',\r\n    'bawdy',\r\n    'radii',\r\n    'skull',\r\n    'phony',\r\n    'issue',\r\n    'lager',\r\n    'swell',\r\n    'urine',\r\n    'gassy',\r\n    'trial',\r\n    'flora',\r\n    'upper',\r\n    'latch',\r\n    'wight',\r\n    'brick',\r\n    'retry',\r\n    'holly',\r\n    'decal',\r\n    'grass',\r\n    'shack',\r\n    'dogma',\r\n    'mover',\r\n    'defer',\r\n    'sober',\r\n    'optic',\r\n    'crier',\r\n    'vying',\r\n    'nomad',\r\n    'flute',\r\n    'hippo',\r\n    'shark',\r\n    'drier',\r\n    'obese',\r\n    'bugle',\r\n    'tawny',\r\n    'chalk',\r\n    'feast',\r\n    'ruddy',\r\n    'pedal',\r\n    'scarf',\r\n    'cruel',\r\n    'bleat',\r\n    'tidal',\r\n    'slush',\r\n    'semen',\r\n    'windy',\r\n    'dusty',\r\n    'sally',\r\n    'igloo',\r\n    'nerdy',\r\n    'jewel',\r\n    'shone',\r\n    'whale',\r\n    'hymen',\r\n    'abuse',\r\n    'fugue',\r\n    'elbow',\r\n    'crumb',\r\n    'pansy',\r\n    'welsh',\r\n    'syrup',\r\n    'terse',\r\n    'suave',\r\n    'gamut',\r\n    'swung',\r\n    'drake',\r\n    'freed',\r\n    'afire',\r\n    'shirt',\r\n    'grout',\r\n    'oddly',\r\n    'tithe',\r\n    'plaid',\r\n    'dummy',\r\n    'broom',\r\n    'blind',\r\n    'torch',\r\n    'enemy',\r\n    'again',\r\n    'tying',\r\n    'pesky',\r\n    'alter',\r\n    'gazer',\r\n    'noble',\r\n    'ethos',\r\n    'bride',\r\n    'extol',\r\n    'decor',\r\n    'hobby',\r\n    'beast',\r\n    'idiom',\r\n    'utter',\r\n    'these',\r\n    'sixth',\r\n    'alarm',\r\n    'erase',\r\n    'elegy',\r\n    'spunk',\r\n    'piper',\r\n    'scaly',\r\n    'scold',\r\n    'hefty',\r\n    'chick',\r\n    'sooty',\r\n    'canal',\r\n    'whiny',\r\n    'slash',\r\n    'quake',\r\n    'joint',\r\n    'swept',\r\n    'prude',\r\n    'heavy',\r\n    'wield',\r\n    'femme',\r\n    'lasso',\r\n    'maize',\r\n    'shale',\r\n    'screw',\r\n    'spree',\r\n    'smoky',\r\n    'whiff',\r\n    'scent',\r\n    'glade',\r\n    'spent',\r\n    'prism',\r\n    'stoke',\r\n    'riper',\r\n    'orbit',\r\n    'cocoa',\r\n    'guilt',\r\n    'humus',\r\n    'shush',\r\n    'table',\r\n    'smirk',\r\n    'wrong',\r\n    'noisy',\r\n    'alert',\r\n    'shiny',\r\n    'elate',\r\n    'resin',\r\n    'whole',\r\n    'hunch',\r\n    'pixel',\r\n    'polar',\r\n    'hotel',\r\n    'sword',\r\n    'cleat',\r\n    'mango',\r\n    'rumba',\r\n    'puffy',\r\n    'filly',\r\n    'billy',\r\n    'leash',\r\n    'clout',\r\n    'dance',\r\n    'ovate',\r\n    'facet',\r\n    'chili',\r\n    'paint',\r\n    'liner',\r\n    'curio',\r\n    'salty',\r\n    'audio',\r\n    'snake',\r\n    'fable',\r\n    'cloak',\r\n    'navel',\r\n    'spurt',\r\n    'pesto',\r\n    'balmy',\r\n    'flash',\r\n    'unwed',\r\n    'early',\r\n    'churn',\r\n    'weedy',\r\n    'stump',\r\n    'lease',\r\n    'witty',\r\n    'wimpy',\r\n    'spoof',\r\n    'saner',\r\n    'blend',\r\n    'salsa',\r\n    'thick',\r\n    'warty',\r\n    'manic',\r\n    'blare',\r\n    'squib',\r\n    'spoon',\r\n    'probe',\r\n    'crepe',\r\n    'knack',\r\n    'force',\r\n    'debut',\r\n    'order',\r\n    'haste',\r\n    'teeth',\r\n    'agent',\r\n    'widen',\r\n    'icily',\r\n    'slice',\r\n    'ingot',\r\n    'clash',\r\n    'juror',\r\n    'blood',\r\n    'abode',\r\n    'throw',\r\n    'unity',\r\n    'pivot',\r\n    'slept',\r\n    'troop',\r\n    'spare',\r\n    'sewer',\r\n    'parse',\r\n    'morph',\r\n    'cacti',\r\n    'tacky',\r\n    'spool',\r\n    'demon',\r\n    'moody',\r\n    'annex',\r\n    'begin',\r\n    'fuzzy',\r\n    'patch',\r\n    'water',\r\n    'lumpy',\r\n    'admin',\r\n    'omega',\r\n    'limit',\r\n    'tabby',\r\n    'macho',\r\n    'aisle',\r\n    'skiff',\r\n    'basis',\r\n    'plank',\r\n    'verge',\r\n    'botch',\r\n    'crawl',\r\n    'lousy',\r\n    'slain',\r\n    'cubic',\r\n    'raise',\r\n    'wrack',\r\n    'guide',\r\n    'foist',\r\n    'cameo',\r\n    'under',\r\n    'actor',\r\n    'revue',\r\n    'fraud',\r\n    'harpy',\r\n    'scoop',\r\n    'climb',\r\n    'refer',\r\n    'olden',\r\n    'clerk',\r\n    'debar',\r\n    'tally',\r\n    'ethic',\r\n    'cairn',\r\n    'tulle',\r\n    'ghoul',\r\n    'hilly',\r\n    'crude',\r\n    'apart',\r\n    'scale',\r\n    'older',\r\n    'plain',\r\n    'sperm',\r\n    'briny',\r\n    'abbot',\r\n    'rerun',\r\n    'quest',\r\n    'crisp',\r\n    'bound',\r\n    'befit',\r\n    'drawn',\r\n    'suite',\r\n    'itchy',\r\n    'cheer',\r\n    'bagel',\r\n    'guess',\r\n    'broad',\r\n    'axiom',\r\n    'chard',\r\n    'caput',\r\n    'leant',\r\n    'harsh',\r\n    'curse',\r\n    'proud',\r\n    'swing',\r\n    'opine',\r\n    'taste',\r\n    'lupus',\r\n    'gumbo',\r\n    'miner',\r\n    'green',\r\n    'chasm',\r\n    'lipid',\r\n    'topic',\r\n    'armor',\r\n    'brush',\r\n    'crane',\r\n    'mural',\r\n    'abled',\r\n    'habit',\r\n    'bossy',\r\n    'maker',\r\n    'dusky',\r\n    'dizzy',\r\n    'lithe',\r\n    'brook',\r\n    'jazzy',\r\n    'fifty',\r\n    'sense',\r\n    'giant',\r\n    'surly',\r\n    'legal',\r\n    'fatal',\r\n    'flunk',\r\n    'began',\r\n    'prune',\r\n    'small',\r\n    'slant',\r\n    'scoff',\r\n    'torus',\r\n    'ninny',\r\n    'covey',\r\n    'viper',\r\n    'taken',\r\n    'moral',\r\n    'vogue',\r\n    'owing',\r\n    'token',\r\n    'entry',\r\n    'booth',\r\n    'voter',\r\n    'chide',\r\n    'elfin',\r\n    'ebony',\r\n    'neigh',\r\n    'minim',\r\n    'melon',\r\n    'kneed',\r\n    'decoy',\r\n    'voila',\r\n    'ankle',\r\n    'arrow',\r\n    'mushy',\r\n    'tribe',\r\n    'cease',\r\n    'eager',\r\n    'birth',\r\n    'graph',\r\n    'odder',\r\n    'terra',\r\n    'weird',\r\n    'tried',\r\n    'clack',\r\n    'color',\r\n    'rough',\r\n    'weigh',\r\n    'uncut',\r\n    'ladle',\r\n    'strip',\r\n    'craft',\r\n    'minus',\r\n    'dicey',\r\n    'titan',\r\n    'lucid',\r\n    'vicar',\r\n    'dress',\r\n    'ditch',\r\n    'gypsy',\r\n    'pasta',\r\n    'taffy',\r\n    'flame',\r\n    'swoop',\r\n    'aloof',\r\n    'sight',\r\n    'broke',\r\n    'teary',\r\n    'chart',\r\n    'sixty',\r\n    'wordy',\r\n    'sheer',\r\n    'leper',\r\n    'nosey',\r\n    'bulge',\r\n    'savor',\r\n    'clamp',\r\n    'funky',\r\n    'foamy',\r\n    'toxic',\r\n    'brand',\r\n    'plumb',\r\n    'dingy',\r\n    'butte',\r\n    'drill',\r\n    'tripe',\r\n    'bicep',\r\n    'tenor',\r\n    'krill',\r\n    'worse',\r\n    'drama',\r\n    'hyena',\r\n    'think',\r\n    'ratio',\r\n    'cobra',\r\n    'basil',\r\n    'scrum',\r\n    'bused',\r\n    'phone',\r\n    'court',\r\n    'camel',\r\n    'proof',\r\n    'heard',\r\n    'angel',\r\n    'petal',\r\n    'pouty',\r\n    'throb',\r\n    'maybe',\r\n    'fetal',\r\n    'sprig',\r\n    'spine',\r\n    'shout',\r\n    'cadet',\r\n    'macro',\r\n    'dodgy',\r\n    'satyr',\r\n    'rarer',\r\n    'binge',\r\n    'trend',\r\n    'nutty',\r\n    'leapt',\r\n    'amiss',\r\n    'split',\r\n    'myrrh',\r\n    'width',\r\n    'sonar',\r\n    'tower',\r\n    'baron',\r\n    'fever',\r\n    'waver',\r\n    'spark',\r\n    'belie',\r\n    'sloop',\r\n    'expel',\r\n    'smote',\r\n    'baler',\r\n    'above',\r\n    'north',\r\n    'wafer',\r\n    'scant',\r\n    'frill',\r\n    'awash',\r\n    'snack',\r\n    'scowl',\r\n    'frail',\r\n    'drift',\r\n    'limbo',\r\n    'fence',\r\n    'motel',\r\n    'ounce',\r\n    'wreak',\r\n    'revel',\r\n    'talon',\r\n    'prior',\r\n    'knelt',\r\n    'cello',\r\n    'flake',\r\n    'debug',\r\n    'anode',\r\n    'crime',\r\n    'salve',\r\n    'scout',\r\n    'imbue',\r\n    'pinky',\r\n    'stave',\r\n    'vague',\r\n    'chock',\r\n    'fight',\r\n    'video',\r\n    'stone',\r\n    'teach',\r\n    'cleft',\r\n    'frost',\r\n    'prawn',\r\n    'booty',\r\n    'twist',\r\n    'apnea',\r\n    'stiff',\r\n    'plaza',\r\n    'ledge',\r\n    'tweak',\r\n    'board',\r\n    'grant',\r\n    'medic',\r\n    'bacon',\r\n    'cable',\r\n    'brawl',\r\n    'slunk',\r\n    'raspy',\r\n    'forum',\r\n    'drone',\r\n    'women',\r\n    'mucus',\r\n    'boast',\r\n    'toddy',\r\n    'coven',\r\n    'tumor',\r\n    'truer',\r\n    'wrath',\r\n    'stall',\r\n    'steam',\r\n    'axial',\r\n    'purer',\r\n    'daily',\r\n    'trail',\r\n    'niche',\r\n    'mealy',\r\n    'juice',\r\n    'nylon',\r\n    'plump',\r\n    'merry',\r\n    'flail',\r\n    'papal',\r\n    'wheat',\r\n    'berry',\r\n    'cower',\r\n    'erect',\r\n    'brute',\r\n    'leggy',\r\n    'snipe',\r\n    'sinew',\r\n    'skier',\r\n    'penny',\r\n    'jumpy',\r\n    'rally',\r\n    'umbra',\r\n    'scary',\r\n    'modem',\r\n    'gross',\r\n    'avian',\r\n    'greed',\r\n    'satin',\r\n    'tonic',\r\n    'parka',\r\n    'sniff',\r\n    'livid',\r\n    'stark',\r\n    'trump',\r\n    'giddy',\r\n    'reuse',\r\n    'taboo',\r\n    'avoid',\r\n    'quote',\r\n    'devil',\r\n    'liken',\r\n    'gloss',\r\n    'gayer',\r\n    'beret',\r\n    'noise',\r\n    'gland',\r\n    'dealt',\r\n    'sling',\r\n    'rumor',\r\n    'opera',\r\n    'thigh',\r\n    'tonga',\r\n    'flare',\r\n    'wound',\r\n    'white',\r\n    'bulky',\r\n    'etude',\r\n    'horse',\r\n    'circa',\r\n    'paddy',\r\n    'inbox',\r\n    'fizzy',\r\n    'grain',\r\n    'exert',\r\n    'surge',\r\n    'gleam',\r\n    'belle',\r\n    'salvo',\r\n    'crush',\r\n    'fruit',\r\n    'sappy',\r\n    'taker',\r\n    'tract',\r\n    'ovine',\r\n    'spiky',\r\n    'frank',\r\n    'reedy',\r\n    'filth',\r\n    'spasm',\r\n    'heave',\r\n    'mambo',\r\n    'right',\r\n    'clank',\r\n    'trust',\r\n    'lumen',\r\n    'borne',\r\n    'spook',\r\n    'sauce',\r\n    'amber',\r\n    'lathe',\r\n    'carat',\r\n    'corer',\r\n    'dirty',\r\n    'slyly',\r\n    'affix',\r\n    'alloy',\r\n    'taint',\r\n    'sheep',\r\n    'kinky',\r\n    'wooly',\r\n    'mauve',\r\n    'flung',\r\n    'yacht',\r\n    'fried',\r\n    'quail',\r\n    'brunt',\r\n    'grimy',\r\n    'curvy',\r\n    'cagey',\r\n    'rinse',\r\n    'deuce',\r\n    'state',\r\n    'grasp',\r\n    'milky',\r\n    'bison',\r\n    'graft',\r\n    'sandy',\r\n    'baste',\r\n    'flask',\r\n    'hedge',\r\n    'girly',\r\n    'swash',\r\n    'boney',\r\n    'coupe',\r\n    'endow',\r\n    'abhor',\r\n    'welch',\r\n    'blade',\r\n    'tight',\r\n    'geese',\r\n    'miser',\r\n    'mirth',\r\n    'cloud',\r\n    'cabal',\r\n    'leech',\r\n    'close',\r\n    'tenth',\r\n    'pecan',\r\n    'droit',\r\n    'grail',\r\n    'clone',\r\n    'guise',\r\n    'ralph',\r\n    'tango',\r\n    'biddy',\r\n    'smith',\r\n    'mower',\r\n    'payee',\r\n    'serif',\r\n    'drape',\r\n    'fifth',\r\n    'spank',\r\n    'glaze',\r\n    'allot',\r\n    'truck',\r\n    'kayak',\r\n    'virus',\r\n    'testy',\r\n    'tepee',\r\n    'fully',\r\n    'zonal',\r\n    'metro',\r\n    'curry',\r\n    'grand',\r\n    'banjo',\r\n    'axion',\r\n    'bezel',\r\n    'occur',\r\n    'chain',\r\n    'nasal',\r\n    'gooey',\r\n    'filer',\r\n    'brace',\r\n    'allay',\r\n    'pubic',\r\n    'raven',\r\n    'plead',\r\n    'gnash',\r\n    'flaky',\r\n    'munch',\r\n    'dully',\r\n    'eking',\r\n    'thing',\r\n    'slink',\r\n    'hurry',\r\n    'theft',\r\n    'shorn',\r\n    'pygmy',\r\n    'ranch',\r\n    'wring',\r\n    'lemon',\r\n    'shore',\r\n    'mamma',\r\n    'froze',\r\n    'newer',\r\n    'style',\r\n    'moose',\r\n    'antic',\r\n    'drown',\r\n    'vegan',\r\n    'chess',\r\n    'guppy',\r\n    'union',\r\n    'lever',\r\n    'lorry',\r\n    'image',\r\n    'cabby',\r\n    'druid',\r\n    'exact',\r\n    'truth',\r\n    'dopey',\r\n    'spear',\r\n    'cried',\r\n    'chime',\r\n    'crony',\r\n    'stunk',\r\n    'timid',\r\n    'batch',\r\n    'gauge',\r\n    'rotor',\r\n    'crack',\r\n    'curve',\r\n    'latte',\r\n    'witch',\r\n    'bunch',\r\n    'repel',\r\n    'anvil',\r\n    'soapy',\r\n    'meter',\r\n    'broth',\r\n    'madly',\r\n    'dried',\r\n    'scene',\r\n    'known',\r\n    'magma',\r\n    'roost',\r\n    'woman',\r\n    'thong',\r\n    'punch',\r\n    'pasty',\r\n    'downy',\r\n    'knead',\r\n    'whirl',\r\n    'rapid',\r\n    'clang',\r\n    'anger',\r\n    'drive',\r\n    'goofy',\r\n    'email',\r\n    'music',\r\n    'stuff',\r\n    'bleep',\r\n    'rider',\r\n    'mecca',\r\n    'folio',\r\n    'setup',\r\n    'verso',\r\n    'quash',\r\n    'fauna',\r\n    'gummy',\r\n    'happy',\r\n    'newly',\r\n    'fussy',\r\n    'relic',\r\n    'guava',\r\n    'ratty',\r\n    'fudge',\r\n    'femur',\r\n    'chirp',\r\n    'forte',\r\n    'alibi',\r\n    'whine',\r\n    'petty',\r\n    'golly',\r\n    'plait',\r\n    'fleck',\r\n    'felon',\r\n    'gourd',\r\n    'brown',\r\n    'thrum',\r\n    'ficus',\r\n    'stash',\r\n    'decry',\r\n    'wiser',\r\n    'junta',\r\n    'visor',\r\n    'daunt',\r\n    'scree',\r\n    'impel',\r\n    'await',\r\n    'press',\r\n    'whose',\r\n    'turbo',\r\n    'stoop',\r\n    'speak',\r\n    'mangy',\r\n    'eying',\r\n    'inlet',\r\n    'crone',\r\n    'pulse',\r\n    'mossy',\r\n    'staid',\r\n    'hence',\r\n    'pinch',\r\n    'teddy',\r\n    'sully',\r\n    'snore',\r\n    'ripen',\r\n    'snowy',\r\n    'attic',\r\n    'going',\r\n    'leach',\r\n    'mouth',\r\n    'hound',\r\n    'clump',\r\n    'tonal',\r\n    'bigot',\r\n    'peril',\r\n    'piece',\r\n    'blame',\r\n    'haute',\r\n    'spied',\r\n    'undid',\r\n    'intro',\r\n    'basal',\r\n    'shine',\r\n    'gecko',\r\n    'rodeo',\r\n    'guard',\r\n    'steer',\r\n    'loamy',\r\n    'scamp',\r\n    'scram',\r\n    'manly',\r\n    'hello',\r\n    'vaunt',\r\n    'organ',\r\n    'feral',\r\n    'knock',\r\n    'extra',\r\n    'condo',\r\n    'adapt',\r\n    'willy',\r\n    'polka',\r\n    'rayon',\r\n    'skirt',\r\n    'faith',\r\n    'torso',\r\n    'match',\r\n    'mercy',\r\n    'tepid',\r\n    'sleek',\r\n    'riser',\r\n    'twixt',\r\n    'peace',\r\n    'flush',\r\n    'catty',\r\n    'login',\r\n    'eject',\r\n    'roger',\r\n    'rival',\r\n    'untie',\r\n    'refit',\r\n    'aorta',\r\n    'adult',\r\n    'judge',\r\n    'rower',\r\n    'artsy',\r\n    'rural',\r\n    'shave',\r\n    'aahed',\r\n    'aalii',\r\n    'aargh',\r\n    'aarti',\r\n    'abaca',\r\n    'abaci',\r\n    'abacs',\r\n    'abaft',\r\n    'abaka',\r\n    'abamp',\r\n    'aband',\r\n    'abash',\r\n    'abask',\r\n    'abaya',\r\n    'abbas',\r\n    'abbed',\r\n    'abbes',\r\n    'abcee',\r\n    'abeam',\r\n    'abear',\r\n    'abele',\r\n    'abers',\r\n    'abets',\r\n    'abies',\r\n    'abler',\r\n    'ables',\r\n    'ablet',\r\n    'ablow',\r\n    'abmho',\r\n    'abohm',\r\n    'aboil',\r\n    'aboma',\r\n    'aboon',\r\n    'abord',\r\n    'abore',\r\n    'abram',\r\n    'abray',\r\n    'abrim',\r\n    'abrin',\r\n    'abris',\r\n    'absey',\r\n    'absit',\r\n    'abuna',\r\n    'abune',\r\n    'abuts',\r\n    'abuzz',\r\n    'abyes',\r\n    'abysm',\r\n    'acais',\r\n    'acari',\r\n    'accas',\r\n    'accoy',\r\n    'acerb',\r\n    'acers',\r\n    'aceta',\r\n    'achar',\r\n    'ached',\r\n    'aches',\r\n    'achoo',\r\n    'acids',\r\n    'acidy',\r\n    'acing',\r\n    'acini',\r\n    'ackee',\r\n    'acker',\r\n    'acmes',\r\n    'acmic',\r\n    'acned',\r\n    'acnes',\r\n    'acock',\r\n    'acold',\r\n    'acred',\r\n    'acres',\r\n    'acros',\r\n    'acted',\r\n    'actin',\r\n    'acton',\r\n    'acyls',\r\n    'adaws',\r\n    'adays',\r\n    'adbot',\r\n    'addax',\r\n    'added',\r\n    'adder',\r\n    'addio',\r\n    'addle',\r\n    'adeem',\r\n    'adhan',\r\n    'adieu',\r\n    'adios',\r\n    'adits',\r\n    'adman',\r\n    'admen',\r\n    'admix',\r\n    'adobo',\r\n    'adown',\r\n    'adoze',\r\n    'adrad',\r\n    'adred',\r\n    'adsum',\r\n    'aduki',\r\n    'adunc',\r\n    'adust',\r\n    'advew',\r\n    'adyta',\r\n    'adzed',\r\n    'adzes',\r\n    'aecia',\r\n    'aedes',\r\n    'aegis',\r\n    'aeons',\r\n    'aerie',\r\n    'aeros',\r\n    'aesir',\r\n    'afald',\r\n    'afara',\r\n    'afars',\r\n    'afear',\r\n    'aflaj',\r\n    'afore',\r\n    'afrit',\r\n    'afros',\r\n    'agama',\r\n    'agami',\r\n    'agars',\r\n    'agast',\r\n    'agave',\r\n    'agaze',\r\n    'agene',\r\n    'agers',\r\n    'agger',\r\n    'aggie',\r\n    'aggri',\r\n    'aggro',\r\n    'aggry',\r\n    'aghas',\r\n    'agila',\r\n    'agios',\r\n    'agism',\r\n    'agist',\r\n    'agita',\r\n    'aglee',\r\n    'aglet',\r\n    'agley',\r\n    'agloo',\r\n    'aglus',\r\n    'agmas',\r\n    'agoge',\r\n    'agone',\r\n    'agons',\r\n    'agood',\r\n    'agria',\r\n    'agrin',\r\n    'agros',\r\n    'agued',\r\n    'agues',\r\n    'aguna',\r\n    'aguti',\r\n    'aheap',\r\n    'ahent',\r\n    'ahigh',\r\n    'ahind',\r\n    'ahing',\r\n    'ahint',\r\n    'ahold',\r\n    'ahull',\r\n    'ahuru',\r\n    'aidas',\r\n    'aided',\r\n    'aides',\r\n    'aidoi',\r\n    'aidos',\r\n    'aiery',\r\n    'aigas',\r\n    'aight',\r\n    'ailed',\r\n    'aimed',\r\n    'aimer',\r\n    'ainee',\r\n    'ainga',\r\n    'aioli',\r\n    'aired',\r\n    'airer',\r\n    'airns',\r\n    'airth',\r\n    'airts',\r\n    'aitch',\r\n    'aitus',\r\n    'aiver',\r\n    'aiyee',\r\n    'aizle',\r\n    'ajies',\r\n    'ajiva',\r\n    'ajuga',\r\n    'ajwan',\r\n    'akees',\r\n    'akela',\r\n    'akene',\r\n    'aking',\r\n    'akita',\r\n    'akkas',\r\n    'alaap',\r\n    'alack',\r\n    'alamo',\r\n    'aland',\r\n    'alane',\r\n    'alang',\r\n    'alans',\r\n    'alant',\r\n    'alapa',\r\n    'alaps',\r\n    'alary',\r\n    'alate',\r\n    'alays',\r\n    'albas',\r\n    'albee',\r\n    'alcid',\r\n    'alcos',\r\n    'aldea',\r\n    'alder',\r\n    'aldol',\r\n    'aleck',\r\n    'alecs',\r\n    'alefs',\r\n    'aleft',\r\n    'aleph',\r\n    'alews',\r\n    'aleye',\r\n    'alfas',\r\n    'algal',\r\n    'algas',\r\n    'algid',\r\n    'algin',\r\n    'algor',\r\n    'algum',\r\n    'alias',\r\n    'alifs',\r\n    'aline',\r\n    'alist',\r\n    'aliya',\r\n    'alkie',\r\n    'alkos',\r\n    'alkyd',\r\n    'alkyl',\r\n    'allee',\r\n    'allel',\r\n    'allis',\r\n    'allod',\r\n    'allyl',\r\n    'almah',\r\n    'almas',\r\n    'almeh',\r\n    'almes',\r\n    'almud',\r\n    'almug',\r\n    'alods',\r\n    'aloed',\r\n    'aloes',\r\n    'aloha',\r\n    'aloin',\r\n    'aloos',\r\n    'alowe',\r\n    'altho',\r\n    'altos',\r\n    'alula',\r\n    'alums',\r\n    'alure',\r\n    'alvar',\r\n    'alway',\r\n    'amahs',\r\n    'amain',\r\n    'amate',\r\n    'amaut',\r\n    'amban',\r\n    'ambit',\r\n    'ambos',\r\n    'ambry',\r\n    'ameba',\r\n    'ameer',\r\n    'amene',\r\n    'amens',\r\n    'ament',\r\n    'amias',\r\n    'amice',\r\n    'amici',\r\n    'amide',\r\n    'amido',\r\n    'amids',\r\n    'amies',\r\n    'amiga',\r\n    'amigo',\r\n    'amine',\r\n    'amino',\r\n    'amins',\r\n    'amirs',\r\n    'amlas',\r\n    'amman',\r\n    'ammon',\r\n    'ammos',\r\n    'amnia',\r\n    'amnic',\r\n    'amnio',\r\n    'amoks',\r\n    'amole',\r\n    'amort',\r\n    'amour',\r\n    'amove',\r\n    'amowt',\r\n    'amped',\r\n    'ampul',\r\n    'amrit',\r\n    'amuck',\r\n    'amyls',\r\n    'anana',\r\n    'anata',\r\n    'ancho',\r\n    'ancle',\r\n    'ancon',\r\n    'andro',\r\n    'anear',\r\n    'anele',\r\n    'anent',\r\n    'angas',\r\n    'anglo',\r\n    'anigh',\r\n    'anile',\r\n    'anils',\r\n    'anima',\r\n    'animi',\r\n    'anion',\r\n    'anise',\r\n    'anker',\r\n    'ankhs',\r\n    'ankus',\r\n    'anlas',\r\n    'annal',\r\n    'annas',\r\n    'annat',\r\n    'anoas',\r\n    'anole',\r\n    'anomy',\r\n    'ansae',\r\n    'antae',\r\n    'antar',\r\n    'antas',\r\n    'anted',\r\n    'antes',\r\n    'antis',\r\n    'antra',\r\n    'antre',\r\n    'antsy',\r\n    'anura',\r\n    'anyon',\r\n    'apace',\r\n    'apage',\r\n    'apaid',\r\n    'apayd',\r\n    'apays',\r\n    'apeak',\r\n    'apeek',\r\n    'apers',\r\n    'apert',\r\n    'apery',\r\n    'apgar',\r\n    'aphis',\r\n    'apian',\r\n    'apiol',\r\n    'apish',\r\n    'apism',\r\n    'apode',\r\n    'apods',\r\n    'apoop',\r\n    'aport',\r\n    'appal',\r\n    'appay',\r\n    'appel',\r\n    'appro',\r\n    'appui',\r\n    'appuy',\r\n    'apres',\r\n    'apses',\r\n    'apsis',\r\n    'apsos',\r\n    'apted',\r\n    'apter',\r\n    'aquae',\r\n    'aquas',\r\n    'araba',\r\n    'araks',\r\n    'arame',\r\n    'arars',\r\n    'arbas',\r\n    'arced',\r\n    'archi',\r\n    'arcos',\r\n    'arcus',\r\n    'ardeb',\r\n    'ardri',\r\n    'aread',\r\n    'areae',\r\n    'areal',\r\n    'arear',\r\n    'areas',\r\n    'areca',\r\n    'aredd',\r\n    'arede',\r\n    'arefy',\r\n    'areic',\r\n    'arene',\r\n    'arepa',\r\n    'arere',\r\n    'arete',\r\n    'arets',\r\n    'arett',\r\n    'argal',\r\n    'argan',\r\n    'argil',\r\n    'argle',\r\n    'argol',\r\n    'argon',\r\n    'argot',\r\n    'argus',\r\n    'arhat',\r\n    'arias',\r\n    'ariel',\r\n    'ariki',\r\n    'arils',\r\n    'ariot',\r\n    'arish',\r\n    'arked',\r\n    'arled',\r\n    'arles',\r\n    'armed',\r\n    'armer',\r\n    'armet',\r\n    'armil',\r\n    'arnas',\r\n    'arnut',\r\n    'aroba',\r\n    'aroha',\r\n    'aroid',\r\n    'arpas',\r\n    'arpen',\r\n    'arrah',\r\n    'arras',\r\n    'arret',\r\n    'arris',\r\n    'arroz',\r\n    'arsed',\r\n    'arses',\r\n    'arsey',\r\n    'arsis',\r\n    'artal',\r\n    'artel',\r\n    'artic',\r\n    'artis',\r\n    'aruhe',\r\n    'arums',\r\n    'arval',\r\n    'arvee',\r\n    'arvos',\r\n    'aryls',\r\n    'asana',\r\n    'ascon',\r\n    'ascus',\r\n    'asdic',\r\n    'ashed',\r\n    'ashes',\r\n    'ashet',\r\n    'asked',\r\n    'asker',\r\n    'askoi',\r\n    'askos',\r\n    'aspen',\r\n    'asper',\r\n    'aspic',\r\n    'aspie',\r\n    'aspis',\r\n    'aspro',\r\n    'assai',\r\n    'assam',\r\n    'asses',\r\n    'assez',\r\n    'assot',\r\n    'aster',\r\n    'astir',\r\n    'astun',\r\n    'asura',\r\n    'asway',\r\n    'aswim',\r\n    'asyla',\r\n    'ataps',\r\n    'ataxy',\r\n    'atigi',\r\n    'atilt',\r\n    'atimy',\r\n    'atlas',\r\n    'atman',\r\n    'atmas',\r\n    'atmos',\r\n    'atocs',\r\n    'atoke',\r\n    'atoks',\r\n    'atoms',\r\n    'atomy',\r\n    'atony',\r\n    'atopy',\r\n    'atria',\r\n    'atrip',\r\n    'attap',\r\n    'attar',\r\n    'atuas',\r\n    'audad',\r\n    'auger',\r\n    'aught',\r\n    'aulas',\r\n    'aulic',\r\n    'auloi',\r\n    'aulos',\r\n    'aumil',\r\n    'aunes',\r\n    'aunts',\r\n    'aurae',\r\n    'aural',\r\n    'aurar',\r\n    'auras',\r\n    'aurei',\r\n    'aures',\r\n    'auric',\r\n    'auris',\r\n    'aurum',\r\n    'autos',\r\n    'auxin',\r\n    'avale',\r\n    'avant',\r\n    'avast',\r\n    'avels',\r\n    'avens',\r\n    'avers',\r\n    'avgas',\r\n    'avine',\r\n    'avion',\r\n    'avise',\r\n    'aviso',\r\n    'avize',\r\n    'avows',\r\n    'avyze',\r\n    'awarn',\r\n    'awato',\r\n    'awave',\r\n    'aways',\r\n    'awdls',\r\n    'aweel',\r\n    'aweto',\r\n    'awing',\r\n    'awmry',\r\n    'awned',\r\n    'awner',\r\n    'awols',\r\n    'awork',\r\n    'axels',\r\n    'axile',\r\n    'axils',\r\n    'axing',\r\n    'axite',\r\n    'axled',\r\n    'axles',\r\n    'axman',\r\n    'axmen',\r\n    'axoid',\r\n    'axone',\r\n    'axons',\r\n    'ayahs',\r\n    'ayaya',\r\n    'ayelp',\r\n    'aygre',\r\n    'ayins',\r\n    'ayont',\r\n    'ayres',\r\n    'ayrie',\r\n    'azans',\r\n    'azide',\r\n    'azido',\r\n    'azine',\r\n    'azlon',\r\n    'azoic',\r\n    'azole',\r\n    'azons',\r\n    'azote',\r\n    'azoth',\r\n    'azuki',\r\n    'azurn',\r\n    'azury',\r\n    'azygy',\r\n    'azyme',\r\n    'azyms',\r\n    'baaed',\r\n    'baals',\r\n    'babas',\r\n    'babel',\r\n    'babes',\r\n    'babka',\r\n    'baboo',\r\n    'babul',\r\n    'babus',\r\n    'bacca',\r\n    'bacco',\r\n    'baccy',\r\n    'bacha',\r\n    'bachs',\r\n    'backs',\r\n    'baddy',\r\n    'baels',\r\n    'baffs',\r\n    'baffy',\r\n    'bafts',\r\n    'baghs',\r\n    'bagie',\r\n    'bahts',\r\n    'bahus',\r\n    'bahut',\r\n    'bails',\r\n    'bairn',\r\n    'baisa',\r\n    'baith',\r\n    'baits',\r\n    'baiza',\r\n    'baize',\r\n    'bajan',\r\n    'bajra',\r\n    'bajri',\r\n    'bajus',\r\n    'baked',\r\n    'baken',\r\n    'bakes',\r\n    'bakra',\r\n    'balas',\r\n    'balds',\r\n    'baldy',\r\n    'baled',\r\n    'bales',\r\n    'balks',\r\n    'balky',\r\n    'balls',\r\n    'bally',\r\n    'balms',\r\n    'baloo',\r\n    'balsa',\r\n    'balti',\r\n    'balun',\r\n    'balus',\r\n    'bambi',\r\n    'banak',\r\n    'banco',\r\n    'bancs',\r\n    'banda',\r\n    'bandh',\r\n    'bands',\r\n    'bandy',\r\n    'baned',\r\n    'banes',\r\n    'bangs',\r\n    'bania',\r\n    'banks',\r\n    'banns',\r\n    'bants',\r\n    'bantu',\r\n    'banty',\r\n    'banya',\r\n    'bapus',\r\n    'barbe',\r\n    'barbs',\r\n    'barby',\r\n    'barca',\r\n    'barde',\r\n    'bardo',\r\n    'bards',\r\n    'bardy',\r\n    'bared',\r\n    'barer',\r\n    'bares',\r\n    'barfi',\r\n    'barfs',\r\n    'baric',\r\n    'barks',\r\n    'barky',\r\n    'barms',\r\n    'barmy',\r\n    'barns',\r\n    'barny',\r\n    'barps',\r\n    'barra',\r\n    'barre',\r\n    'barro',\r\n    'barry',\r\n    'barye',\r\n    'basan',\r\n    'based',\r\n    'basen',\r\n    'baser',\r\n    'bases',\r\n    'basho',\r\n    'basij',\r\n    'basks',\r\n    'bason',\r\n    'basse',\r\n    'bassi',\r\n    'basso',\r\n    'bassy',\r\n    'basta',\r\n    'basti',\r\n    'basto',\r\n    'basts',\r\n    'bated',\r\n    'bates',\r\n    'baths',\r\n    'batik',\r\n    'batta',\r\n    'batts',\r\n    'battu',\r\n    'bauds',\r\n    'bauks',\r\n    'baulk',\r\n    'baurs',\r\n    'bavin',\r\n    'bawds',\r\n    'bawks',\r\n    'bawls',\r\n    'bawns',\r\n    'bawrs',\r\n    'bawty',\r\n    'bayed',\r\n    'bayer',\r\n    'bayes',\r\n    'bayle',\r\n    'bayts',\r\n    'bazar',\r\n    'bazoo',\r\n    'beads',\r\n    'beaks',\r\n    'beaky',\r\n    'beals',\r\n    'beams',\r\n    'beamy',\r\n    'beano',\r\n    'beans',\r\n    'beany',\r\n    'beare',\r\n    'bears',\r\n    'beath',\r\n    'beats',\r\n    'beaty',\r\n    'beaus',\r\n    'beaut',\r\n    'beaux',\r\n    'bebop',\r\n    'becap',\r\n    'becke',\r\n    'becks',\r\n    'bedad',\r\n    'bedel',\r\n    'bedes',\r\n    'bedew',\r\n    'bedim',\r\n    'bedye',\r\n    'beedi',\r\n    'beefs',\r\n    'beeps',\r\n    'beers',\r\n    'beery',\r\n    'beets',\r\n    'befog',\r\n    'begad',\r\n    'begar',\r\n    'begem',\r\n    'begot',\r\n    'begum',\r\n    'beige',\r\n    'beigy',\r\n    'beins',\r\n    'bekah',\r\n    'belah',\r\n    'belar',\r\n    'belay',\r\n    'belee',\r\n    'belga',\r\n    'bells',\r\n    'belon',\r\n    'belts',\r\n    'bemad',\r\n    'bemas',\r\n    'bemix',\r\n    'bemud',\r\n    'bends',\r\n    'bendy',\r\n    'benes',\r\n    'benet',\r\n    'benga',\r\n    'benis',\r\n    'benne',\r\n    'benni',\r\n    'benny',\r\n    'bento',\r\n    'bents',\r\n    'benty',\r\n    'bepat',\r\n    'beray',\r\n    'beres',\r\n    'bergs',\r\n    'berko',\r\n    'berks',\r\n    'berme',\r\n    'berms',\r\n    'berob',\r\n    'beryl',\r\n    'besat',\r\n    'besaw',\r\n    'besee',\r\n    'beses',\r\n    'besit',\r\n    'besom',\r\n    'besot',\r\n    'besti',\r\n    'bests',\r\n    'betas',\r\n    'beted',\r\n    'betes',\r\n    'beths',\r\n    'betid',\r\n    'beton',\r\n    'betta',\r\n    'betty',\r\n    'bever',\r\n    'bevor',\r\n    'bevue',\r\n    'bevvy',\r\n    'bewet',\r\n    'bewig',\r\n    'bezes',\r\n    'bezil',\r\n    'bezzy',\r\n    'bhais',\r\n    'bhaji',\r\n    'bhang',\r\n    'bhats',\r\n    'bhels',\r\n    'bhoot',\r\n    'bhuna',\r\n    'bhuts',\r\n    'biach',\r\n    'biali',\r\n    'bialy',\r\n    'bibbs',\r\n    'bibes',\r\n    'biccy',\r\n    'bices',\r\n    'bided',\r\n    'bider',\r\n    'bides',\r\n    'bidet',\r\n    'bidis',\r\n    'bidon',\r\n    'bield',\r\n    'biers',\r\n    'biffo',\r\n    'biffs',\r\n    'biffy',\r\n    'bifid',\r\n    'bigae',\r\n    'biggs',\r\n    'biggy',\r\n    'bigha',\r\n    'bight',\r\n    'bigly',\r\n    'bigos',\r\n    'bijou',\r\n    'biked',\r\n    'biker',\r\n    'bikes',\r\n    'bikie',\r\n    'bilbo',\r\n    'bilby',\r\n    'biled',\r\n    'biles',\r\n    'bilgy',\r\n    'bilks',\r\n    'bills',\r\n    'bimah',\r\n    'bimas',\r\n    'bimbo',\r\n    'binal',\r\n    'bindi',\r\n    'binds',\r\n    'biner',\r\n    'bines',\r\n    'bings',\r\n    'bingy',\r\n    'binit',\r\n    'binks',\r\n    'bints',\r\n    'biogs',\r\n    'biont',\r\n    'biota',\r\n    'biped',\r\n    'bipod',\r\n    'birds',\r\n    'birks',\r\n    'birle',\r\n    'birls',\r\n    'biros',\r\n    'birrs',\r\n    'birse',\r\n    'birsy',\r\n    'bises',\r\n    'bisks',\r\n    'bisom',\r\n    'bitch',\r\n    'biter',\r\n    'bites',\r\n    'bitos',\r\n    'bitou',\r\n    'bitsy',\r\n    'bitte',\r\n    'bitts',\r\n    'bivia',\r\n    'bivvy',\r\n    'bizes',\r\n    'bizzo',\r\n    'bizzy',\r\n    'blabs',\r\n    'blads',\r\n    'blady',\r\n    'blaer',\r\n    'blaes',\r\n    'blaff',\r\n    'blags',\r\n    'blahs',\r\n    'blain',\r\n    'blams',\r\n    'blart',\r\n    'blase',\r\n    'blash',\r\n    'blate',\r\n    'blats',\r\n    'blatt',\r\n    'blaud',\r\n    'blawn',\r\n    'blaws',\r\n    'blays',\r\n    'blear',\r\n    'blebs',\r\n    'blech',\r\n    'blees',\r\n    'blent',\r\n    'blert',\r\n    'blest',\r\n    'blets',\r\n    'bleys',\r\n    'blimy',\r\n    'bling',\r\n    'blini',\r\n    'blins',\r\n    'bliny',\r\n    'blips',\r\n    'blist',\r\n    'blite',\r\n    'blits',\r\n    'blive',\r\n    'blobs',\r\n    'blocs',\r\n    'blogs',\r\n    'blook',\r\n    'bloop',\r\n    'blore',\r\n    'blots',\r\n    'blows',\r\n    'blowy',\r\n    'blubs',\r\n    'blude',\r\n    'bluds',\r\n    'bludy',\r\n    'blued',\r\n    'blues',\r\n    'bluet',\r\n    'bluey',\r\n    'bluid',\r\n    'blume',\r\n    'blunk',\r\n    'blurs',\r\n    'blype',\r\n    'boabs',\r\n    'boaks',\r\n    'boars',\r\n    'boart',\r\n    'boats',\r\n    'bobac',\r\n    'bobak',\r\n    'bobas',\r\n    'bobol',\r\n    'bobos',\r\n    'bocca',\r\n    'bocce',\r\n    'bocci',\r\n    'boche',\r\n    'bocks',\r\n    'boded',\r\n    'bodes',\r\n    'bodge',\r\n    'bodhi',\r\n    'bodle',\r\n    'boeps',\r\n    'boets',\r\n    'boeuf',\r\n    'boffo',\r\n    'boffs',\r\n    'bogan',\r\n    'bogey',\r\n    'boggy',\r\n    'bogie',\r\n    'bogle',\r\n    'bogue',\r\n    'bogus',\r\n    'bohea',\r\n    'bohos',\r\n    'boils',\r\n    'boing',\r\n    'boink',\r\n    'boite',\r\n    'boked',\r\n    'bokeh',\r\n    'bokes',\r\n    'bokos',\r\n    'bolar',\r\n    'bolas',\r\n    'bolds',\r\n    'boles',\r\n    'bolix',\r\n    'bolls',\r\n    'bolos',\r\n    'bolts',\r\n    'bolus',\r\n    'bomas',\r\n    'bombe',\r\n    'bombo',\r\n    'bombs',\r\n    'bonce',\r\n    'bonds',\r\n    'boned',\r\n    'boner',\r\n    'bones',\r\n    'bongs',\r\n    'bonie',\r\n    'bonks',\r\n    'bonne',\r\n    'bonny',\r\n    'bonza',\r\n    'bonze',\r\n    'booai',\r\n    'booay',\r\n    'boobs',\r\n    'boody',\r\n    'booed',\r\n    'boofy',\r\n    'boogy',\r\n    'boohs',\r\n    'books',\r\n    'booky',\r\n    'bools',\r\n    'booms',\r\n    'boomy',\r\n    'boong',\r\n    'boons',\r\n    'boord',\r\n    'boors',\r\n    'boose',\r\n    'boots',\r\n    'boppy',\r\n    'borak',\r\n    'boral',\r\n    'boras',\r\n    'borde',\r\n    'bords',\r\n    'bored',\r\n    'boree',\r\n    'borel',\r\n    'borer',\r\n    'bores',\r\n    'borgo',\r\n    'boric',\r\n    'borks',\r\n    'borms',\r\n    'borna',\r\n    'boron',\r\n    'borts',\r\n    'borty',\r\n    'bortz',\r\n    'bosie',\r\n    'bosks',\r\n    'bosky',\r\n    'boson',\r\n    'bosun',\r\n    'botas',\r\n    'botel',\r\n    'botes',\r\n    'bothy',\r\n    'botte',\r\n    'botts',\r\n    'botty',\r\n    'bouge',\r\n    'bouks',\r\n    'boult',\r\n    'bouns',\r\n    'bourd',\r\n    'bourg',\r\n    'bourn',\r\n    'bouse',\r\n    'bousy',\r\n    'bouts',\r\n    'bovid',\r\n    'bowat',\r\n    'bowed',\r\n    'bower',\r\n    'bowes',\r\n    'bowet',\r\n    'bowie',\r\n    'bowls',\r\n    'bowne',\r\n    'bowrs',\r\n    'bowse',\r\n    'boxed',\r\n    'boxen',\r\n    'boxes',\r\n    'boxla',\r\n    'boxty',\r\n    'boyar',\r\n    'boyau',\r\n    'boyed',\r\n    'boyfs',\r\n    'boygs',\r\n    'boyla',\r\n    'boyos',\r\n    'boysy',\r\n    'bozos',\r\n    'braai',\r\n    'brach',\r\n    'brack',\r\n    'bract',\r\n    'brads',\r\n    'braes',\r\n    'brags',\r\n    'brail',\r\n    'braks',\r\n    'braky',\r\n    'brame',\r\n    'brane',\r\n    'brank',\r\n    'brans',\r\n    'brant',\r\n    'brast',\r\n    'brats',\r\n    'brava',\r\n    'bravi',\r\n    'braws',\r\n    'braxy',\r\n    'brays',\r\n    'braza',\r\n    'braze',\r\n    'bream',\r\n    'brede',\r\n    'breds',\r\n    'breem',\r\n    'breer',\r\n    'brees',\r\n    'breid',\r\n    'breis',\r\n    'breme',\r\n    'brens',\r\n    'brent',\r\n    'brere',\r\n    'brers',\r\n    'breve',\r\n    'brews',\r\n    'breys',\r\n    'brier',\r\n    'bries',\r\n    'brigs',\r\n    'briki',\r\n    'briks',\r\n    'brill',\r\n    'brims',\r\n    'brins',\r\n    'brios',\r\n    'brise',\r\n    'briss',\r\n    'brith',\r\n    'brits',\r\n    'britt',\r\n    'brize',\r\n    'broch',\r\n    'brock',\r\n    'brods',\r\n    'brogh',\r\n    'brogs',\r\n    'brome',\r\n    'bromo',\r\n    'bronc',\r\n    'brond',\r\n    'brool',\r\n    'broos',\r\n    'brose',\r\n    'brosy',\r\n    'brows',\r\n    'brugh',\r\n    'bruin',\r\n    'bruit',\r\n    'brule',\r\n    'brume',\r\n    'brung',\r\n    'brusk',\r\n    'brust',\r\n    'bruts',\r\n    'buats',\r\n    'buaze',\r\n    'bubal',\r\n    'bubas',\r\n    'bubba',\r\n    'bubbe',\r\n    'bubby',\r\n    'bubus',\r\n    'buchu',\r\n    'bucko',\r\n    'bucks',\r\n    'bucku',\r\n    'budas',\r\n    'budis',\r\n    'budos',\r\n    'buffa',\r\n    'buffe',\r\n    'buffi',\r\n    'buffo',\r\n    'buffs',\r\n    'buffy',\r\n    'bufos',\r\n    'bufty',\r\n    'buhls',\r\n    'buhrs',\r\n    'buiks',\r\n    'buist',\r\n    'bukes',\r\n    'bulbs',\r\n    'bulgy',\r\n    'bulks',\r\n    'bulla',\r\n    'bulls',\r\n    'bulse',\r\n    'bumbo',\r\n    'bumfs',\r\n    'bumph',\r\n    'bumps',\r\n    'bumpy',\r\n    'bunas',\r\n    'bunce',\r\n    'bunco',\r\n    'bunde',\r\n    'bundh',\r\n    'bunds',\r\n    'bundt',\r\n    'bundu',\r\n    'bundy',\r\n    'bungs',\r\n    'bungy',\r\n    'bunia',\r\n    'bunje',\r\n    'bunjy',\r\n    'bunko',\r\n    'bunks',\r\n    'bunns',\r\n    'bunts',\r\n    'bunty',\r\n    'bunya',\r\n    'buoys',\r\n    'buppy',\r\n    'buran',\r\n    'buras',\r\n    'burbs',\r\n    'burds',\r\n    'buret',\r\n    'burfi',\r\n    'burgh',\r\n    'burgs',\r\n    'burin',\r\n    'burka',\r\n    'burke',\r\n    'burks',\r\n    'burls',\r\n    'burns',\r\n    'buroo',\r\n    'burps',\r\n    'burqa',\r\n    'burro',\r\n    'burrs',\r\n    'burry',\r\n    'bursa',\r\n    'burse',\r\n    'busby',\r\n    'buses',\r\n    'busks',\r\n    'busky',\r\n    'bussu',\r\n    'busti',\r\n    'busts',\r\n    'busty',\r\n    'buteo',\r\n    'butes',\r\n    'butle',\r\n    'butoh',\r\n    'butts',\r\n    'butty',\r\n    'butut',\r\n    'butyl',\r\n    'buzzy',\r\n    'bwana',\r\n    'bwazi',\r\n    'byded',\r\n    'bydes',\r\n    'byked',\r\n    'bykes',\r\n    'byres',\r\n    'byrls',\r\n    'byssi',\r\n    'bytes',\r\n    'byway',\r\n    'caaed',\r\n    'cabas',\r\n    'caber',\r\n    'cabob',\r\n    'caboc',\r\n    'cabre',\r\n    'cacas',\r\n    'cacks',\r\n    'cacky',\r\n    'cadee',\r\n    'cades',\r\n    'cadge',\r\n    'cadgy',\r\n    'cadie',\r\n    'cadis',\r\n    'cadre',\r\n    'caeca',\r\n    'caese',\r\n    'cafes',\r\n    'caffs',\r\n    'caged',\r\n    'cager',\r\n    'cages',\r\n    'cagot',\r\n    'cahow',\r\n    'caids',\r\n    'cains',\r\n    'caird',\r\n    'cajon',\r\n    'cajun',\r\n    'caked',\r\n    'cakes',\r\n    'cakey',\r\n    'calfs',\r\n    'calid',\r\n    'calif',\r\n    'calix',\r\n    'calks',\r\n    'calla',\r\n    'calls',\r\n    'calms',\r\n    'calmy',\r\n    'calos',\r\n    'calpa',\r\n    'calps',\r\n    'calve',\r\n    'calyx',\r\n    'caman',\r\n    'camas',\r\n    'cames',\r\n    'camis',\r\n    'camos',\r\n    'campi',\r\n    'campo',\r\n    'camps',\r\n    'campy',\r\n    'camus',\r\n    'caned',\r\n    'caneh',\r\n    'caner',\r\n    'canes',\r\n    'cangs',\r\n    'canid',\r\n    'canna',\r\n    'canns',\r\n    'canso',\r\n    'canst',\r\n    'canto',\r\n    'cants',\r\n    'canty',\r\n    'capas',\r\n    'caped',\r\n    'capes',\r\n    'capex',\r\n    'caphs',\r\n    'capiz',\r\n    'caple',\r\n    'capon',\r\n    'capos',\r\n    'capot',\r\n    'capri',\r\n    'capul',\r\n    'carap',\r\n    'carbo',\r\n    'carbs',\r\n    'carby',\r\n    'cardi',\r\n    'cards',\r\n    'cardy',\r\n    'cared',\r\n    'carer',\r\n    'cares',\r\n    'caret',\r\n    'carex',\r\n    'carks',\r\n    'carle',\r\n    'carls',\r\n    'carns',\r\n    'carny',\r\n    'carob',\r\n    'carom',\r\n    'caron',\r\n    'carpi',\r\n    'carps',\r\n    'carrs',\r\n    'carse',\r\n    'carta',\r\n    'carte',\r\n    'carts',\r\n    'carvy',\r\n    'casas',\r\n    'casco',\r\n    'cased',\r\n    'cases',\r\n    'casks',\r\n    'casky',\r\n    'casts',\r\n    'casus',\r\n    'cates',\r\n    'cauda',\r\n    'cauks',\r\n    'cauld',\r\n    'cauls',\r\n    'caums',\r\n    'caups',\r\n    'cauri',\r\n    'causa',\r\n    'cavas',\r\n    'caved',\r\n    'cavel',\r\n    'caver',\r\n    'caves',\r\n    'cavie',\r\n    'cawed',\r\n    'cawks',\r\n    'caxon',\r\n    'ceaze',\r\n    'cebid',\r\n    'cecal',\r\n    'cecum',\r\n    'ceded',\r\n    'ceder',\r\n    'cedes',\r\n    'cedis',\r\n    'ceiba',\r\n    'ceili',\r\n    'ceils',\r\n    'celeb',\r\n    'cella',\r\n    'celli',\r\n    'cells',\r\n    'celom',\r\n    'celts',\r\n    'cense',\r\n    'cento',\r\n    'cents',\r\n    'centu',\r\n    'ceorl',\r\n    'cepes',\r\n    'cerci',\r\n    'cered',\r\n    'ceres',\r\n    'cerge',\r\n    'ceria',\r\n    'ceric',\r\n    'cerne',\r\n    'ceroc',\r\n    'ceros',\r\n    'certs',\r\n    'certy',\r\n    'cesse',\r\n    'cesta',\r\n    'cesti',\r\n    'cetes',\r\n    'cetyl',\r\n    'cezve',\r\n    'chace',\r\n    'chack',\r\n    'chaco',\r\n    'chado',\r\n    'chads',\r\n    'chaft',\r\n    'chais',\r\n    'chals',\r\n    'chams',\r\n    'chana',\r\n    'chang',\r\n    'chank',\r\n    'chape',\r\n    'chaps',\r\n    'chapt',\r\n    'chara',\r\n    'chare',\r\n    'chark',\r\n    'charr',\r\n    'chars',\r\n    'chary',\r\n    'chats',\r\n    'chave',\r\n    'chavs',\r\n    'chawk',\r\n    'chaws',\r\n    'chaya',\r\n    'chays',\r\n    'cheep',\r\n    'chefs',\r\n    'cheka',\r\n    'chela',\r\n    'chelp',\r\n    'chemo',\r\n    'chems',\r\n    'chere',\r\n    'chert',\r\n    'cheth',\r\n    'chevy',\r\n    'chews',\r\n    'chewy',\r\n    'chiao',\r\n    'chias',\r\n    'chibs',\r\n    'chica',\r\n    'chich',\r\n    'chico',\r\n    'chics',\r\n    'chiel',\r\n    'chiks',\r\n    'chile',\r\n    'chimb',\r\n    'chimo',\r\n    'chimp',\r\n    'chine',\r\n    'ching',\r\n    'chink',\r\n    'chino',\r\n    'chins',\r\n    'chips',\r\n    'chirk',\r\n    'chirl',\r\n    'chirm',\r\n    'chiro',\r\n    'chirr',\r\n    'chirt',\r\n    'chiru',\r\n    'chits',\r\n    'chive',\r\n    'chivs',\r\n    'chivy',\r\n    'chizz',\r\n    'choco',\r\n    'chocs',\r\n    'chode',\r\n    'chogs',\r\n    'choil',\r\n    'choko',\r\n    'choky',\r\n    'chola',\r\n    'choli',\r\n    'cholo',\r\n    'chomp',\r\n    'chons',\r\n    'choof',\r\n    'chook',\r\n    'choom',\r\n    'choon',\r\n    'chops',\r\n    'chota',\r\n    'chott',\r\n    'chout',\r\n    'choux',\r\n    'chowk',\r\n    'chows',\r\n    'chubs',\r\n    'chufa',\r\n    'chuff',\r\n    'chugs',\r\n    'chums',\r\n    'churl',\r\n    'churr',\r\n    'chuse',\r\n    'chuts',\r\n    'chyle',\r\n    'chyme',\r\n    'chynd',\r\n    'cibol',\r\n    'cided',\r\n    'cides',\r\n    'ciels',\r\n    'ciggy',\r\n    'cilia',\r\n    'cills',\r\n    'cimar',\r\n    'cimex',\r\n    'cinct',\r\n    'cines',\r\n    'cinqs',\r\n    'cions',\r\n    'cippi',\r\n    'circs',\r\n    'cires',\r\n    'cirls',\r\n    'cirri',\r\n    'cisco',\r\n    'cissy',\r\n    'cists',\r\n    'cital',\r\n    'cited',\r\n    'citer',\r\n    'cites',\r\n    'cives',\r\n    'civet',\r\n    'civie',\r\n    'civvy',\r\n    'clach',\r\n    'clade',\r\n    'clads',\r\n    'claes',\r\n    'clags',\r\n    'clame',\r\n    'clams',\r\n    'clans',\r\n    'claps',\r\n    'clapt',\r\n    'claro',\r\n    'clart',\r\n    'clary',\r\n    'clast',\r\n    'clats',\r\n    'claut',\r\n    'clave',\r\n    'clavi',\r\n    'claws',\r\n    'clays',\r\n    'cleck',\r\n    'cleek',\r\n    'cleep',\r\n    'clefs',\r\n    'clegs',\r\n    'cleik',\r\n    'clems',\r\n    'clepe',\r\n    'clept',\r\n    'cleve',\r\n    'clews',\r\n    'clied',\r\n    'clies',\r\n    'clift',\r\n    'clime',\r\n    'cline',\r\n    'clint',\r\n    'clipe',\r\n    'clips',\r\n    'clipt',\r\n    'clits',\r\n    'cloam',\r\n    'clods',\r\n    'cloff',\r\n    'clogs',\r\n    'cloke',\r\n    'clomb',\r\n    'clomp',\r\n    'clonk',\r\n    'clons',\r\n    'cloop',\r\n    'cloot',\r\n    'clops',\r\n    'clote',\r\n    'clots',\r\n    'clour',\r\n    'clous',\r\n    'clows',\r\n    'cloye',\r\n    'cloys',\r\n    'cloze',\r\n    'clubs',\r\n    'clues',\r\n    'cluey',\r\n    'clunk',\r\n    'clype',\r\n    'cnida',\r\n    'coact',\r\n    'coady',\r\n    'coala',\r\n    'coals',\r\n    'coaly',\r\n    'coapt',\r\n    'coarb',\r\n    'coate',\r\n    'coati',\r\n    'coats',\r\n    'cobbs',\r\n    'cobby',\r\n    'cobia',\r\n    'coble',\r\n    'cobza',\r\n    'cocas',\r\n    'cocci',\r\n    'cocco',\r\n    'cocks',\r\n    'cocky',\r\n    'cocos',\r\n    'codas',\r\n    'codec',\r\n    'coded',\r\n    'coden',\r\n    'coder',\r\n    'codes',\r\n    'codex',\r\n    'codon',\r\n    'coeds',\r\n    'coffs',\r\n    'cogie',\r\n    'cogon',\r\n    'cogue',\r\n    'cohab',\r\n    'cohen',\r\n    'cohoe',\r\n    'cohog',\r\n    'cohos',\r\n    'coifs',\r\n    'coign',\r\n    'coils',\r\n    'coins',\r\n    'coirs',\r\n    'coits',\r\n    'coked',\r\n    'cokes',\r\n    'colas',\r\n    'colby',\r\n    'colds',\r\n    'coled',\r\n    'coles',\r\n    'coley',\r\n    'colic',\r\n    'colin',\r\n    'colls',\r\n    'colly',\r\n    'colog',\r\n    'colts',\r\n    'colza',\r\n    'comae',\r\n    'comal',\r\n    'comas',\r\n    'combe',\r\n    'combi',\r\n    'combo',\r\n    'combs',\r\n    'comby',\r\n    'comer',\r\n    'comes',\r\n    'comix',\r\n    'commo',\r\n    'comms',\r\n    'commy',\r\n    'compo',\r\n    'comps',\r\n    'compt',\r\n    'comte',\r\n    'comus',\r\n    'coned',\r\n    'cones',\r\n    'coney',\r\n    'confs',\r\n    'conga',\r\n    'conge',\r\n    'congo',\r\n    'conia',\r\n    'conin',\r\n    'conks',\r\n    'conky',\r\n    'conne',\r\n    'conns',\r\n    'conte',\r\n    'conto',\r\n    'conus',\r\n    'convo',\r\n    'cooch',\r\n    'cooed',\r\n    'cooee',\r\n    'cooer',\r\n    'cooey',\r\n    'coofs',\r\n    'cooks',\r\n    'cooky',\r\n    'cools',\r\n    'cooly',\r\n    'coomb',\r\n    'cooms',\r\n    'coomy',\r\n    'coons',\r\n    'coops',\r\n    'coopt',\r\n    'coost',\r\n    'coots',\r\n    'cooze',\r\n    'copal',\r\n    'copay',\r\n    'coped',\r\n    'copen',\r\n    'coper',\r\n    'copes',\r\n    'coppy',\r\n    'copra',\r\n    'copsy',\r\n    'coqui',\r\n    'coram',\r\n    'corbe',\r\n    'corby',\r\n    'cords',\r\n    'cored',\r\n    'cores',\r\n    'corey',\r\n    'corgi',\r\n    'coria',\r\n    'corks',\r\n    'corky',\r\n    'corms',\r\n    'corni',\r\n    'corno',\r\n    'corns',\r\n    'cornu',\r\n    'corps',\r\n    'corse',\r\n    'corso',\r\n    'cosec',\r\n    'cosed',\r\n    'coses',\r\n    'coset',\r\n    'cosey',\r\n    'cosie',\r\n    'costa',\r\n    'coste',\r\n    'costs',\r\n    'cotan',\r\n    'coted',\r\n    'cotes',\r\n    'coths',\r\n    'cotta',\r\n    'cotts',\r\n    'coude',\r\n    'coups',\r\n    'courb',\r\n    'courd',\r\n    'coure',\r\n    'cours',\r\n    'couta',\r\n    'couth',\r\n    'coved',\r\n    'coves',\r\n    'covin',\r\n    'cowal',\r\n    'cowan',\r\n    'cowed',\r\n    'cowks',\r\n    'cowls',\r\n    'cowps',\r\n    'cowry',\r\n    'coxae',\r\n    'coxal',\r\n    'coxed',\r\n    'coxes',\r\n    'coxib',\r\n    'coyau',\r\n    'coyed',\r\n    'coyer',\r\n    'coypu',\r\n    'cozed',\r\n    'cozen',\r\n    'cozes',\r\n    'cozey',\r\n    'cozie',\r\n    'craal',\r\n    'crabs',\r\n    'crags',\r\n    'craic',\r\n    'craig',\r\n    'crake',\r\n    'crame',\r\n    'crams',\r\n    'crans',\r\n    'crape',\r\n    'craps',\r\n    'crapy',\r\n    'crare',\r\n    'craws',\r\n    'crays',\r\n    'creds',\r\n    'creel',\r\n    'crees',\r\n    'crems',\r\n    'crena',\r\n    'creps',\r\n    'crepy',\r\n    'crewe',\r\n    'crews',\r\n    'crias',\r\n    'cribs',\r\n    'cries',\r\n    'crims',\r\n    'crine',\r\n    'crios',\r\n    'cripe',\r\n    'crips',\r\n    'crise',\r\n    'crith',\r\n    'crits',\r\n    'croci',\r\n    'crocs',\r\n    'croft',\r\n    'crogs',\r\n    'cromb',\r\n    'crome',\r\n    'cronk',\r\n    'crons',\r\n    'crool',\r\n    'croon',\r\n    'crops',\r\n    'crore',\r\n    'crost',\r\n    'crout',\r\n    'crows',\r\n    'croze',\r\n    'cruck',\r\n    'crudo',\r\n    'cruds',\r\n    'crudy',\r\n    'crues',\r\n    'cruet',\r\n    'cruft',\r\n    'crunk',\r\n    'cruor',\r\n    'crura',\r\n    'cruse',\r\n    'crusy',\r\n    'cruve',\r\n    'crwth',\r\n    'cryer',\r\n    'ctene',\r\n    'cubby',\r\n    'cubeb',\r\n    'cubed',\r\n    'cuber',\r\n    'cubes',\r\n    'cubit',\r\n    'cuddy',\r\n    'cuffo',\r\n    'cuffs',\r\n    'cuifs',\r\n    'cuing',\r\n    'cuish',\r\n    'cuits',\r\n    'cukes',\r\n    'culch',\r\n    'culet',\r\n    'culex',\r\n    'culls',\r\n    'cully',\r\n    'culms',\r\n    'culpa',\r\n    'culti',\r\n    'cults',\r\n    'culty',\r\n    'cumec',\r\n    'cundy',\r\n    'cunei',\r\n    'cunit',\r\n    'cunts',\r\n    'cupel',\r\n    'cupid',\r\n    'cuppa',\r\n    'cuppy',\r\n    'curat',\r\n    'curbs',\r\n    'curch',\r\n    'curds',\r\n    'curdy',\r\n    'cured',\r\n    'curer',\r\n    'cures',\r\n    'curet',\r\n    'curfs',\r\n    'curia',\r\n    'curie',\r\n    'curli',\r\n    'curls',\r\n    'curns',\r\n    'curny',\r\n    'currs',\r\n    'cursi',\r\n    'curst',\r\n    'cusec',\r\n    'cushy',\r\n    'cusks',\r\n    'cusps',\r\n    'cuspy',\r\n    'cusso',\r\n    'cusum',\r\n    'cutch',\r\n    'cuter',\r\n    'cutes',\r\n    'cutey',\r\n    'cutin',\r\n    'cutis',\r\n    'cutto',\r\n    'cutty',\r\n    'cutup',\r\n    'cuvee',\r\n    'cuzes',\r\n    'cwtch',\r\n    'cyano',\r\n    'cyans',\r\n    'cycad',\r\n    'cycas',\r\n    'cyclo',\r\n    'cyder',\r\n    'cylix',\r\n    'cymae',\r\n    'cymar',\r\n    'cymas',\r\n    'cymes',\r\n    'cymol',\r\n    'cysts',\r\n    'cytes',\r\n    'cyton',\r\n    'czars',\r\n    'daals',\r\n    'dabba',\r\n    'daces',\r\n    'dacha',\r\n    'dacks',\r\n    'dadah',\r\n    'dadas',\r\n    'dados',\r\n    'daffs',\r\n    'daffy',\r\n    'dagga',\r\n    'daggy',\r\n    'dagos',\r\n    'dahls',\r\n    'daiko',\r\n    'daine',\r\n    'daint',\r\n    'daker',\r\n    'daled',\r\n    'dales',\r\n    'dalis',\r\n    'dalle',\r\n    'dalts',\r\n    'daman',\r\n    'damar',\r\n    'dames',\r\n    'damme',\r\n    'damns',\r\n    'damps',\r\n    'dampy',\r\n    'dancy',\r\n    'dangs',\r\n    'danio',\r\n    'danks',\r\n    'danny',\r\n    'dants',\r\n    'daraf',\r\n    'darbs',\r\n    'darcy',\r\n    'dared',\r\n    'darer',\r\n    'dares',\r\n    'darga',\r\n    'dargs',\r\n    'daric',\r\n    'daris',\r\n    'darks',\r\n    'darky',\r\n    'darns',\r\n    'darre',\r\n    'darts',\r\n    'darzi',\r\n    'dashi',\r\n    'dashy',\r\n    'datal',\r\n    'dated',\r\n    'dater',\r\n    'dates',\r\n    'datos',\r\n    'datto',\r\n    'daube',\r\n    'daubs',\r\n    'dauby',\r\n    'dauds',\r\n    'dault',\r\n    'daurs',\r\n    'dauts',\r\n    'daven',\r\n    'davit',\r\n    'dawah',\r\n    'dawds',\r\n    'dawed',\r\n    'dawen',\r\n    'dawks',\r\n    'dawns',\r\n    'dawts',\r\n    'dayan',\r\n    'daych',\r\n    'daynt',\r\n    'dazed',\r\n    'dazer',\r\n    'dazes',\r\n    'deads',\r\n    'deair',\r\n    'deals',\r\n    'deans',\r\n    'deare',\r\n    'dearn',\r\n    'dears',\r\n    'deary',\r\n    'deash',\r\n    'deave',\r\n    'deaws',\r\n    'deawy',\r\n    'debag',\r\n    'debby',\r\n    'debel',\r\n    'debes',\r\n    'debts',\r\n    'debud',\r\n    'debur',\r\n    'debus',\r\n    'debye',\r\n    'decad',\r\n    'decaf',\r\n    'decan',\r\n    'decko',\r\n    'decks',\r\n    'decos',\r\n    'dedal',\r\n    'deeds',\r\n    'deedy',\r\n    'deely',\r\n    'deems',\r\n    'deens',\r\n    'deeps',\r\n    'deere',\r\n    'deers',\r\n    'deets',\r\n    'deeve',\r\n    'deevs',\r\n    'defat',\r\n    'deffo',\r\n    'defis',\r\n    'defog',\r\n    'degas',\r\n    'degum',\r\n    'degus',\r\n    'deice',\r\n    'deids',\r\n    'deify',\r\n    'deils',\r\n    'deism',\r\n    'deist',\r\n    'deked',\r\n    'dekes',\r\n    'dekko',\r\n    'deled',\r\n    'deles',\r\n    'delfs',\r\n    'delft',\r\n    'delis',\r\n    'dells',\r\n    'delly',\r\n    'delos',\r\n    'delph',\r\n    'delts',\r\n    'deman',\r\n    'demes',\r\n    'demic',\r\n    'demit',\r\n    'demob',\r\n    'demoi',\r\n    'demos',\r\n    'dempt',\r\n    'denar',\r\n    'denay',\r\n    'dench',\r\n    'denes',\r\n    'denet',\r\n    'denis',\r\n    'dents',\r\n    'deoxy',\r\n    'derat',\r\n    'deray',\r\n    'dered',\r\n    'deres',\r\n    'derig',\r\n    'derma',\r\n    'derms',\r\n    'derns',\r\n    'derny',\r\n    'deros',\r\n    'derro',\r\n    'derry',\r\n    'derth',\r\n    'dervs',\r\n    'desex',\r\n    'deshi',\r\n    'desis',\r\n    'desks',\r\n    'desse',\r\n    'devas',\r\n    'devel',\r\n    'devis',\r\n    'devon',\r\n    'devos',\r\n    'devot',\r\n    'dewan',\r\n    'dewar',\r\n    'dewax',\r\n    'dewed',\r\n    'dexes',\r\n    'dexie',\r\n    'dhaba',\r\n    'dhaks',\r\n    'dhals',\r\n    'dhikr',\r\n    'dhobi',\r\n    'dhole',\r\n    'dholl',\r\n    'dhols',\r\n    'dhoti',\r\n    'dhows',\r\n    'dhuti',\r\n    'diact',\r\n    'dials',\r\n    'diane',\r\n    'diazo',\r\n    'dibbs',\r\n    'diced',\r\n    'dicer',\r\n    'dices',\r\n    'dicht',\r\n    'dicks',\r\n    'dicky',\r\n    'dicot',\r\n    'dicta',\r\n    'dicts',\r\n    'dicty',\r\n    'diddy',\r\n    'didie',\r\n    'didos',\r\n    'didst',\r\n    'diebs',\r\n    'diels',\r\n    'diene',\r\n    'diets',\r\n    'diffs',\r\n    'dight',\r\n    'dikas',\r\n    'diked',\r\n    'diker',\r\n    'dikes',\r\n    'dikey',\r\n    'dildo',\r\n    'dilli',\r\n    'dills',\r\n    'dimbo',\r\n    'dimer',\r\n    'dimes',\r\n    'dimps',\r\n    'dinar',\r\n    'dined',\r\n    'dines',\r\n    'dinge',\r\n    'dings',\r\n    'dinic',\r\n    'dinks',\r\n    'dinky',\r\n    'dinna',\r\n    'dinos',\r\n    'dints',\r\n    'diols',\r\n    'diota',\r\n    'dippy',\r\n    'dipso',\r\n    'diram',\r\n    'direr',\r\n    'dirke',\r\n    'dirks',\r\n    'dirls',\r\n    'dirts',\r\n    'disas',\r\n    'disci',\r\n    'discs',\r\n    'dishy',\r\n    'disks',\r\n    'disme',\r\n    'dital',\r\n    'ditas',\r\n    'dited',\r\n    'dites',\r\n    'ditsy',\r\n    'ditts',\r\n    'ditzy',\r\n    'divan',\r\n    'divas',\r\n    'dived',\r\n    'dives',\r\n    'divis',\r\n    'divna',\r\n    'divos',\r\n    'divot',\r\n    'divvy',\r\n    'diwan',\r\n    'dixie',\r\n    'dixit',\r\n    'diyas',\r\n    'dizen',\r\n    'djinn',\r\n    'djins',\r\n    'doabs',\r\n    'doats',\r\n    'dobby',\r\n    'dobes',\r\n    'dobie',\r\n    'dobla',\r\n    'dobra',\r\n    'dobro',\r\n    'docht',\r\n    'docks',\r\n    'docos',\r\n    'docus',\r\n    'doddy',\r\n    'dodos',\r\n    'doeks',\r\n    'doers',\r\n    'doest',\r\n    'doeth',\r\n    'doffs',\r\n    'dogan',\r\n    'doges',\r\n    'dogey',\r\n    'doggo',\r\n    'doggy',\r\n    'dogie',\r\n    'dohyo',\r\n    'doilt',\r\n    'doily',\r\n    'doits',\r\n    'dojos',\r\n    'dolce',\r\n    'dolci',\r\n    'doled',\r\n    'doles',\r\n    'dolia',\r\n    'dolls',\r\n    'dolma',\r\n    'dolor',\r\n    'dolos',\r\n    'dolts',\r\n    'domal',\r\n    'domed',\r\n    'domes',\r\n    'domic',\r\n    'donah',\r\n    'donas',\r\n    'donee',\r\n    'doner',\r\n    'donga',\r\n    'dongs',\r\n    'donko',\r\n    'donna',\r\n    'donne',\r\n    'donny',\r\n    'donsy',\r\n    'doobs',\r\n    'dooce',\r\n    'doody',\r\n    'dooks',\r\n    'doole',\r\n    'dools',\r\n    'dooly',\r\n    'dooms',\r\n    'doomy',\r\n    'doona',\r\n    'doorn',\r\n    'doors',\r\n    'doozy',\r\n    'dopas',\r\n    'doped',\r\n    'doper',\r\n    'dopes',\r\n    'dorad',\r\n    'dorba',\r\n    'dorbs',\r\n    'doree',\r\n    'dores',\r\n    'doric',\r\n    'doris',\r\n    'dorks',\r\n    'dorky',\r\n    'dorms',\r\n    'dormy',\r\n    'dorps',\r\n    'dorrs',\r\n    'dorsa',\r\n    'dorse',\r\n    'dorts',\r\n    'dorty',\r\n    'dosai',\r\n    'dosas',\r\n    'dosed',\r\n    'doseh',\r\n    'doser',\r\n    'doses',\r\n    'dosha',\r\n    'dotal',\r\n    'doted',\r\n    'doter',\r\n    'dotes',\r\n    'dotty',\r\n    'douar',\r\n    'douce',\r\n    'doucs',\r\n    'douks',\r\n    'doula',\r\n    'douma',\r\n    'doums',\r\n    'doups',\r\n    'doura',\r\n    'douse',\r\n    'douts',\r\n    'doved',\r\n    'doven',\r\n    'dover',\r\n    'doves',\r\n    'dovie',\r\n    'dowar',\r\n    'dowds',\r\n    'dowed',\r\n    'dower',\r\n    'dowie',\r\n    'dowle',\r\n    'dowls',\r\n    'dowly',\r\n    'downa',\r\n    'downs',\r\n    'dowps',\r\n    'dowse',\r\n    'dowts',\r\n    'doxed',\r\n    'doxes',\r\n    'doxie',\r\n    'doyen',\r\n    'doyly',\r\n    'dozed',\r\n    'dozer',\r\n    'dozes',\r\n    'drabs',\r\n    'drack',\r\n    'draco',\r\n    'draff',\r\n    'drags',\r\n    'drail',\r\n    'drams',\r\n    'drant',\r\n    'draps',\r\n    'drats',\r\n    'drave',\r\n    'draws',\r\n    'drays',\r\n    'drear',\r\n    'dreck',\r\n    'dreed',\r\n    'dreer',\r\n    'drees',\r\n    'dregs',\r\n    'dreks',\r\n    'drent',\r\n    'drere',\r\n    'drest',\r\n    'dreys',\r\n    'dribs',\r\n    'drice',\r\n    'dries',\r\n    'drily',\r\n    'drips',\r\n    'dript',\r\n    'droid',\r\n    'droil',\r\n    'droke',\r\n    'drole',\r\n    'drome',\r\n    'drony',\r\n    'droob',\r\n    'droog',\r\n    'drook',\r\n    'drops',\r\n    'dropt',\r\n    'drouk',\r\n    'drows',\r\n    'drubs',\r\n    'drugs',\r\n    'drums',\r\n    'drupe',\r\n    'druse',\r\n    'drusy',\r\n    'druxy',\r\n    'dryad',\r\n    'dryas',\r\n    'dsobo',\r\n    'dsomo',\r\n    'duads',\r\n    'duals',\r\n    'duans',\r\n    'duars',\r\n    'dubbo',\r\n    'ducal',\r\n    'ducat',\r\n    'duces',\r\n    'ducks',\r\n    'ducky',\r\n    'ducts',\r\n    'duddy',\r\n    'duded',\r\n    'dudes',\r\n    'duels',\r\n    'duets',\r\n    'duett',\r\n    'duffs',\r\n    'dufus',\r\n    'duing',\r\n    'duits',\r\n    'dukas',\r\n    'duked',\r\n    'dukes',\r\n    'dukka',\r\n    'dulce',\r\n    'dules',\r\n    'dulia',\r\n    'dulls',\r\n    'dulse',\r\n    'dumas',\r\n    'dumbo',\r\n    'dumbs',\r\n    'dumka',\r\n    'dumky',\r\n    'dumps',\r\n    'dunam',\r\n    'dunch',\r\n    'dunes',\r\n    'dungs',\r\n    'dungy',\r\n    'dunks',\r\n    'dunno',\r\n    'dunny',\r\n    'dunsh',\r\n    'dunts',\r\n    'duomi',\r\n    'duomo',\r\n    'duped',\r\n    'duper',\r\n    'dupes',\r\n    'duple',\r\n    'duply',\r\n    'duppy',\r\n    'dural',\r\n    'duras',\r\n    'dured',\r\n    'dures',\r\n    'durgy',\r\n    'durns',\r\n    'duroc',\r\n    'duros',\r\n    'duroy',\r\n    'durra',\r\n    'durrs',\r\n    'durry',\r\n    'durst',\r\n    'durum',\r\n    'durzi',\r\n    'dusks',\r\n    'dusts',\r\n    'duxes',\r\n    'dwaal',\r\n    'dwale',\r\n    'dwalm',\r\n    'dwams',\r\n    'dwang',\r\n    'dwaum',\r\n    'dweeb',\r\n    'dwile',\r\n    'dwine',\r\n    'dyads',\r\n    'dyers',\r\n    'dyked',\r\n    'dykes',\r\n    'dykey',\r\n    'dykon',\r\n    'dynel',\r\n    'dynes',\r\n    'dzhos',\r\n    'eagre',\r\n    'ealed',\r\n    'eales',\r\n    'eaned',\r\n    'eards',\r\n    'eared',\r\n    'earls',\r\n    'earns',\r\n    'earnt',\r\n    'earst',\r\n    'eased',\r\n    'easer',\r\n    'eases',\r\n    'easle',\r\n    'easts',\r\n    'eathe',\r\n    'eaved',\r\n    'eaves',\r\n    'ebbed',\r\n    'ebbet',\r\n    'ebons',\r\n    'ebook',\r\n    'ecads',\r\n    'eched',\r\n    'eches',\r\n    'echos',\r\n    'ecrus',\r\n    'edema',\r\n    'edged',\r\n    'edger',\r\n    'edges',\r\n    'edile',\r\n    'edits',\r\n    'educe',\r\n    'educt',\r\n    'eejit',\r\n    'eensy',\r\n    'eeven',\r\n    'eevns',\r\n    'effed',\r\n    'egads',\r\n    'egers',\r\n    'egest',\r\n    'eggar',\r\n    'egged',\r\n    'egger',\r\n    'egmas',\r\n    'ehing',\r\n    'eider',\r\n    'eidos',\r\n    'eigne',\r\n    'eiked',\r\n    'eikon',\r\n    'eilds',\r\n    'eisel',\r\n    'ejido',\r\n    'ekkas',\r\n    'elain',\r\n    'eland',\r\n    'elans',\r\n    'elchi',\r\n    'eldin',\r\n    'elemi',\r\n    'elfed',\r\n    'eliad',\r\n    'elint',\r\n    'elmen',\r\n    'eloge',\r\n    'elogy',\r\n    'eloin',\r\n    'elops',\r\n    'elpee',\r\n    'elsin',\r\n    'elute',\r\n    'elvan',\r\n    'elven',\r\n    'elver',\r\n    'elves',\r\n    'emacs',\r\n    'embar',\r\n    'embay',\r\n    'embog',\r\n    'embow',\r\n    'embox',\r\n    'embus',\r\n    'emeer',\r\n    'emend',\r\n    'emerg',\r\n    'emery',\r\n    'emeus',\r\n    'emics',\r\n    'emirs',\r\n    'emits',\r\n    'emmas',\r\n    'emmer',\r\n    'emmet',\r\n    'emmew',\r\n    'emmys',\r\n    'emoji',\r\n    'emong',\r\n    'emote',\r\n    'emove',\r\n    'empts',\r\n    'emule',\r\n    'emure',\r\n    'emyde',\r\n    'emyds',\r\n    'enarm',\r\n    'enate',\r\n    'ended',\r\n    'ender',\r\n    'endew',\r\n    'endue',\r\n    'enews',\r\n    'enfix',\r\n    'eniac',\r\n    'enlit',\r\n    'enmew',\r\n    'ennog',\r\n    'enoki',\r\n    'enols',\r\n    'enorm',\r\n    'enows',\r\n    'enrol',\r\n    'ensew',\r\n    'ensky',\r\n    'entia',\r\n    'enure',\r\n    'enurn',\r\n    'envoi',\r\n    'enzym',\r\n    'eorls',\r\n    'eosin',\r\n    'epact',\r\n    'epees',\r\n    'ephah',\r\n    'ephas',\r\n    'ephod',\r\n    'ephor',\r\n    'epics',\r\n    'epode',\r\n    'epopt',\r\n    'epris',\r\n    'eques',\r\n    'equid',\r\n    'erbia',\r\n    'erevs',\r\n    'ergon',\r\n    'ergos',\r\n    'ergot',\r\n    'erhus',\r\n    'erica',\r\n    'erick',\r\n    'erics',\r\n    'ering',\r\n    'erned',\r\n    'ernes',\r\n    'erose',\r\n    'erred',\r\n    'erses',\r\n    'eruct',\r\n    'erugo',\r\n    'eruvs',\r\n    'erven',\r\n    'ervil',\r\n    'escar',\r\n    'escot',\r\n    'esile',\r\n    'eskar',\r\n    'esker',\r\n    'esnes',\r\n    'esses',\r\n    'estoc',\r\n    'estop',\r\n    'estro',\r\n    'etage',\r\n    'etape',\r\n    'etats',\r\n    'etens',\r\n    'ethal',\r\n    'ethne',\r\n    'ethyl',\r\n    'etics',\r\n    'etnas',\r\n    'ettin',\r\n    'ettle',\r\n    'etuis',\r\n    'etwee',\r\n    'etyma',\r\n    'eughs',\r\n    'euked',\r\n    'eupad',\r\n    'euros',\r\n    'eusol',\r\n    'evens',\r\n    'evert',\r\n    'evets',\r\n    'evhoe',\r\n    'evils',\r\n    'evite',\r\n    'evohe',\r\n    'ewers',\r\n    'ewest',\r\n    'ewhow',\r\n    'ewked',\r\n    'exams',\r\n    'exeat',\r\n    'execs',\r\n    'exeem',\r\n    'exeme',\r\n    'exfil',\r\n    'exies',\r\n    'exine',\r\n    'exing',\r\n    'exits',\r\n    'exode',\r\n    'exome',\r\n    'exons',\r\n    'expat',\r\n    'expos',\r\n    'exude',\r\n    'exuls',\r\n    'exurb',\r\n    'eyass',\r\n    'eyers',\r\n    'eyots',\r\n    'eyras',\r\n    'eyres',\r\n    'eyrie',\r\n    'eyrir',\r\n    'ezine',\r\n    'fabby',\r\n    'faced',\r\n    'facer',\r\n    'faces',\r\n    'facia',\r\n    'facta',\r\n    'facts',\r\n    'faddy',\r\n    'faded',\r\n    'fader',\r\n    'fades',\r\n    'fadge',\r\n    'fados',\r\n    'faena',\r\n    'faery',\r\n    'faffs',\r\n    'faffy',\r\n    'faggy',\r\n    'fagin',\r\n    'fagot',\r\n    'faiks',\r\n    'fails',\r\n    'faine',\r\n    'fains',\r\n    'fairs',\r\n    'faked',\r\n    'faker',\r\n    'fakes',\r\n    'fakey',\r\n    'fakie',\r\n    'fakir',\r\n    'falaj',\r\n    'falls',\r\n    'famed',\r\n    'fames',\r\n    'fanal',\r\n    'fands',\r\n    'fanes',\r\n    'fanga',\r\n    'fango',\r\n    'fangs',\r\n    'fanks',\r\n    'fanon',\r\n    'fanos',\r\n    'fanum',\r\n    'faqir',\r\n    'farad',\r\n    'farci',\r\n    'farcy',\r\n    'fards',\r\n    'fared',\r\n    'farer',\r\n    'fares',\r\n    'farle',\r\n    'farls',\r\n    'farms',\r\n    'faros',\r\n    'farro',\r\n    'farse',\r\n    'farts',\r\n    'fasci',\r\n    'fasti',\r\n    'fasts',\r\n    'fated',\r\n    'fates',\r\n    'fatly',\r\n    'fatso',\r\n    'fatwa',\r\n    'faugh',\r\n    'fauld',\r\n    'fauns',\r\n    'faurd',\r\n    'fauts',\r\n    'fauve',\r\n    'favas',\r\n    'favel',\r\n    'faver',\r\n    'faves',\r\n    'favus',\r\n    'fawns',\r\n    'fawny',\r\n    'faxed',\r\n    'faxes',\r\n    'fayed',\r\n    'fayer',\r\n    'fayne',\r\n    'fayre',\r\n    'fazed',\r\n    'fazes',\r\n    'feals',\r\n    'feare',\r\n    'fears',\r\n    'feart',\r\n    'fease',\r\n    'feats',\r\n    'feaze',\r\n    'feces',\r\n    'fecht',\r\n    'fecit',\r\n    'fecks',\r\n    'fedex',\r\n    'feebs',\r\n    'feeds',\r\n    'feels',\r\n    'feens',\r\n    'feers',\r\n    'feese',\r\n    'feeze',\r\n    'fehme',\r\n    'feint',\r\n    'feist',\r\n    'felch',\r\n    'felid',\r\n    'fells',\r\n    'felly',\r\n    'felts',\r\n    'felty',\r\n    'femal',\r\n    'femes',\r\n    'femmy',\r\n    'fends',\r\n    'fendy',\r\n    'fenis',\r\n    'fenks',\r\n    'fenny',\r\n    'fents',\r\n    'feods',\r\n    'feoff',\r\n    'ferer',\r\n    'feres',\r\n    'feria',\r\n    'ferly',\r\n    'fermi',\r\n    'ferms',\r\n    'ferns',\r\n    'ferny',\r\n    'fesse',\r\n    'festa',\r\n    'fests',\r\n    'festy',\r\n    'fetas',\r\n    'feted',\r\n    'fetes',\r\n    'fetor',\r\n    'fetta',\r\n    'fetts',\r\n    'fetwa',\r\n    'feuar',\r\n    'feuds',\r\n    'feued',\r\n    'feyed',\r\n    'feyer',\r\n    'feyly',\r\n    'fezes',\r\n    'fezzy',\r\n    'fiars',\r\n    'fiats',\r\n    'fibro',\r\n    'fices',\r\n    'fiche',\r\n    'fichu',\r\n    'ficin',\r\n    'ficos',\r\n    'fides',\r\n    'fidge',\r\n    'fidos',\r\n    'fiefs',\r\n    'fient',\r\n    'fiere',\r\n    'fiers',\r\n    'fiest',\r\n    'fifed',\r\n    'fifer',\r\n    'fifes',\r\n    'fifis',\r\n    'figgy',\r\n    'figos',\r\n    'fiked',\r\n    'fikes',\r\n    'filar',\r\n    'filch',\r\n    'filed',\r\n    'files',\r\n    'filii',\r\n    'filks',\r\n    'fille',\r\n    'fillo',\r\n    'fills',\r\n    'filmi',\r\n    'films',\r\n    'filos',\r\n    'filum',\r\n    'finca',\r\n    'finds',\r\n    'fined',\r\n    'fines',\r\n    'finis',\r\n    'finks',\r\n    'finny',\r\n    'finos',\r\n    'fiord',\r\n    'fiqhs',\r\n    'fique',\r\n    'fired',\r\n    'firer',\r\n    'fires',\r\n    'firie',\r\n    'firks',\r\n    'firms',\r\n    'firns',\r\n    'firry',\r\n    'firth',\r\n    'fiscs',\r\n    'fisks',\r\n    'fists',\r\n    'fisty',\r\n    'fitch',\r\n    'fitly',\r\n    'fitna',\r\n    'fitte',\r\n    'fitts',\r\n    'fiver',\r\n    'fives',\r\n    'fixed',\r\n    'fixes',\r\n    'fixit',\r\n    'fjeld',\r\n    'flabs',\r\n    'flaff',\r\n    'flags',\r\n    'flaks',\r\n    'flamm',\r\n    'flams',\r\n    'flamy',\r\n    'flane',\r\n    'flans',\r\n    'flaps',\r\n    'flary',\r\n    'flats',\r\n    'flava',\r\n    'flawn',\r\n    'flaws',\r\n    'flawy',\r\n    'flaxy',\r\n    'flays',\r\n    'fleam',\r\n    'fleas',\r\n    'fleek',\r\n    'fleer',\r\n    'flees',\r\n    'flegs',\r\n    'fleme',\r\n    'fleur',\r\n    'flews',\r\n    'flexi',\r\n    'flexo',\r\n    'fleys',\r\n    'flics',\r\n    'flied',\r\n    'flies',\r\n    'flimp',\r\n    'flims',\r\n    'flips',\r\n    'flirs',\r\n    'flisk',\r\n    'flite',\r\n    'flits',\r\n    'flitt',\r\n    'flobs',\r\n    'flocs',\r\n    'floes',\r\n    'flogs',\r\n    'flong',\r\n    'flops',\r\n    'flors',\r\n    'flory',\r\n    'flosh',\r\n    'flota',\r\n    'flote',\r\n    'flows',\r\n    'flubs',\r\n    'flued',\r\n    'flues',\r\n    'fluey',\r\n    'fluky',\r\n    'flump',\r\n    'fluor',\r\n    'flurr',\r\n    'fluty',\r\n    'fluyt',\r\n    'flyby',\r\n    'flype',\r\n    'flyte',\r\n    'foals',\r\n    'foams',\r\n    'foehn',\r\n    'fogey',\r\n    'fogie',\r\n    'fogle',\r\n    'fogou',\r\n    'fohns',\r\n    'foids',\r\n    'foils',\r\n    'foins',\r\n    'folds',\r\n    'foley',\r\n    'folia',\r\n    'folic',\r\n    'folie',\r\n    'folks',\r\n    'folky',\r\n    'fomes',\r\n    'fonda',\r\n    'fonds',\r\n    'fondu',\r\n    'fones',\r\n    'fonly',\r\n    'fonts',\r\n    'foods',\r\n    'foody',\r\n    'fools',\r\n    'foots',\r\n    'footy',\r\n    'foram',\r\n    'forbs',\r\n    'forby',\r\n    'fordo',\r\n    'fords',\r\n    'forel',\r\n    'fores',\r\n    'forex',\r\n    'forks',\r\n    'forky',\r\n    'forme',\r\n    'forms',\r\n    'forts',\r\n    'forza',\r\n    'forze',\r\n    'fossa',\r\n    'fosse',\r\n    'fouat',\r\n    'fouds',\r\n    'fouer',\r\n    'fouet',\r\n    'foule',\r\n    'fouls',\r\n    'fount',\r\n    'fours',\r\n    'fouth',\r\n    'fovea',\r\n    'fowls',\r\n    'fowth',\r\n    'foxed',\r\n    'foxes',\r\n    'foxie',\r\n    'foyle',\r\n    'foyne',\r\n    'frabs',\r\n    'frack',\r\n    'fract',\r\n    'frags',\r\n    'fraim',\r\n    'franc',\r\n    'frape',\r\n    'fraps',\r\n    'frass',\r\n    'frate',\r\n    'frati',\r\n    'frats',\r\n    'fraus',\r\n    'frays',\r\n    'frees',\r\n    'freet',\r\n    'freit',\r\n    'fremd',\r\n    'frena',\r\n    'freon',\r\n    'frere',\r\n    'frets',\r\n    'fribs',\r\n    'frier',\r\n    'fries',\r\n    'frigs',\r\n    'frise',\r\n    'frist',\r\n    'frith',\r\n    'frits',\r\n    'fritt',\r\n    'frize',\r\n    'frizz',\r\n    'froes',\r\n    'frogs',\r\n    'frons',\r\n    'frore',\r\n    'frorn',\r\n    'frory',\r\n    'frosh',\r\n    'frows',\r\n    'frowy',\r\n    'frugs',\r\n    'frump',\r\n    'frush',\r\n    'frust',\r\n    'fryer',\r\n    'fubar',\r\n    'fubby',\r\n    'fubsy',\r\n    'fucks',\r\n    'fucus',\r\n    'fuddy',\r\n    'fudgy',\r\n    'fuels',\r\n    'fuero',\r\n    'fuffs',\r\n    'fuffy',\r\n    'fugal',\r\n    'fuggy',\r\n    'fugie',\r\n    'fugio',\r\n    'fugle',\r\n    'fugly',\r\n    'fugus',\r\n    'fujis',\r\n    'fulls',\r\n    'fumed',\r\n    'fumer',\r\n    'fumes',\r\n    'fumet',\r\n    'fundi',\r\n    'funds',\r\n    'fundy',\r\n    'fungo',\r\n    'fungs',\r\n    'funks',\r\n    'fural',\r\n    'furan',\r\n    'furca',\r\n    'furls',\r\n    'furol',\r\n    'furrs',\r\n    'furth',\r\n    'furze',\r\n    'furzy',\r\n    'fused',\r\n    'fusee',\r\n    'fusel',\r\n    'fuses',\r\n    'fusil',\r\n    'fusks',\r\n    'fusts',\r\n    'fusty',\r\n    'futon',\r\n    'fuzed',\r\n    'fuzee',\r\n    'fuzes',\r\n    'fuzil',\r\n    'fyces',\r\n    'fyked',\r\n    'fykes',\r\n    'fyles',\r\n    'fyrds',\r\n    'fytte',\r\n    'gabba',\r\n    'gabby',\r\n    'gable',\r\n    'gaddi',\r\n    'gades',\r\n    'gadge',\r\n    'gadid',\r\n    'gadis',\r\n    'gadje',\r\n    'gadjo',\r\n    'gadso',\r\n    'gaffs',\r\n    'gaged',\r\n    'gager',\r\n    'gages',\r\n    'gaids',\r\n    'gains',\r\n    'gairs',\r\n    'gaita',\r\n    'gaits',\r\n    'gaitt',\r\n    'gajos',\r\n    'galah',\r\n    'galas',\r\n    'galax',\r\n    'galea',\r\n    'galed',\r\n    'gales',\r\n    'galls',\r\n    'gally',\r\n    'galop',\r\n    'galut',\r\n    'galvo',\r\n    'gamas',\r\n    'gamay',\r\n    'gamba',\r\n    'gambe',\r\n    'gambo',\r\n    'gambs',\r\n    'gamed',\r\n    'games',\r\n    'gamey',\r\n    'gamic',\r\n    'gamin',\r\n    'gamme',\r\n    'gammy',\r\n    'gamps',\r\n    'ganch',\r\n    'gandy',\r\n    'ganef',\r\n    'ganev',\r\n    'gangs',\r\n    'ganja',\r\n    'ganof',\r\n    'gants',\r\n    'gaols',\r\n    'gaped',\r\n    'gaper',\r\n    'gapes',\r\n    'gapos',\r\n    'gappy',\r\n    'garbe',\r\n    'garbo',\r\n    'garbs',\r\n    'garda',\r\n    'gares',\r\n    'garis',\r\n    'garms',\r\n    'garni',\r\n    'garre',\r\n    'garth',\r\n    'garum',\r\n    'gases',\r\n    'gasps',\r\n    'gaspy',\r\n    'gasts',\r\n    'gatch',\r\n    'gated',\r\n    'gater',\r\n    'gates',\r\n    'gaths',\r\n    'gator',\r\n    'gauch',\r\n    'gaucy',\r\n    'gauds',\r\n    'gauje',\r\n    'gault',\r\n    'gaums',\r\n    'gaumy',\r\n    'gaups',\r\n    'gaurs',\r\n    'gauss',\r\n    'gauzy',\r\n    'gavot',\r\n    'gawcy',\r\n    'gawds',\r\n    'gawks',\r\n    'gawps',\r\n    'gawsy',\r\n    'gayal',\r\n    'gazal',\r\n    'gazar',\r\n    'gazed',\r\n    'gazes',\r\n    'gazon',\r\n    'gazoo',\r\n    'geals',\r\n    'geans',\r\n    'geare',\r\n    'gears',\r\n    'geats',\r\n    'gebur',\r\n    'gecks',\r\n    'geeks',\r\n    'geeps',\r\n    'geest',\r\n    'geist',\r\n    'geits',\r\n    'gelds',\r\n    'gelee',\r\n    'gelid',\r\n    'gelly',\r\n    'gelts',\r\n    'gemel',\r\n    'gemma',\r\n    'gemmy',\r\n    'gemot',\r\n    'genal',\r\n    'genas',\r\n    'genes',\r\n    'genet',\r\n    'genic',\r\n    'genii',\r\n    'genip',\r\n    'genny',\r\n    'genoa',\r\n    'genom',\r\n    'genro',\r\n    'gents',\r\n    'genty',\r\n    'genua',\r\n    'genus',\r\n    'geode',\r\n    'geoid',\r\n    'gerah',\r\n    'gerbe',\r\n    'geres',\r\n    'gerle',\r\n    'germs',\r\n    'germy',\r\n    'gerne',\r\n    'gesse',\r\n    'gesso',\r\n    'geste',\r\n    'gests',\r\n    'getas',\r\n    'getup',\r\n    'geums',\r\n    'geyan',\r\n    'geyer',\r\n    'ghast',\r\n    'ghats',\r\n    'ghaut',\r\n    'ghazi',\r\n    'ghees',\r\n    'ghest',\r\n    'ghyll',\r\n    'gibed',\r\n    'gibel',\r\n    'giber',\r\n    'gibes',\r\n    'gibli',\r\n    'gibus',\r\n    'gifts',\r\n    'gigas',\r\n    'gighe',\r\n    'gigot',\r\n    'gigue',\r\n    'gilas',\r\n    'gilds',\r\n    'gilet',\r\n    'gills',\r\n    'gilly',\r\n    'gilpy',\r\n    'gilts',\r\n    'gimel',\r\n    'gimme',\r\n    'gimps',\r\n    'gimpy',\r\n    'ginch',\r\n    'ginge',\r\n    'gings',\r\n    'ginks',\r\n    'ginny',\r\n    'ginzo',\r\n    'gipon',\r\n    'gippo',\r\n    'gippy',\r\n    'girds',\r\n    'girls',\r\n    'girns',\r\n    'giron',\r\n    'giros',\r\n    'girrs',\r\n    'girsh',\r\n    'girts',\r\n    'gismo',\r\n    'gisms',\r\n    'gists',\r\n    'gitch',\r\n    'gites',\r\n    'giust',\r\n    'gived',\r\n    'gives',\r\n    'gizmo',\r\n    'glace',\r\n    'glads',\r\n    'glady',\r\n    'glaik',\r\n    'glair',\r\n    'glams',\r\n    'glans',\r\n    'glary',\r\n    'glaum',\r\n    'glaur',\r\n    'glazy',\r\n    'gleba',\r\n    'glebe',\r\n    'gleby',\r\n    'glede',\r\n    'gleds',\r\n    'gleed',\r\n    'gleek',\r\n    'glees',\r\n    'gleet',\r\n    'gleis',\r\n    'glens',\r\n    'glent',\r\n    'gleys',\r\n    'glial',\r\n    'glias',\r\n    'glibs',\r\n    'gliff',\r\n    'glift',\r\n    'glike',\r\n    'glime',\r\n    'glims',\r\n    'glisk',\r\n    'glits',\r\n    'glitz',\r\n    'gloam',\r\n    'globi',\r\n    'globs',\r\n    'globy',\r\n    'glode',\r\n    'glogg',\r\n    'gloms',\r\n    'gloop',\r\n    'glops',\r\n    'glost',\r\n    'glout',\r\n    'glows',\r\n    'gloze',\r\n    'glued',\r\n    'gluer',\r\n    'glues',\r\n    'gluey',\r\n    'glugs',\r\n    'glume',\r\n    'glums',\r\n    'gluon',\r\n    'glute',\r\n    'gluts',\r\n    'gnarl',\r\n    'gnarr',\r\n    'gnars',\r\n    'gnats',\r\n    'gnawn',\r\n    'gnaws',\r\n    'gnows',\r\n    'goads',\r\n    'goafs',\r\n    'goals',\r\n    'goary',\r\n    'goats',\r\n    'goaty',\r\n    'goban',\r\n    'gobar',\r\n    'gobbi',\r\n    'gobbo',\r\n    'gobby',\r\n    'gobis',\r\n    'gobos',\r\n    'godet',\r\n    'godso',\r\n    'goels',\r\n    'goers',\r\n    'goest',\r\n    'goeth',\r\n    'goety',\r\n    'gofer',\r\n    'goffs',\r\n    'gogga',\r\n    'gogos',\r\n    'goier',\r\n    'gojis',\r\n    'golds',\r\n    'goldy',\r\n    'goles',\r\n    'golfs',\r\n    'golpe',\r\n    'golps',\r\n    'gombo',\r\n    'gomer',\r\n    'gompa',\r\n    'gonch',\r\n    'gonef',\r\n    'gongs',\r\n    'gonia',\r\n    'gonif',\r\n    'gonks',\r\n    'gonna',\r\n    'gonof',\r\n    'gonys',\r\n    'gonzo',\r\n    'gooby',\r\n    'goods',\r\n    'goofs',\r\n    'googs',\r\n    'gooks',\r\n    'gooky',\r\n    'goold',\r\n    'gools',\r\n    'gooly',\r\n    'goons',\r\n    'goony',\r\n    'goops',\r\n    'goopy',\r\n    'goors',\r\n    'goory',\r\n    'goosy',\r\n    'gopak',\r\n    'gopik',\r\n    'goral',\r\n    'goras',\r\n    'gored',\r\n    'gores',\r\n    'goris',\r\n    'gorms',\r\n    'gormy',\r\n    'gorps',\r\n    'gorse',\r\n    'gorsy',\r\n    'gosht',\r\n    'gosse',\r\n    'gotch',\r\n    'goths',\r\n    'gothy',\r\n    'gotta',\r\n    'gouch',\r\n    'gouks',\r\n    'goura',\r\n    'gouts',\r\n    'gouty',\r\n    'gowan',\r\n    'gowds',\r\n    'gowfs',\r\n    'gowks',\r\n    'gowls',\r\n    'gowns',\r\n    'goxes',\r\n    'goyim',\r\n    'goyle',\r\n    'graal',\r\n    'grabs',\r\n    'grads',\r\n    'graff',\r\n    'graip',\r\n    'grama',\r\n    'grame',\r\n    'gramp',\r\n    'grams',\r\n    'grana',\r\n    'grans',\r\n    'grapy',\r\n    'gravs',\r\n    'grays',\r\n    'grebe',\r\n    'grebo',\r\n    'grece',\r\n    'greek',\r\n    'grees',\r\n    'grege',\r\n    'grego',\r\n    'grein',\r\n    'grens',\r\n    'grese',\r\n    'greve',\r\n    'grews',\r\n    'greys',\r\n    'grice',\r\n    'gride',\r\n    'grids',\r\n    'griff',\r\n    'grift',\r\n    'grigs',\r\n    'grike',\r\n    'grins',\r\n    'griot',\r\n    'grips',\r\n    'gript',\r\n    'gripy',\r\n    'grise',\r\n    'grist',\r\n    'grisy',\r\n    'grith',\r\n    'grits',\r\n    'grize',\r\n    'groat',\r\n    'grody',\r\n    'grogs',\r\n    'groks',\r\n    'groma',\r\n    'grone',\r\n    'groof',\r\n    'grosz',\r\n    'grots',\r\n    'grouf',\r\n    'grovy',\r\n    'grows',\r\n    'grrls',\r\n    'grrrl',\r\n    'grubs',\r\n    'grued',\r\n    'grues',\r\n    'grufe',\r\n    'grume',\r\n    'grump',\r\n    'grund',\r\n    'gryce',\r\n    'gryde',\r\n    'gryke',\r\n    'grype',\r\n    'grypt',\r\n    'guaco',\r\n    'guana',\r\n    'guano',\r\n    'guans',\r\n    'guars',\r\n    'gucks',\r\n    'gucky',\r\n    'gudes',\r\n    'guffs',\r\n    'gugas',\r\n    'guids',\r\n    'guimp',\r\n    'guiro',\r\n    'gulag',\r\n    'gular',\r\n    'gulas',\r\n    'gules',\r\n    'gulet',\r\n    'gulfs',\r\n    'gulfy',\r\n    'gulls',\r\n    'gulph',\r\n    'gulps',\r\n    'gulpy',\r\n    'gumma',\r\n    'gummi',\r\n    'gumps',\r\n    'gundy',\r\n    'gunge',\r\n    'gungy',\r\n    'gunks',\r\n    'gunky',\r\n    'gunny',\r\n    'guqin',\r\n    'gurdy',\r\n    'gurge',\r\n    'gurls',\r\n    'gurly',\r\n    'gurns',\r\n    'gurry',\r\n    'gursh',\r\n    'gurus',\r\n    'gushy',\r\n    'gusla',\r\n    'gusle',\r\n    'gusli',\r\n    'gussy',\r\n    'gusts',\r\n    'gutsy',\r\n    'gutta',\r\n    'gutty',\r\n    'guyed',\r\n    'guyle',\r\n    'guyot',\r\n    'guyse',\r\n    'gwine',\r\n    'gyals',\r\n    'gyans',\r\n    'gybed',\r\n    'gybes',\r\n    'gyeld',\r\n    'gymps',\r\n    'gynae',\r\n    'gynie',\r\n    'gynny',\r\n    'gynos',\r\n    'gyoza',\r\n    'gypos',\r\n    'gyppo',\r\n    'gyppy',\r\n    'gyral',\r\n    'gyred',\r\n    'gyres',\r\n    'gyron',\r\n    'gyros',\r\n    'gyrus',\r\n    'gytes',\r\n    'gyved',\r\n    'gyves',\r\n    'haafs',\r\n    'haars',\r\n    'hable',\r\n    'habus',\r\n    'hacek',\r\n    'hacks',\r\n    'hadal',\r\n    'haded',\r\n    'hades',\r\n    'hadji',\r\n    'hadst',\r\n    'haems',\r\n    'haets',\r\n    'haffs',\r\n    'hafiz',\r\n    'hafts',\r\n    'haggs',\r\n    'hahas',\r\n    'haick',\r\n    'haika',\r\n    'haiks',\r\n    'haiku',\r\n    'hails',\r\n    'haily',\r\n    'hains',\r\n    'haint',\r\n    'hairs',\r\n    'haith',\r\n    'hajes',\r\n    'hajis',\r\n    'hajji',\r\n    'hakam',\r\n    'hakas',\r\n    'hakea',\r\n    'hakes',\r\n    'hakim',\r\n    'hakus',\r\n    'halal',\r\n    'haled',\r\n    'haler',\r\n    'hales',\r\n    'halfa',\r\n    'halfs',\r\n    'halid',\r\n    'hallo',\r\n    'halls',\r\n    'halma',\r\n    'halms',\r\n    'halon',\r\n    'halos',\r\n    'halse',\r\n    'halts',\r\n    'halva',\r\n    'halwa',\r\n    'hamal',\r\n    'hamba',\r\n    'hamed',\r\n    'hames',\r\n    'hammy',\r\n    'hamza',\r\n    'hanap',\r\n    'hance',\r\n    'hanch',\r\n    'hands',\r\n    'hangi',\r\n    'hangs',\r\n    'hanks',\r\n    'hanky',\r\n    'hansa',\r\n    'hanse',\r\n    'hants',\r\n    'haole',\r\n    'haoma',\r\n    'hapax',\r\n    'haply',\r\n    'happi',\r\n    'hapus',\r\n    'haram',\r\n    'hards',\r\n    'hared',\r\n    'hares',\r\n    'harim',\r\n    'harks',\r\n    'harls',\r\n    'harms',\r\n    'harns',\r\n    'haros',\r\n    'harps',\r\n    'harts',\r\n    'hashy',\r\n    'hasks',\r\n    'hasps',\r\n    'hasta',\r\n    'hated',\r\n    'hates',\r\n    'hatha',\r\n    'hauds',\r\n    'haufs',\r\n    'haugh',\r\n    'hauld',\r\n    'haulm',\r\n    'hauls',\r\n    'hault',\r\n    'hauns',\r\n    'hause',\r\n    'haver',\r\n    'haves',\r\n    'hawed',\r\n    'hawks',\r\n    'hawms',\r\n    'hawse',\r\n    'hayed',\r\n    'hayer',\r\n    'hayey',\r\n    'hayle',\r\n    'hazan',\r\n    'hazed',\r\n    'hazer',\r\n    'hazes',\r\n    'heads',\r\n    'heald',\r\n    'heals',\r\n    'heame',\r\n    'heaps',\r\n    'heapy',\r\n    'heare',\r\n    'hears',\r\n    'heast',\r\n    'heats',\r\n    'heben',\r\n    'hebes',\r\n    'hecht',\r\n    'hecks',\r\n    'heder',\r\n    'hedgy',\r\n    'heeds',\r\n    'heedy',\r\n    'heels',\r\n    'heeze',\r\n    'hefte',\r\n    'hefts',\r\n    'heids',\r\n    'heigh',\r\n    'heils',\r\n    'heirs',\r\n    'hejab',\r\n    'hejra',\r\n    'heled',\r\n    'heles',\r\n    'helio',\r\n    'hells',\r\n    'helms',\r\n    'helos',\r\n    'helot',\r\n    'helps',\r\n    'helve',\r\n    'hemal',\r\n    'hemes',\r\n    'hemic',\r\n    'hemin',\r\n    'hemps',\r\n    'hempy',\r\n    'hench',\r\n    'hends',\r\n    'henge',\r\n    'henna',\r\n    'henny',\r\n    'henry',\r\n    'hents',\r\n    'hepar',\r\n    'herbs',\r\n    'herby',\r\n    'herds',\r\n    'heres',\r\n    'herls',\r\n    'herma',\r\n    'herms',\r\n    'herns',\r\n    'heros',\r\n    'herry',\r\n    'herse',\r\n    'hertz',\r\n    'herye',\r\n    'hesps',\r\n    'hests',\r\n    'hetes',\r\n    'heths',\r\n    'heuch',\r\n    'heugh',\r\n    'hevea',\r\n    'hewed',\r\n    'hewer',\r\n    'hewgh',\r\n    'hexad',\r\n    'hexed',\r\n    'hexer',\r\n    'hexes',\r\n    'hexyl',\r\n    'heyed',\r\n    'hiant',\r\n    'hicks',\r\n    'hided',\r\n    'hider',\r\n    'hides',\r\n    'hiems',\r\n    'highs',\r\n    'hight',\r\n    'hijab',\r\n    'hijra',\r\n    'hiked',\r\n    'hiker',\r\n    'hikes',\r\n    'hikoi',\r\n    'hilar',\r\n    'hilch',\r\n    'hillo',\r\n    'hills',\r\n    'hilts',\r\n    'hilum',\r\n    'hilus',\r\n    'himbo',\r\n    'hinau',\r\n    'hinds',\r\n    'hings',\r\n    'hinky',\r\n    'hinny',\r\n    'hints',\r\n    'hiois',\r\n    'hiply',\r\n    'hired',\r\n    'hiree',\r\n    'hirer',\r\n    'hires',\r\n    'hissy',\r\n    'hists',\r\n    'hithe',\r\n    'hived',\r\n    'hiver',\r\n    'hives',\r\n    'hizen',\r\n    'hoaed',\r\n    'hoagy',\r\n    'hoars',\r\n    'hoary',\r\n    'hoast',\r\n    'hobos',\r\n    'hocks',\r\n    'hocus',\r\n    'hodad',\r\n    'hodja',\r\n    'hoers',\r\n    'hogan',\r\n    'hogen',\r\n    'hoggs',\r\n    'hoghs',\r\n    'hohed',\r\n    'hoick',\r\n    'hoied',\r\n    'hoiks',\r\n    'hoing',\r\n    'hoise',\r\n    'hokas',\r\n    'hoked',\r\n    'hokes',\r\n    'hokey',\r\n    'hokis',\r\n    'hokku',\r\n    'hokum',\r\n    'holds',\r\n    'holed',\r\n    'holes',\r\n    'holey',\r\n    'holks',\r\n    'holla',\r\n    'hollo',\r\n    'holme',\r\n    'holms',\r\n    'holon',\r\n    'holos',\r\n    'holts',\r\n    'homas',\r\n    'homed',\r\n    'homes',\r\n    'homey',\r\n    'homie',\r\n    'homme',\r\n    'homos',\r\n    'honan',\r\n    'honda',\r\n    'honds',\r\n    'honed',\r\n    'honer',\r\n    'hones',\r\n    'hongi',\r\n    'hongs',\r\n    'honks',\r\n    'honky',\r\n    'hooch',\r\n    'hoods',\r\n    'hoody',\r\n    'hooey',\r\n    'hoofs',\r\n    'hooka',\r\n    'hooks',\r\n    'hooky',\r\n    'hooly',\r\n    'hoons',\r\n    'hoops',\r\n    'hoord',\r\n    'hoors',\r\n    'hoosh',\r\n    'hoots',\r\n    'hooty',\r\n    'hoove',\r\n    'hopak',\r\n    'hoped',\r\n    'hoper',\r\n    'hopes',\r\n    'hoppy',\r\n    'horah',\r\n    'horal',\r\n    'horas',\r\n    'horis',\r\n    'horks',\r\n    'horme',\r\n    'horns',\r\n    'horst',\r\n    'horsy',\r\n    'hosed',\r\n    'hosel',\r\n    'hosen',\r\n    'hoser',\r\n    'hoses',\r\n    'hosey',\r\n    'hosta',\r\n    'hosts',\r\n    'hotch',\r\n    'hoten',\r\n    'hotty',\r\n    'houff',\r\n    'houfs',\r\n    'hough',\r\n    'houri',\r\n    'hours',\r\n    'houts',\r\n    'hovea',\r\n    'hoved',\r\n    'hoven',\r\n    'hoves',\r\n    'howbe',\r\n    'howes',\r\n    'howff',\r\n    'howfs',\r\n    'howks',\r\n    'howls',\r\n    'howre',\r\n    'howso',\r\n    'hoxed',\r\n    'hoxes',\r\n    'hoyas',\r\n    'hoyed',\r\n    'hoyle',\r\n    'hubby',\r\n    'hucks',\r\n    'hudna',\r\n    'hudud',\r\n    'huers',\r\n    'huffs',\r\n    'huffy',\r\n    'huger',\r\n    'huggy',\r\n    'huhus',\r\n    'huias',\r\n    'hulas',\r\n    'hules',\r\n    'hulks',\r\n    'hulky',\r\n    'hullo',\r\n    'hulls',\r\n    'hully',\r\n    'humas',\r\n    'humfs',\r\n    'humic',\r\n    'humps',\r\n    'humpy',\r\n    'hunks',\r\n    'hunts',\r\n    'hurds',\r\n    'hurls',\r\n    'hurly',\r\n    'hurra',\r\n    'hurst',\r\n    'hurts',\r\n    'hushy',\r\n    'husks',\r\n    'husos',\r\n    'hutia',\r\n    'huzza',\r\n    'huzzy',\r\n    'hwyls',\r\n    'hydra',\r\n    'hyens',\r\n    'hygge',\r\n    'hying',\r\n    'hykes',\r\n    'hylas',\r\n    'hyleg',\r\n    'hyles',\r\n    'hylic',\r\n    'hymns',\r\n    'hynde',\r\n    'hyoid',\r\n    'hyped',\r\n    'hypes',\r\n    'hypha',\r\n    'hyphy',\r\n    'hypos',\r\n    'hyrax',\r\n    'hyson',\r\n    'hythe',\r\n    'iambi',\r\n    'iambs',\r\n    'ibrik',\r\n    'icers',\r\n    'iched',\r\n    'iches',\r\n    'ichor',\r\n    'icier',\r\n    'icker',\r\n    'ickle',\r\n    'icons',\r\n    'ictal',\r\n    'ictic',\r\n    'ictus',\r\n    'idant',\r\n    'ideas',\r\n    'idees',\r\n    'ident',\r\n    'idled',\r\n    'idles',\r\n    'idola',\r\n    'idols',\r\n    'idyls',\r\n    'iftar',\r\n    'igapo',\r\n    'igged',\r\n    'iglus',\r\n    'ihram',\r\n    'ikans',\r\n    'ikats',\r\n    'ikons',\r\n    'ileac',\r\n    'ileal',\r\n    'ileum',\r\n    'ileus',\r\n    'iliad',\r\n    'ilial',\r\n    'ilium',\r\n    'iller',\r\n    'illth',\r\n    'imago',\r\n    'imams',\r\n    'imari',\r\n    'imaum',\r\n    'imbar',\r\n    'imbed',\r\n    'imide',\r\n    'imido',\r\n    'imids',\r\n    'imine',\r\n    'imino',\r\n    'immew',\r\n    'immit',\r\n    'immix',\r\n    'imped',\r\n    'impis',\r\n    'impot',\r\n    'impro',\r\n    'imshi',\r\n    'imshy',\r\n    'inapt',\r\n    'inarm',\r\n    'inbye',\r\n    'incel',\r\n    'incle',\r\n    'incog',\r\n    'incus',\r\n    'incut',\r\n    'indew',\r\n    'india',\r\n    'indie',\r\n    'indol',\r\n    'indow',\r\n    'indri',\r\n    'indue',\r\n    'inerm',\r\n    'infix',\r\n    'infos',\r\n    'infra',\r\n    'ingan',\r\n    'ingle',\r\n    'inion',\r\n    'inked',\r\n    'inker',\r\n    'inkle',\r\n    'inned',\r\n    'innit',\r\n    'inorb',\r\n    'inrun',\r\n    'inset',\r\n    'inspo',\r\n    'intel',\r\n    'intil',\r\n    'intis',\r\n    'intra',\r\n    'inula',\r\n    'inure',\r\n    'inurn',\r\n    'inust',\r\n    'invar',\r\n    'inwit',\r\n    'iodic',\r\n    'iodid',\r\n    'iodin',\r\n    'iotas',\r\n    'ippon',\r\n    'irade',\r\n    'irids',\r\n    'iring',\r\n    'irked',\r\n    'iroko',\r\n    'irone',\r\n    'irons',\r\n    'isbas',\r\n    'ishes',\r\n    'isled',\r\n    'isles',\r\n    'isnae',\r\n    'issei',\r\n    'istle',\r\n    'items',\r\n    'ither',\r\n    'ivied',\r\n    'ivies',\r\n    'ixias',\r\n    'ixnay',\r\n    'ixora',\r\n    'ixtle',\r\n    'izard',\r\n    'izars',\r\n    'izzat',\r\n    'jaaps',\r\n    'jabot',\r\n    'jacal',\r\n    'jacks',\r\n    'jacky',\r\n    'jaded',\r\n    'jades',\r\n    'jafas',\r\n    'jaffa',\r\n    'jagas',\r\n    'jager',\r\n    'jaggs',\r\n    'jaggy',\r\n    'jagir',\r\n    'jagra',\r\n    'jails',\r\n    'jaker',\r\n    'jakes',\r\n    'jakey',\r\n    'jalap',\r\n    'jalop',\r\n    'jambe',\r\n    'jambo',\r\n    'jambs',\r\n    'jambu',\r\n    'james',\r\n    'jammy',\r\n    'jamon',\r\n    'janes',\r\n    'janns',\r\n    'janny',\r\n    'janty',\r\n    'japan',\r\n    'japed',\r\n    'japer',\r\n    'japes',\r\n    'jarks',\r\n    'jarls',\r\n    'jarps',\r\n    'jarta',\r\n    'jarul',\r\n    'jasey',\r\n    'jaspe',\r\n    'jasps',\r\n    'jatos',\r\n    'jauks',\r\n    'jaups',\r\n    'javas',\r\n    'javel',\r\n    'jawan',\r\n    'jawed',\r\n    'jaxie',\r\n    'jeans',\r\n    'jeats',\r\n    'jebel',\r\n    'jedis',\r\n    'jeels',\r\n    'jeely',\r\n    'jeeps',\r\n    'jeers',\r\n    'jeeze',\r\n    'jefes',\r\n    'jeffs',\r\n    'jehad',\r\n    'jehus',\r\n    'jelab',\r\n    'jello',\r\n    'jells',\r\n    'jembe',\r\n    'jemmy',\r\n    'jenny',\r\n    'jeons',\r\n    'jerid',\r\n    'jerks',\r\n    'jerry',\r\n    'jesse',\r\n    'jests',\r\n    'jesus',\r\n    'jetes',\r\n    'jeton',\r\n    'jeune',\r\n    'jewed',\r\n    'jewie',\r\n    'jhala',\r\n    'jiaos',\r\n    'jibba',\r\n    'jibbs',\r\n    'jibed',\r\n    'jiber',\r\n    'jibes',\r\n    'jiffs',\r\n    'jiggy',\r\n    'jigot',\r\n    'jihad',\r\n    'jills',\r\n    'jilts',\r\n    'jimmy',\r\n    'jimpy',\r\n    'jingo',\r\n    'jinks',\r\n    'jinne',\r\n    'jinni',\r\n    'jinns',\r\n    'jirds',\r\n    'jirga',\r\n    'jirre',\r\n    'jisms',\r\n    'jived',\r\n    'jiver',\r\n    'jives',\r\n    'jivey',\r\n    'jnana',\r\n    'jobed',\r\n    'jobes',\r\n    'jocko',\r\n    'jocks',\r\n    'jocky',\r\n    'jocos',\r\n    'jodel',\r\n    'joeys',\r\n    'johns',\r\n    'joins',\r\n    'joked',\r\n    'jokes',\r\n    'jokey',\r\n    'jokol',\r\n    'joled',\r\n    'joles',\r\n    'jolls',\r\n    'jolts',\r\n    'jolty',\r\n    'jomon',\r\n    'jomos',\r\n    'jones',\r\n    'jongs',\r\n    'jonty',\r\n    'jooks',\r\n    'joram',\r\n    'jorum',\r\n    'jotas',\r\n    'jotty',\r\n    'jotun',\r\n    'joual',\r\n    'jougs',\r\n    'jouks',\r\n    'joule',\r\n    'jours',\r\n    'jowar',\r\n    'jowed',\r\n    'jowls',\r\n    'jowly',\r\n    'joyed',\r\n    'jubas',\r\n    'jubes',\r\n    'jucos',\r\n    'judas',\r\n    'judgy',\r\n    'judos',\r\n    'jugal',\r\n    'jugum',\r\n    'jujus',\r\n    'juked',\r\n    'jukes',\r\n    'jukus',\r\n    'julep',\r\n    'jumar',\r\n    'jumby',\r\n    'jumps',\r\n    'junco',\r\n    'junks',\r\n    'junky',\r\n    'jupes',\r\n    'jupon',\r\n    'jural',\r\n    'jurat',\r\n    'jurel',\r\n    'jures',\r\n    'justs',\r\n    'jutes',\r\n    'jutty',\r\n    'juves',\r\n    'juvie',\r\n    'kaama',\r\n    'kabab',\r\n    'kabar',\r\n    'kabob',\r\n    'kacha',\r\n    'kacks',\r\n    'kadai',\r\n    'kades',\r\n    'kadis',\r\n    'kafir',\r\n    'kagos',\r\n    'kagus',\r\n    'kahal',\r\n    'kaiak',\r\n    'kaids',\r\n    'kaies',\r\n    'kaifs',\r\n    'kaika',\r\n    'kaiks',\r\n    'kails',\r\n    'kaims',\r\n    'kaing',\r\n    'kains',\r\n    'kakas',\r\n    'kakis',\r\n    'kalam',\r\n    'kales',\r\n    'kalif',\r\n    'kalis',\r\n    'kalpa',\r\n    'kamas',\r\n    'kames',\r\n    'kamik',\r\n    'kamis',\r\n    'kamme',\r\n    'kanae',\r\n    'kanas',\r\n    'kandy',\r\n    'kaneh',\r\n    'kanes',\r\n    'kanga',\r\n    'kangs',\r\n    'kanji',\r\n    'kants',\r\n    'kanzu',\r\n    'kaons',\r\n    'kapas',\r\n    'kaphs',\r\n    'kapok',\r\n    'kapow',\r\n    'kapus',\r\n    'kaput',\r\n    'karas',\r\n    'karat',\r\n    'karks',\r\n    'karns',\r\n    'karoo',\r\n    'karos',\r\n    'karri',\r\n    'karst',\r\n    'karsy',\r\n    'karts',\r\n    'karzy',\r\n    'kasha',\r\n    'kasme',\r\n    'katal',\r\n    'katas',\r\n    'katis',\r\n    'katti',\r\n    'kaugh',\r\n    'kauri',\r\n    'kauru',\r\n    'kaury',\r\n    'kaval',\r\n    'kavas',\r\n    'kawas',\r\n    'kawau',\r\n    'kawed',\r\n    'kayle',\r\n    'kayos',\r\n    'kazis',\r\n    'kazoo',\r\n    'kbars',\r\n    'kebar',\r\n    'kebob',\r\n    'kecks',\r\n    'kedge',\r\n    'kedgy',\r\n    'keech',\r\n    'keefs',\r\n    'keeks',\r\n    'keels',\r\n    'keema',\r\n    'keeno',\r\n    'keens',\r\n    'keeps',\r\n    'keets',\r\n    'keeve',\r\n    'kefir',\r\n    'kehua',\r\n    'keirs',\r\n    'kelep',\r\n    'kelim',\r\n    'kells',\r\n    'kelly',\r\n    'kelps',\r\n    'kelpy',\r\n    'kelts',\r\n    'kelty',\r\n    'kembo',\r\n    'kembs',\r\n    'kemps',\r\n    'kempt',\r\n    'kempy',\r\n    'kenaf',\r\n    'kench',\r\n    'kendo',\r\n    'kenos',\r\n    'kente',\r\n    'kents',\r\n    'kepis',\r\n    'kerbs',\r\n    'kerel',\r\n    'kerfs',\r\n    'kerky',\r\n    'kerma',\r\n    'kerne',\r\n    'kerns',\r\n    'keros',\r\n    'kerry',\r\n    'kerve',\r\n    'kesar',\r\n    'kests',\r\n    'ketas',\r\n    'ketch',\r\n    'ketes',\r\n    'ketol',\r\n    'kevel',\r\n    'kevil',\r\n    'kexes',\r\n    'keyed',\r\n    'keyer',\r\n    'khadi',\r\n    'khafs',\r\n    'khans',\r\n    'khaph',\r\n    'khats',\r\n    'khaya',\r\n    'khazi',\r\n    'kheda',\r\n    'kheth',\r\n    'khets',\r\n    'khoja',\r\n    'khors',\r\n    'khoum',\r\n    'khuds',\r\n    'kiaat',\r\n    'kiack',\r\n    'kiang',\r\n    'kibbe',\r\n    'kibbi',\r\n    'kibei',\r\n    'kibes',\r\n    'kibla',\r\n    'kicks',\r\n    'kicky',\r\n    'kiddo',\r\n    'kiddy',\r\n    'kidel',\r\n    'kidge',\r\n    'kiefs',\r\n    'kiers',\r\n    'kieve',\r\n    'kievs',\r\n    'kight',\r\n    'kikes',\r\n    'kikoi',\r\n    'kiley',\r\n    'kilim',\r\n    'kills',\r\n    'kilns',\r\n    'kilos',\r\n    'kilps',\r\n    'kilts',\r\n    'kilty',\r\n    'kimbo',\r\n    'kinas',\r\n    'kinda',\r\n    'kinds',\r\n    'kindy',\r\n    'kines',\r\n    'kings',\r\n    'kinin',\r\n    'kinks',\r\n    'kinos',\r\n    'kiore',\r\n    'kipes',\r\n    'kippa',\r\n    'kipps',\r\n    'kirby',\r\n    'kirks',\r\n    'kirns',\r\n    'kirri',\r\n    'kisan',\r\n    'kissy',\r\n    'kists',\r\n    'kited',\r\n    'kiter',\r\n    'kites',\r\n    'kithe',\r\n    'kiths',\r\n    'kitul',\r\n    'kivas',\r\n    'kiwis',\r\n    'klang',\r\n    'klaps',\r\n    'klett',\r\n    'klick',\r\n    'klieg',\r\n    'kliks',\r\n    'klong',\r\n    'kloof',\r\n    'kluge',\r\n    'klutz',\r\n    'knags',\r\n    'knaps',\r\n    'knarl',\r\n    'knars',\r\n    'knaur',\r\n    'knawe',\r\n    'knees',\r\n    'knell',\r\n    'knish',\r\n    'knits',\r\n    'knive',\r\n    'knobs',\r\n    'knops',\r\n    'knosp',\r\n    'knots',\r\n    'knout',\r\n    'knowe',\r\n    'knows',\r\n    'knubs',\r\n    'knurl',\r\n    'knurr',\r\n    'knurs',\r\n    'knuts',\r\n    'koans',\r\n    'koaps',\r\n    'koban',\r\n    'kobos',\r\n    'koels',\r\n    'koffs',\r\n    'kofta',\r\n    'kogal',\r\n    'kohas',\r\n    'kohen',\r\n    'kohls',\r\n    'koine',\r\n    'kojis',\r\n    'kokam',\r\n    'kokas',\r\n    'koker',\r\n    'kokra',\r\n    'kokum',\r\n    'kolas',\r\n    'kolos',\r\n    'kombu',\r\n    'konbu',\r\n    'kondo',\r\n    'konks',\r\n    'kooks',\r\n    'kooky',\r\n    'koori',\r\n    'kopek',\r\n    'kophs',\r\n    'kopje',\r\n    'koppa',\r\n    'korai',\r\n    'koras',\r\n    'korat',\r\n    'kores',\r\n    'korma',\r\n    'koros',\r\n    'korun',\r\n    'korus',\r\n    'koses',\r\n    'kotch',\r\n    'kotos',\r\n    'kotow',\r\n    'koura',\r\n    'kraal',\r\n    'krabs',\r\n    'kraft',\r\n    'krais',\r\n    'krait',\r\n    'krang',\r\n    'krans',\r\n    'kranz',\r\n    'kraut',\r\n    'krays',\r\n    'kreep',\r\n    'kreng',\r\n    'krewe',\r\n    'krona',\r\n    'krone',\r\n    'kroon',\r\n    'krubi',\r\n    'krunk',\r\n    'ksars',\r\n    'kubie',\r\n    'kudos',\r\n    'kudus',\r\n    'kudzu',\r\n    'kufis',\r\n    'kugel',\r\n    'kuias',\r\n    'kukri',\r\n    'kukus',\r\n    'kulak',\r\n    'kulan',\r\n    'kulas',\r\n    'kulfi',\r\n    'kumis',\r\n    'kumys',\r\n    'kuris',\r\n    'kurre',\r\n    'kurta',\r\n    'kurus',\r\n    'kusso',\r\n    'kutas',\r\n    'kutch',\r\n    'kutis',\r\n    'kutus',\r\n    'kuzus',\r\n    'kvass',\r\n    'kvell',\r\n    'kwela',\r\n    'kyack',\r\n    'kyaks',\r\n    'kyang',\r\n    'kyars',\r\n    'kyats',\r\n    'kybos',\r\n    'kydst',\r\n    'kyles',\r\n    'kylie',\r\n    'kylin',\r\n    'kylix',\r\n    'kyloe',\r\n    'kynde',\r\n    'kynds',\r\n    'kypes',\r\n    'kyrie',\r\n    'kytes',\r\n    'kythe',\r\n    'laari',\r\n    'labda',\r\n    'labia',\r\n    'labis',\r\n    'labra',\r\n    'laced',\r\n    'lacer',\r\n    'laces',\r\n    'lacet',\r\n    'lacey',\r\n    'lacks',\r\n    'laddy',\r\n    'laded',\r\n    'lader',\r\n    'lades',\r\n    'laers',\r\n    'laevo',\r\n    'lagan',\r\n    'lahal',\r\n    'lahar',\r\n    'laich',\r\n    'laics',\r\n    'laids',\r\n    'laigh',\r\n    'laika',\r\n    'laiks',\r\n    'laird',\r\n    'lairs',\r\n    'lairy',\r\n    'laith',\r\n    'laity',\r\n    'laked',\r\n    'laker',\r\n    'lakes',\r\n    'lakhs',\r\n    'lakin',\r\n    'laksa',\r\n    'laldy',\r\n    'lalls',\r\n    'lamas',\r\n    'lambs',\r\n    'lamby',\r\n    'lamed',\r\n    'lamer',\r\n    'lames',\r\n    'lamia',\r\n    'lammy',\r\n    'lamps',\r\n    'lanai',\r\n    'lanas',\r\n    'lanch',\r\n    'lande',\r\n    'lands',\r\n    'lanes',\r\n    'lanks',\r\n    'lants',\r\n    'lapin',\r\n    'lapis',\r\n    'lapje',\r\n    'larch',\r\n    'lards',\r\n    'lardy',\r\n    'laree',\r\n    'lares',\r\n    'largo',\r\n    'laris',\r\n    'larks',\r\n    'larky',\r\n    'larns',\r\n    'larnt',\r\n    'larum',\r\n    'lased',\r\n    'laser',\r\n    'lases',\r\n    'lassi',\r\n    'lassu',\r\n    'lassy',\r\n    'lasts',\r\n    'latah',\r\n    'lated',\r\n    'laten',\r\n    'latex',\r\n    'lathi',\r\n    'laths',\r\n    'lathy',\r\n    'latke',\r\n    'latus',\r\n    'lauan',\r\n    'lauch',\r\n    'lauds',\r\n    'laufs',\r\n    'laund',\r\n    'laura',\r\n    'laval',\r\n    'lavas',\r\n    'laved',\r\n    'laver',\r\n    'laves',\r\n    'lavra',\r\n    'lavvy',\r\n    'lawed',\r\n    'lawer',\r\n    'lawin',\r\n    'lawks',\r\n    'lawns',\r\n    'lawny',\r\n    'laxed',\r\n    'laxer',\r\n    'laxes',\r\n    'laxly',\r\n    'layed',\r\n    'layin',\r\n    'layup',\r\n    'lazar',\r\n    'lazed',\r\n    'lazes',\r\n    'lazos',\r\n    'lazzi',\r\n    'lazzo',\r\n    'leads',\r\n    'leady',\r\n    'leafs',\r\n    'leaks',\r\n    'leams',\r\n    'leans',\r\n    'leany',\r\n    'leaps',\r\n    'leare',\r\n    'lears',\r\n    'leary',\r\n    'leats',\r\n    'leavy',\r\n    'leaze',\r\n    'leben',\r\n    'leccy',\r\n    'ledes',\r\n    'ledgy',\r\n    'ledum',\r\n    'leear',\r\n    'leeks',\r\n    'leeps',\r\n    'leers',\r\n    'leese',\r\n    'leets',\r\n    'leeze',\r\n    'lefte',\r\n    'lefts',\r\n    'leger',\r\n    'leges',\r\n    'legge',\r\n    'leggo',\r\n    'legit',\r\n    'lehrs',\r\n    'lehua',\r\n    'leirs',\r\n    'leish',\r\n    'leman',\r\n    'lemed',\r\n    'lemel',\r\n    'lemes',\r\n    'lemma',\r\n    'lemme',\r\n    'lends',\r\n    'lenes',\r\n    'lengs',\r\n    'lenis',\r\n    'lenos',\r\n    'lense',\r\n    'lenti',\r\n    'lento',\r\n    'leone',\r\n    'lepid',\r\n    'lepra',\r\n    'lepta',\r\n    'lered',\r\n    'leres',\r\n    'lerps',\r\n    'lesbo',\r\n    'leses',\r\n    'lests',\r\n    'letch',\r\n    'lethe',\r\n    'letup',\r\n    'leuch',\r\n    'leuco',\r\n    'leuds',\r\n    'leugh',\r\n    'levas',\r\n    'levee',\r\n    'leves',\r\n    'levin',\r\n    'levis',\r\n    'lewis',\r\n    'lexes',\r\n    'lexis',\r\n    'lezes',\r\n    'lezza',\r\n    'lezzy',\r\n    'liana',\r\n    'liane',\r\n    'liang',\r\n    'liard',\r\n    'liars',\r\n    'liart',\r\n    'liber',\r\n    'libra',\r\n    'libri',\r\n    'lichi',\r\n    'licht',\r\n    'licit',\r\n    'licks',\r\n    'lidar',\r\n    'lidos',\r\n    'liefs',\r\n    'liens',\r\n    'liers',\r\n    'lieus',\r\n    'lieve',\r\n    'lifer',\r\n    'lifes',\r\n    'lifts',\r\n    'ligan',\r\n    'liger',\r\n    'ligge',\r\n    'ligne',\r\n    'liked',\r\n    'liker',\r\n    'likes',\r\n    'likin',\r\n    'lills',\r\n    'lilos',\r\n    'lilts',\r\n    'liman',\r\n    'limas',\r\n    'limax',\r\n    'limba',\r\n    'limbi',\r\n    'limbs',\r\n    'limby',\r\n    'limed',\r\n    'limen',\r\n    'limes',\r\n    'limey',\r\n    'limma',\r\n    'limns',\r\n    'limos',\r\n    'limpa',\r\n    'limps',\r\n    'linac',\r\n    'linch',\r\n    'linds',\r\n    'lindy',\r\n    'lined',\r\n    'lines',\r\n    'liney',\r\n    'linga',\r\n    'lings',\r\n    'lingy',\r\n    'linin',\r\n    'links',\r\n    'linky',\r\n    'linns',\r\n    'linny',\r\n    'linos',\r\n    'lints',\r\n    'linty',\r\n    'linum',\r\n    'linux',\r\n    'lions',\r\n    'lipas',\r\n    'lipes',\r\n    'lipin',\r\n    'lipos',\r\n    'lippy',\r\n    'liras',\r\n    'lirks',\r\n    'lirot',\r\n    'lisks',\r\n    'lisle',\r\n    'lisps',\r\n    'lists',\r\n    'litai',\r\n    'litas',\r\n    'lited',\r\n    'liter',\r\n    'lites',\r\n    'litho',\r\n    'liths',\r\n    'litre',\r\n    'lived',\r\n    'liven',\r\n    'lives',\r\n    'livor',\r\n    'livre',\r\n    'llano',\r\n    'loach',\r\n    'loads',\r\n    'loafs',\r\n    'loams',\r\n    'loans',\r\n    'loast',\r\n    'loave',\r\n    'lobar',\r\n    'lobed',\r\n    'lobes',\r\n    'lobos',\r\n    'lobus',\r\n    'loche',\r\n    'lochs',\r\n    'locie',\r\n    'locis',\r\n    'locks',\r\n    'locos',\r\n    'locum',\r\n    'loden',\r\n    'lodes',\r\n    'loess',\r\n    'lofts',\r\n    'logan',\r\n    'loges',\r\n    'loggy',\r\n    'logia',\r\n    'logie',\r\n    'logoi',\r\n    'logon',\r\n    'logos',\r\n    'lohan',\r\n    'loids',\r\n    'loins',\r\n    'loipe',\r\n    'loirs',\r\n    'lokes',\r\n    'lolls',\r\n    'lolly',\r\n    'lolog',\r\n    'lomas',\r\n    'lomed',\r\n    'lomes',\r\n    'loner',\r\n    'longa',\r\n    'longe',\r\n    'longs',\r\n    'looby',\r\n    'looed',\r\n    'looey',\r\n    'loofa',\r\n    'loofs',\r\n    'looie',\r\n    'looks',\r\n    'looky',\r\n    'looms',\r\n    'loons',\r\n    'loony',\r\n    'loops',\r\n    'loord',\r\n    'loots',\r\n    'loped',\r\n    'loper',\r\n    'lopes',\r\n    'loppy',\r\n    'loral',\r\n    'loran',\r\n    'lords',\r\n    'lordy',\r\n    'lorel',\r\n    'lores',\r\n    'loric',\r\n    'loris',\r\n    'losed',\r\n    'losel',\r\n    'losen',\r\n    'loses',\r\n    'lossy',\r\n    'lotah',\r\n    'lotas',\r\n    'lotes',\r\n    'lotic',\r\n    'lotos',\r\n    'lotsa',\r\n    'lotta',\r\n    'lotte',\r\n    'lotto',\r\n    'lotus',\r\n    'loued',\r\n    'lough',\r\n    'louie',\r\n    'louis',\r\n    'louma',\r\n    'lound',\r\n    'louns',\r\n    'loupe',\r\n    'loups',\r\n    'loure',\r\n    'lours',\r\n    'loury',\r\n    'louts',\r\n    'lovat',\r\n    'loved',\r\n    'loves',\r\n    'lovey',\r\n    'lovie',\r\n    'lowan',\r\n    'lowed',\r\n    'lowes',\r\n    'lownd',\r\n    'lowne',\r\n    'lowns',\r\n    'lowps',\r\n    'lowry',\r\n    'lowse',\r\n    'lowts',\r\n    'loxed',\r\n    'loxes',\r\n    'lozen',\r\n    'luach',\r\n    'luaus',\r\n    'lubed',\r\n    'lubes',\r\n    'lubra',\r\n    'luces',\r\n    'lucks',\r\n    'lucre',\r\n    'ludes',\r\n    'ludic',\r\n    'ludos',\r\n    'luffa',\r\n    'luffs',\r\n    'luged',\r\n    'luger',\r\n    'luges',\r\n    'lulls',\r\n    'lulus',\r\n    'lumas',\r\n    'lumbi',\r\n    'lumme',\r\n    'lummy',\r\n    'lumps',\r\n    'lunas',\r\n    'lunes',\r\n    'lunet',\r\n    'lungi',\r\n    'lungs',\r\n    'lunks',\r\n    'lunts',\r\n    'lupin',\r\n    'lured',\r\n    'lurer',\r\n    'lures',\r\n    'lurex',\r\n    'lurgi',\r\n    'lurgy',\r\n    'lurks',\r\n    'lurry',\r\n    'lurve',\r\n    'luser',\r\n    'lushy',\r\n    'lusks',\r\n    'lusts',\r\n    'lusus',\r\n    'lutea',\r\n    'luted',\r\n    'luter',\r\n    'lutes',\r\n    'luvvy',\r\n    'luxed',\r\n    'luxer',\r\n    'luxes',\r\n    'lweis',\r\n    'lyams',\r\n    'lyard',\r\n    'lyart',\r\n    'lyase',\r\n    'lycea',\r\n    'lycee',\r\n    'lycra',\r\n    'lymes',\r\n    'lynes',\r\n    'lyres',\r\n    'lysed',\r\n    'lyses',\r\n    'lysin',\r\n    'lysis',\r\n    'lysol',\r\n    'lyssa',\r\n    'lyted',\r\n    'lytes',\r\n    'lythe',\r\n    'lytic',\r\n    'lytta',\r\n    'maaed',\r\n    'maare',\r\n    'maars',\r\n    'mabes',\r\n    'macas',\r\n    'maced',\r\n    'macer',\r\n    'maces',\r\n    'mache',\r\n    'machi',\r\n    'machs',\r\n    'macks',\r\n    'macle',\r\n    'macon',\r\n    'madge',\r\n    'madid',\r\n    'madre',\r\n    'maerl',\r\n    'mafic',\r\n    'mages',\r\n    'maggs',\r\n    'magot',\r\n    'magus',\r\n    'mahoe',\r\n    'mahua',\r\n    'mahwa',\r\n    'maids',\r\n    'maiko',\r\n    'maiks',\r\n    'maile',\r\n    'maill',\r\n    'mails',\r\n    'maims',\r\n    'mains',\r\n    'maire',\r\n    'mairs',\r\n    'maise',\r\n    'maist',\r\n    'makar',\r\n    'makes',\r\n    'makis',\r\n    'makos',\r\n    'malam',\r\n    'malar',\r\n    'malas',\r\n    'malax',\r\n    'males',\r\n    'malic',\r\n    'malik',\r\n    'malis',\r\n    'malls',\r\n    'malms',\r\n    'malmy',\r\n    'malts',\r\n    'malty',\r\n    'malus',\r\n    'malva',\r\n    'malwa',\r\n    'mamas',\r\n    'mamba',\r\n    'mamee',\r\n    'mamey',\r\n    'mamie',\r\n    'manas',\r\n    'manat',\r\n    'mandi',\r\n    'maneb',\r\n    'maned',\r\n    'maneh',\r\n    'manes',\r\n    'manet',\r\n    'mangs',\r\n    'manis',\r\n    'manky',\r\n    'manna',\r\n    'manos',\r\n    'manse',\r\n    'manta',\r\n    'manto',\r\n    'manty',\r\n    'manul',\r\n    'manus',\r\n    'mapau',\r\n    'maqui',\r\n    'marae',\r\n    'marah',\r\n    'maras',\r\n    'marcs',\r\n    'mardy',\r\n    'mares',\r\n    'marge',\r\n    'margs',\r\n    'maria',\r\n    'marid',\r\n    'marka',\r\n    'marks',\r\n    'marle',\r\n    'marls',\r\n    'marly',\r\n    'marms',\r\n    'maron',\r\n    'maror',\r\n    'marra',\r\n    'marri',\r\n    'marse',\r\n    'marts',\r\n    'marvy',\r\n    'masas',\r\n    'mased',\r\n    'maser',\r\n    'mases',\r\n    'mashy',\r\n    'masks',\r\n    'massa',\r\n    'massy',\r\n    'masts',\r\n    'masty',\r\n    'masus',\r\n    'matai',\r\n    'mated',\r\n    'mater',\r\n    'mates',\r\n    'maths',\r\n    'matin',\r\n    'matlo',\r\n    'matte',\r\n    'matts',\r\n    'matza',\r\n    'matzo',\r\n    'mauby',\r\n    'mauds',\r\n    'mauls',\r\n    'maund',\r\n    'mauri',\r\n    'mausy',\r\n    'mauts',\r\n    'mauzy',\r\n    'maven',\r\n    'mavie',\r\n    'mavin',\r\n    'mavis',\r\n    'mawed',\r\n    'mawks',\r\n    'mawky',\r\n    'mawns',\r\n    'mawrs',\r\n    'maxed',\r\n    'maxes',\r\n    'maxis',\r\n    'mayan',\r\n    'mayas',\r\n    'mayed',\r\n    'mayos',\r\n    'mayst',\r\n    'mazed',\r\n    'mazer',\r\n    'mazes',\r\n    'mazey',\r\n    'mazut',\r\n    'mbira',\r\n    'meads',\r\n    'meals',\r\n    'meane',\r\n    'means',\r\n    'meany',\r\n    'meare',\r\n    'mease',\r\n    'meath',\r\n    'meats',\r\n    'mebos',\r\n    'mechs',\r\n    'mecks',\r\n    'medii',\r\n    'medle',\r\n    'meeds',\r\n    'meers',\r\n    'meets',\r\n    'meffs',\r\n    'meins',\r\n    'meint',\r\n    'meiny',\r\n    'meith',\r\n    'mekka',\r\n    'melas',\r\n    'melba',\r\n    'melds',\r\n    'melic',\r\n    'melik',\r\n    'mells',\r\n    'melts',\r\n    'melty',\r\n    'memes',\r\n    'memos',\r\n    'menad',\r\n    'mends',\r\n    'mened',\r\n    'menes',\r\n    'menge',\r\n    'mengs',\r\n    'mensa',\r\n    'mense',\r\n    'mensh',\r\n    'menta',\r\n    'mento',\r\n    'menus',\r\n    'meous',\r\n    'meows',\r\n    'merch',\r\n    'mercs',\r\n    'merde',\r\n    'mered',\r\n    'merel',\r\n    'merer',\r\n    'meres',\r\n    'meril',\r\n    'meris',\r\n    'merks',\r\n    'merle',\r\n    'merls',\r\n    'merse',\r\n    'mesal',\r\n    'mesas',\r\n    'mesel',\r\n    'meses',\r\n    'meshy',\r\n    'mesic',\r\n    'mesne',\r\n    'meson',\r\n    'messy',\r\n    'mesto',\r\n    'meted',\r\n    'metes',\r\n    'metho',\r\n    'meths',\r\n    'metic',\r\n    'metif',\r\n    'metis',\r\n    'metol',\r\n    'metre',\r\n    'meuse',\r\n    'meved',\r\n    'meves',\r\n    'mewed',\r\n    'mewls',\r\n    'meynt',\r\n    'mezes',\r\n    'mezze',\r\n    'mezzo',\r\n    'mhorr',\r\n    'miaou',\r\n    'miaow',\r\n    'miasm',\r\n    'miaul',\r\n    'micas',\r\n    'miche',\r\n    'micht',\r\n    'micks',\r\n    'micky',\r\n    'micos',\r\n    'micra',\r\n    'middy',\r\n    'midgy',\r\n    'midis',\r\n    'miens',\r\n    'mieve',\r\n    'miffs',\r\n    'miffy',\r\n    'mifty',\r\n    'miggs',\r\n    'mihas',\r\n    'mihis',\r\n    'miked',\r\n    'mikes',\r\n    'mikra',\r\n    'mikva',\r\n    'milch',\r\n    'milds',\r\n    'miler',\r\n    'miles',\r\n    'milfs',\r\n    'milia',\r\n    'milko',\r\n    'milks',\r\n    'mille',\r\n    'mills',\r\n    'milor',\r\n    'milos',\r\n    'milpa',\r\n    'milts',\r\n    'milty',\r\n    'miltz',\r\n    'mimed',\r\n    'mimeo',\r\n    'mimer',\r\n    'mimes',\r\n    'mimsy',\r\n    'minae',\r\n    'minar',\r\n    'minas',\r\n    'mincy',\r\n    'minds',\r\n    'mined',\r\n    'mines',\r\n    'minge',\r\n    'mings',\r\n    'mingy',\r\n    'minis',\r\n    'minke',\r\n    'minks',\r\n    'minny',\r\n    'minos',\r\n    'mints',\r\n    'mired',\r\n    'mires',\r\n    'mirex',\r\n    'mirid',\r\n    'mirin',\r\n    'mirks',\r\n    'mirky',\r\n    'mirly',\r\n    'miros',\r\n    'mirvs',\r\n    'mirza',\r\n    'misch',\r\n    'misdo',\r\n    'mises',\r\n    'misgo',\r\n    'misos',\r\n    'missa',\r\n    'mists',\r\n    'misty',\r\n    'mitch',\r\n    'miter',\r\n    'mites',\r\n    'mitis',\r\n    'mitre',\r\n    'mitts',\r\n    'mixed',\r\n    'mixen',\r\n    'mixer',\r\n    'mixes',\r\n    'mixte',\r\n    'mixup',\r\n    'mizen',\r\n    'mizzy',\r\n    'mneme',\r\n    'moans',\r\n    'moats',\r\n    'mobby',\r\n    'mobes',\r\n    'mobey',\r\n    'mobie',\r\n    'moble',\r\n    'mochi',\r\n    'mochs',\r\n    'mochy',\r\n    'mocks',\r\n    'moder',\r\n    'modes',\r\n    'modge',\r\n    'modii',\r\n    'modus',\r\n    'moers',\r\n    'mofos',\r\n    'moggy',\r\n    'mohel',\r\n    'mohos',\r\n    'mohrs',\r\n    'mohua',\r\n    'mohur',\r\n    'moile',\r\n    'moils',\r\n    'moira',\r\n    'moire',\r\n    'moits',\r\n    'mojos',\r\n    'mokes',\r\n    'mokis',\r\n    'mokos',\r\n    'molal',\r\n    'molas',\r\n    'molds',\r\n    'moled',\r\n    'moles',\r\n    'molla',\r\n    'molls',\r\n    'molly',\r\n    'molto',\r\n    'molts',\r\n    'molys',\r\n    'momes',\r\n    'momma',\r\n    'mommy',\r\n    'momus',\r\n    'monad',\r\n    'monal',\r\n    'monas',\r\n    'monde',\r\n    'mondo',\r\n    'moner',\r\n    'mongo',\r\n    'mongs',\r\n    'monic',\r\n    'monie',\r\n    'monks',\r\n    'monos',\r\n    'monte',\r\n    'monty',\r\n    'moobs',\r\n    'mooch',\r\n    'moods',\r\n    'mooed',\r\n    'mooks',\r\n    'moola',\r\n    'mooli',\r\n    'mools',\r\n    'mooly',\r\n    'moong',\r\n    'moons',\r\n    'moony',\r\n    'moops',\r\n    'moors',\r\n    'moory',\r\n    'moots',\r\n    'moove',\r\n    'moped',\r\n    'moper',\r\n    'mopes',\r\n    'mopey',\r\n    'moppy',\r\n    'mopsy',\r\n    'mopus',\r\n    'morae',\r\n    'moras',\r\n    'morat',\r\n    'moray',\r\n    'morel',\r\n    'mores',\r\n    'moria',\r\n    'morne',\r\n    'morns',\r\n    'morra',\r\n    'morro',\r\n    'morse',\r\n    'morts',\r\n    'mosed',\r\n    'moses',\r\n    'mosey',\r\n    'mosks',\r\n    'mosso',\r\n    'moste',\r\n    'mosts',\r\n    'moted',\r\n    'moten',\r\n    'motes',\r\n    'motet',\r\n    'motey',\r\n    'moths',\r\n    'mothy',\r\n    'motis',\r\n    'motte',\r\n    'motts',\r\n    'motty',\r\n    'motus',\r\n    'motza',\r\n    'mouch',\r\n    'moues',\r\n    'mould',\r\n    'mouls',\r\n    'moups',\r\n    'moust',\r\n    'mousy',\r\n    'moved',\r\n    'moves',\r\n    'mowas',\r\n    'mowed',\r\n    'mowra',\r\n    'moxas',\r\n    'moxie',\r\n    'moyas',\r\n    'moyle',\r\n    'moyls',\r\n    'mozed',\r\n    'mozes',\r\n    'mozos',\r\n    'mpret',\r\n    'mucho',\r\n    'mucic',\r\n    'mucid',\r\n    'mucin',\r\n    'mucks',\r\n    'mucor',\r\n    'mucro',\r\n    'mudge',\r\n    'mudir',\r\n    'mudra',\r\n    'muffs',\r\n    'mufti',\r\n    'mugga',\r\n    'muggs',\r\n    'muggy',\r\n    'muhly',\r\n    'muids',\r\n    'muils',\r\n    'muirs',\r\n    'muist',\r\n    'mujik',\r\n    'mulct',\r\n    'muled',\r\n    'mules',\r\n    'muley',\r\n    'mulga',\r\n    'mulie',\r\n    'mulla',\r\n    'mulls',\r\n    'mulse',\r\n    'mulsh',\r\n    'mumms',\r\n    'mumps',\r\n    'mumsy',\r\n    'mumus',\r\n    'munga',\r\n    'munge',\r\n    'mungo',\r\n    'mungs',\r\n    'munis',\r\n    'munts',\r\n    'muntu',\r\n    'muons',\r\n    'muras',\r\n    'mured',\r\n    'mures',\r\n    'murex',\r\n    'murid',\r\n    'murks',\r\n    'murls',\r\n    'murly',\r\n    'murra',\r\n    'murre',\r\n    'murri',\r\n    'murrs',\r\n    'murry',\r\n    'murti',\r\n    'murva',\r\n    'musar',\r\n    'musca',\r\n    'mused',\r\n    'muser',\r\n    'muses',\r\n    'muset',\r\n    'musha',\r\n    'musit',\r\n    'musks',\r\n    'musos',\r\n    'musse',\r\n    'mussy',\r\n    'musth',\r\n    'musts',\r\n    'mutch',\r\n    'muted',\r\n    'muter',\r\n    'mutes',\r\n    'mutha',\r\n    'mutis',\r\n    'muton',\r\n    'mutts',\r\n    'muxed',\r\n    'muxes',\r\n    'muzak',\r\n    'muzzy',\r\n    'mvule',\r\n    'myall',\r\n    'mylar',\r\n    'mynah',\r\n    'mynas',\r\n    'myoid',\r\n    'myoma',\r\n    'myope',\r\n    'myops',\r\n    'myopy',\r\n    'mysid',\r\n    'mythi',\r\n    'myths',\r\n    'mythy',\r\n    'myxos',\r\n    'mzees',\r\n    'naams',\r\n    'naans',\r\n    'nabes',\r\n    'nabis',\r\n    'nabks',\r\n    'nabla',\r\n    'nabob',\r\n    'nache',\r\n    'nacho',\r\n    'nacre',\r\n    'nadas',\r\n    'naeve',\r\n    'naevi',\r\n    'naffs',\r\n    'nagas',\r\n    'naggy',\r\n    'nagor',\r\n    'nahal',\r\n    'naiad',\r\n    'naifs',\r\n    'naiks',\r\n    'nails',\r\n    'naira',\r\n    'nairu',\r\n    'naked',\r\n    'naker',\r\n    'nakfa',\r\n    'nalas',\r\n    'naled',\r\n    'nalla',\r\n    'named',\r\n    'namer',\r\n    'names',\r\n    'namma',\r\n    'namus',\r\n    'nanas',\r\n    'nance',\r\n    'nancy',\r\n    'nandu',\r\n    'nanna',\r\n    'nanos',\r\n    'nanua',\r\n    'napas',\r\n    'naped',\r\n    'napes',\r\n    'napoo',\r\n    'nappa',\r\n    'nappe',\r\n    'nappy',\r\n    'naras',\r\n    'narco',\r\n    'narcs',\r\n    'nards',\r\n    'nares',\r\n    'naric',\r\n    'naris',\r\n    'narks',\r\n    'narky',\r\n    'narre',\r\n    'nashi',\r\n    'natch',\r\n    'nates',\r\n    'natis',\r\n    'natty',\r\n    'nauch',\r\n    'naunt',\r\n    'navar',\r\n    'naves',\r\n    'navew',\r\n    'navvy',\r\n    'nawab',\r\n    'nazes',\r\n    'nazir',\r\n    'nazis',\r\n    'nduja',\r\n    'neafe',\r\n    'neals',\r\n    'neaps',\r\n    'nears',\r\n    'neath',\r\n    'neats',\r\n    'nebek',\r\n    'nebel',\r\n    'necks',\r\n    'neddy',\r\n    'needs',\r\n    'neeld',\r\n    'neele',\r\n    'neemb',\r\n    'neems',\r\n    'neeps',\r\n    'neese',\r\n    'neeze',\r\n    'negro',\r\n    'negus',\r\n    'neifs',\r\n    'neist',\r\n    'neive',\r\n    'nelis',\r\n    'nelly',\r\n    'nemas',\r\n    'nemns',\r\n    'nempt',\r\n    'nenes',\r\n    'neons',\r\n    'neper',\r\n    'nepit',\r\n    'neral',\r\n    'nerds',\r\n    'nerka',\r\n    'nerks',\r\n    'nerol',\r\n    'nerts',\r\n    'nertz',\r\n    'nervy',\r\n    'nests',\r\n    'netes',\r\n    'netop',\r\n    'netts',\r\n    'netty',\r\n    'neuks',\r\n    'neume',\r\n    'neums',\r\n    'nevel',\r\n    'neves',\r\n    'nevus',\r\n    'newbs',\r\n    'newed',\r\n    'newel',\r\n    'newie',\r\n    'newsy',\r\n    'newts',\r\n    'nexts',\r\n    'nexus',\r\n    'ngaio',\r\n    'ngana',\r\n    'ngati',\r\n    'ngoma',\r\n    'ngwee',\r\n    'nicad',\r\n    'nicht',\r\n    'nicks',\r\n    'nicol',\r\n    'nidal',\r\n    'nided',\r\n    'nides',\r\n    'nidor',\r\n    'nidus',\r\n    'niefs',\r\n    'nieve',\r\n    'nifes',\r\n    'niffs',\r\n    'niffy',\r\n    'nifty',\r\n    'niger',\r\n    'nighs',\r\n    'nihil',\r\n    'nikab',\r\n    'nikah',\r\n    'nikau',\r\n    'nills',\r\n    'nimbi',\r\n    'nimbs',\r\n    'nimps',\r\n    'niner',\r\n    'nines',\r\n    'ninon',\r\n    'nipas',\r\n    'nippy',\r\n    'niqab',\r\n    'nirls',\r\n    'nirly',\r\n    'nisei',\r\n    'nisse',\r\n    'nisus',\r\n    'niter',\r\n    'nites',\r\n    'nitid',\r\n    'niton',\r\n    'nitre',\r\n    'nitro',\r\n    'nitry',\r\n    'nitty',\r\n    'nival',\r\n    'nixed',\r\n    'nixer',\r\n    'nixes',\r\n    'nixie',\r\n    'nizam',\r\n    'nkosi',\r\n    'noahs',\r\n    'nobby',\r\n    'nocks',\r\n    'nodal',\r\n    'noddy',\r\n    'nodes',\r\n    'nodus',\r\n    'noels',\r\n    'noggs',\r\n    'nohow',\r\n    'noils',\r\n    'noily',\r\n    'noint',\r\n    'noirs',\r\n    'noles',\r\n    'nolls',\r\n    'nolos',\r\n    'nomas',\r\n    'nomen',\r\n    'nomes',\r\n    'nomic',\r\n    'nomoi',\r\n    'nomos',\r\n    'nonas',\r\n    'nonce',\r\n    'nones',\r\n    'nonet',\r\n    'nongs',\r\n    'nonis',\r\n    'nonny',\r\n    'nonyl',\r\n    'noobs',\r\n    'nooit',\r\n    'nooks',\r\n    'nooky',\r\n    'noons',\r\n    'noops',\r\n    'nopal',\r\n    'noria',\r\n    'noris',\r\n    'norks',\r\n    'norma',\r\n    'norms',\r\n    'nosed',\r\n    'noser',\r\n    'noses',\r\n    'notal',\r\n    'noted',\r\n    'noter',\r\n    'notes',\r\n    'notum',\r\n    'nould',\r\n    'noule',\r\n    'nouls',\r\n    'nouns',\r\n    'nouny',\r\n    'noups',\r\n    'novae',\r\n    'novas',\r\n    'novum',\r\n    'noway',\r\n    'nowed',\r\n    'nowls',\r\n    'nowts',\r\n    'nowty',\r\n    'noxal',\r\n    'noxes',\r\n    'noyau',\r\n    'noyed',\r\n    'noyes',\r\n    'nubby',\r\n    'nubia',\r\n    'nucha',\r\n    'nuddy',\r\n    'nuder',\r\n    'nudes',\r\n    'nudie',\r\n    'nudzh',\r\n    'nuffs',\r\n    'nugae',\r\n    'nuked',\r\n    'nukes',\r\n    'nulla',\r\n    'nulls',\r\n    'numbs',\r\n    'numen',\r\n    'nummy',\r\n    'nunny',\r\n    'nurds',\r\n    'nurdy',\r\n    'nurls',\r\n    'nurrs',\r\n    'nutso',\r\n    'nutsy',\r\n    'nyaff',\r\n    'nyala',\r\n    'nying',\r\n    'nyssa',\r\n    'oaked',\r\n    'oaker',\r\n    'oakum',\r\n    'oared',\r\n    'oases',\r\n    'oasis',\r\n    'oasts',\r\n    'oaten',\r\n    'oater',\r\n    'oaths',\r\n    'oaves',\r\n    'obang',\r\n    'obeah',\r\n    'obeli',\r\n    'obeys',\r\n    'obias',\r\n    'obied',\r\n    'obiit',\r\n    'obits',\r\n    'objet',\r\n    'oboes',\r\n    'obole',\r\n    'oboli',\r\n    'obols',\r\n    'occam',\r\n    'ocher',\r\n    'oches',\r\n    'ochre',\r\n    'ochry',\r\n    'ocker',\r\n    'ocrea',\r\n    'octad',\r\n    'octan',\r\n    'octas',\r\n    'octyl',\r\n    'oculi',\r\n    'odahs',\r\n    'odals',\r\n    'odeon',\r\n    'odeum',\r\n    'odism',\r\n    'odist',\r\n    'odium',\r\n    'odors',\r\n    'odour',\r\n    'odyle',\r\n    'odyls',\r\n    'ofays',\r\n    'offed',\r\n    'offie',\r\n    'oflag',\r\n    'ofter',\r\n    'ogams',\r\n    'ogeed',\r\n    'ogees',\r\n    'oggin',\r\n    'ogham',\r\n    'ogive',\r\n    'ogled',\r\n    'ogler',\r\n    'ogles',\r\n    'ogmic',\r\n    'ogres',\r\n    'ohias',\r\n    'ohing',\r\n    'ohmic',\r\n    'ohone',\r\n    'oidia',\r\n    'oiled',\r\n    'oiler',\r\n    'oinks',\r\n    'oints',\r\n    'ojime',\r\n    'okapi',\r\n    'okays',\r\n    'okehs',\r\n    'okras',\r\n    'oktas',\r\n    'oldie',\r\n    'oleic',\r\n    'olein',\r\n    'olent',\r\n    'oleos',\r\n    'oleum',\r\n    'olios',\r\n    'ollas',\r\n    'ollav',\r\n    'oller',\r\n    'ollie',\r\n    'ology',\r\n    'olpae',\r\n    'olpes',\r\n    'omasa',\r\n    'omber',\r\n    'ombus',\r\n    'omens',\r\n    'omers',\r\n    'omits',\r\n    'omlah',\r\n    'omovs',\r\n    'omrah',\r\n    'oncer',\r\n    'onces',\r\n    'oncet',\r\n    'oncus',\r\n    'onely',\r\n    'oners',\r\n    'onery',\r\n    'onium',\r\n    'onkus',\r\n    'onlay',\r\n    'onned',\r\n    'ontic',\r\n    'oobit',\r\n    'oohed',\r\n    'oomph',\r\n    'oonts',\r\n    'ooped',\r\n    'oorie',\r\n    'ooses',\r\n    'ootid',\r\n    'oozed',\r\n    'oozes',\r\n    'opahs',\r\n    'opals',\r\n    'opens',\r\n    'opepe',\r\n    'oping',\r\n    'oppos',\r\n    'opsin',\r\n    'opted',\r\n    'opter',\r\n    'orach',\r\n    'oracy',\r\n    'orals',\r\n    'orang',\r\n    'orant',\r\n    'orate',\r\n    'orbed',\r\n    'orcas',\r\n    'orcin',\r\n    'ordos',\r\n    'oread',\r\n    'orfes',\r\n    'orgia',\r\n    'orgic',\r\n    'orgue',\r\n    'oribi',\r\n    'oriel',\r\n    'orixa',\r\n    'orles',\r\n    'orlon',\r\n    'orlop',\r\n    'ormer',\r\n    'ornis',\r\n    'orpin',\r\n    'orris',\r\n    'ortho',\r\n    'orval',\r\n    'orzos',\r\n    'oscar',\r\n    'oshac',\r\n    'osier',\r\n    'osmic',\r\n    'osmol',\r\n    'ossia',\r\n    'ostia',\r\n    'otaku',\r\n    'otary',\r\n    'ottar',\r\n    'ottos',\r\n    'oubit',\r\n    'oucht',\r\n    'ouens',\r\n    'ouija',\r\n    'oulks',\r\n    'oumas',\r\n    'oundy',\r\n    'oupas',\r\n    'ouped',\r\n    'ouphe',\r\n    'ouphs',\r\n    'ourie',\r\n    'ousel',\r\n    'ousts',\r\n    'outby',\r\n    'outed',\r\n    'outre',\r\n    'outro',\r\n    'outta',\r\n    'ouzel',\r\n    'ouzos',\r\n    'ovals',\r\n    'ovels',\r\n    'ovens',\r\n    'overs',\r\n    'ovist',\r\n    'ovoli',\r\n    'ovolo',\r\n    'ovule',\r\n    'owche',\r\n    'owies',\r\n    'owled',\r\n    'owler',\r\n    'owlet',\r\n    'owned',\r\n    'owres',\r\n    'owrie',\r\n    'owsen',\r\n    'oxbow',\r\n    'oxers',\r\n    'oxeye',\r\n    'oxids',\r\n    'oxies',\r\n    'oxime',\r\n    'oxims',\r\n    'oxlip',\r\n    'oxter',\r\n    'oyers',\r\n    'ozeki',\r\n    'ozzie',\r\n    'paals',\r\n    'paans',\r\n    'pacas',\r\n    'paced',\r\n    'pacer',\r\n    'paces',\r\n    'pacey',\r\n    'pacha',\r\n    'packs',\r\n    'pacos',\r\n    'pacta',\r\n    'pacts',\r\n    'padis',\r\n    'padle',\r\n    'padma',\r\n    'padre',\r\n    'padri',\r\n    'paean',\r\n    'paedo',\r\n    'paeon',\r\n    'paged',\r\n    'pager',\r\n    'pages',\r\n    'pagle',\r\n    'pagod',\r\n    'pagri',\r\n    'paiks',\r\n    'pails',\r\n    'pains',\r\n    'paire',\r\n    'pairs',\r\n    'paisa',\r\n    'paise',\r\n    'pakka',\r\n    'palas',\r\n    'palay',\r\n    'palea',\r\n    'paled',\r\n    'pales',\r\n    'palet',\r\n    'palis',\r\n    'palki',\r\n    'palla',\r\n    'palls',\r\n    'pally',\r\n    'palms',\r\n    'palmy',\r\n    'palpi',\r\n    'palps',\r\n    'palsa',\r\n    'pampa',\r\n    'panax',\r\n    'pance',\r\n    'panda',\r\n    'pands',\r\n    'pandy',\r\n    'paned',\r\n    'panes',\r\n    'panga',\r\n    'pangs',\r\n    'panim',\r\n    'panko',\r\n    'panne',\r\n    'panni',\r\n    'panto',\r\n    'pants',\r\n    'panty',\r\n    'paoli',\r\n    'paolo',\r\n    'papas',\r\n    'papaw',\r\n    'papes',\r\n    'pappi',\r\n    'pappy',\r\n    'parae',\r\n    'paras',\r\n    'parch',\r\n    'pardi',\r\n    'pards',\r\n    'pardy',\r\n    'pared',\r\n    'paren',\r\n    'pareo',\r\n    'pares',\r\n    'pareu',\r\n    'parev',\r\n    'parge',\r\n    'pargo',\r\n    'paris',\r\n    'parki',\r\n    'parks',\r\n    'parky',\r\n    'parle',\r\n    'parly',\r\n    'parma',\r\n    'parol',\r\n    'parps',\r\n    'parra',\r\n    'parrs',\r\n    'parti',\r\n    'parts',\r\n    'parve',\r\n    'parvo',\r\n    'paseo',\r\n    'pases',\r\n    'pasha',\r\n    'pashm',\r\n    'paska',\r\n    'paspy',\r\n    'passe',\r\n    'pasts',\r\n    'pated',\r\n    'paten',\r\n    'pater',\r\n    'pates',\r\n    'paths',\r\n    'patin',\r\n    'patka',\r\n    'patly',\r\n    'patte',\r\n    'patus',\r\n    'pauas',\r\n    'pauls',\r\n    'pavan',\r\n    'paved',\r\n    'paven',\r\n    'paver',\r\n    'paves',\r\n    'pavid',\r\n    'pavin',\r\n    'pavis',\r\n    'pawas',\r\n    'pawaw',\r\n    'pawed',\r\n    'pawer',\r\n    'pawks',\r\n    'pawky',\r\n    'pawls',\r\n    'pawns',\r\n    'paxes',\r\n    'payed',\r\n    'payor',\r\n    'paysd',\r\n    'peage',\r\n    'peags',\r\n    'peaks',\r\n    'peaky',\r\n    'peals',\r\n    'peans',\r\n    'peare',\r\n    'pears',\r\n    'peart',\r\n    'pease',\r\n    'peats',\r\n    'peaty',\r\n    'peavy',\r\n    'peaze',\r\n    'pebas',\r\n    'pechs',\r\n    'pecke',\r\n    'pecks',\r\n    'pecky',\r\n    'pedes',\r\n    'pedis',\r\n    'pedro',\r\n    'peece',\r\n    'peeks',\r\n    'peels',\r\n    'peens',\r\n    'peeoy',\r\n    'peepe',\r\n    'peeps',\r\n    'peers',\r\n    'peery',\r\n    'peeve',\r\n    'peggy',\r\n    'peghs',\r\n    'peins',\r\n    'peise',\r\n    'peize',\r\n    'pekan',\r\n    'pekes',\r\n    'pekin',\r\n    'pekoe',\r\n    'pelas',\r\n    'pelau',\r\n    'peles',\r\n    'pelfs',\r\n    'pells',\r\n    'pelma',\r\n    'pelon',\r\n    'pelta',\r\n    'pelts',\r\n    'pends',\r\n    'pendu',\r\n    'pened',\r\n    'penes',\r\n    'pengo',\r\n    'penie',\r\n    'penis',\r\n    'penks',\r\n    'penna',\r\n    'penni',\r\n    'pents',\r\n    'peons',\r\n    'peony',\r\n    'pepla',\r\n    'pepos',\r\n    'peppy',\r\n    'pepsi',\r\n    'perai',\r\n    'perce',\r\n    'percs',\r\n    'perdu',\r\n    'perdy',\r\n    'perea',\r\n    'peres',\r\n    'peris',\r\n    'perks',\r\n    'perms',\r\n    'perns',\r\n    'perog',\r\n    'perps',\r\n    'perry',\r\n    'perse',\r\n    'perst',\r\n    'perts',\r\n    'perve',\r\n    'pervo',\r\n    'pervs',\r\n    'pervy',\r\n    'pesos',\r\n    'pests',\r\n    'pesty',\r\n    'petar',\r\n    'peter',\r\n    'petit',\r\n    'petre',\r\n    'petri',\r\n    'petti',\r\n    'petto',\r\n    'pewee',\r\n    'pewit',\r\n    'peyse',\r\n    'phage',\r\n    'phang',\r\n    'phare',\r\n    'pharm',\r\n    'pheer',\r\n    'phene',\r\n    'pheon',\r\n    'phese',\r\n    'phial',\r\n    'phish',\r\n    'phizz',\r\n    'phlox',\r\n    'phoca',\r\n    'phono',\r\n    'phons',\r\n    'phots',\r\n    'phpht',\r\n    'phuts',\r\n    'phyla',\r\n    'phyle',\r\n    'piani',\r\n    'pians',\r\n    'pibal',\r\n    'pical',\r\n    'picas',\r\n    'piccy',\r\n    'picks',\r\n    'picot',\r\n    'picra',\r\n    'picul',\r\n    'piend',\r\n    'piers',\r\n    'piert',\r\n    'pieta',\r\n    'piets',\r\n    'piezo',\r\n    'pight',\r\n    'pigmy',\r\n    'piing',\r\n    'pikas',\r\n    'pikau',\r\n    'piked',\r\n    'piker',\r\n    'pikes',\r\n    'pikey',\r\n    'pikis',\r\n    'pikul',\r\n    'pilae',\r\n    'pilaf',\r\n    'pilao',\r\n    'pilar',\r\n    'pilau',\r\n    'pilaw',\r\n    'pilch',\r\n    'pilea',\r\n    'piled',\r\n    'pilei',\r\n    'piler',\r\n    'piles',\r\n    'pilis',\r\n    'pills',\r\n    'pilow',\r\n    'pilum',\r\n    'pilus',\r\n    'pimas',\r\n    'pimps',\r\n    'pinas',\r\n    'pined',\r\n    'pines',\r\n    'pingo',\r\n    'pings',\r\n    'pinko',\r\n    'pinks',\r\n    'pinna',\r\n    'pinny',\r\n    'pinon',\r\n    'pinot',\r\n    'pinta',\r\n    'pints',\r\n    'pinup',\r\n    'pions',\r\n    'piony',\r\n    'pious',\r\n    'pioye',\r\n    'pioys',\r\n    'pipal',\r\n    'pipas',\r\n    'piped',\r\n    'pipes',\r\n    'pipet',\r\n    'pipis',\r\n    'pipit',\r\n    'pippy',\r\n    'pipul',\r\n    'pirai',\r\n    'pirls',\r\n    'pirns',\r\n    'pirog',\r\n    'pisco',\r\n    'pises',\r\n    'pisky',\r\n    'pisos',\r\n    'pissy',\r\n    'piste',\r\n    'pitas',\r\n    'piths',\r\n    'piton',\r\n    'pitot',\r\n    'pitta',\r\n    'piums',\r\n    'pixes',\r\n    'pized',\r\n    'pizes',\r\n    'plaas',\r\n    'plack',\r\n    'plage',\r\n    'plans',\r\n    'plaps',\r\n    'plash',\r\n    'plasm',\r\n    'plast',\r\n    'plats',\r\n    'platt',\r\n    'platy',\r\n    'playa',\r\n    'plays',\r\n    'pleas',\r\n    'plebe',\r\n    'plebs',\r\n    'plena',\r\n    'pleon',\r\n    'plesh',\r\n    'plews',\r\n    'plica',\r\n    'plies',\r\n    'plims',\r\n    'pling',\r\n    'plink',\r\n    'ploat',\r\n    'plods',\r\n    'plong',\r\n    'plonk',\r\n    'plook',\r\n    'plops',\r\n    'plots',\r\n    'plotz',\r\n    'plouk',\r\n    'plows',\r\n    'ploye',\r\n    'ploys',\r\n    'plues',\r\n    'pluff',\r\n    'plugs',\r\n    'plums',\r\n    'plumy',\r\n    'pluot',\r\n    'pluto',\r\n    'plyer',\r\n    'poach',\r\n    'poaka',\r\n    'poake',\r\n    'poboy',\r\n    'pocks',\r\n    'pocky',\r\n    'podal',\r\n    'poddy',\r\n    'podex',\r\n    'podge',\r\n    'podgy',\r\n    'podia',\r\n    'poems',\r\n    'poeps',\r\n    'poets',\r\n    'pogey',\r\n    'pogge',\r\n    'pogos',\r\n    'pohed',\r\n    'poilu',\r\n    'poind',\r\n    'pokal',\r\n    'poked',\r\n    'pokes',\r\n    'pokey',\r\n    'pokie',\r\n    'poled',\r\n    'poler',\r\n    'poles',\r\n    'poley',\r\n    'polio',\r\n    'polis',\r\n    'polje',\r\n    'polks',\r\n    'polls',\r\n    'polly',\r\n    'polos',\r\n    'polts',\r\n    'polys',\r\n    'pombe',\r\n    'pomes',\r\n    'pommy',\r\n    'pomos',\r\n    'pomps',\r\n    'ponce',\r\n    'poncy',\r\n    'ponds',\r\n    'pones',\r\n    'poney',\r\n    'ponga',\r\n    'pongo',\r\n    'pongs',\r\n    'pongy',\r\n    'ponks',\r\n    'ponts',\r\n    'ponty',\r\n    'ponzu',\r\n    'poods',\r\n    'pooed',\r\n    'poofs',\r\n    'poofy',\r\n    'poohs',\r\n    'pooja',\r\n    'pooka',\r\n    'pooks',\r\n    'pools',\r\n    'poons',\r\n    'poops',\r\n    'poopy',\r\n    'poori',\r\n    'poort',\r\n    'poots',\r\n    'poove',\r\n    'poovy',\r\n    'popes',\r\n    'poppa',\r\n    'popsy',\r\n    'porae',\r\n    'poral',\r\n    'pored',\r\n    'porer',\r\n    'pores',\r\n    'porge',\r\n    'porgy',\r\n    'porin',\r\n    'porks',\r\n    'porky',\r\n    'porno',\r\n    'porns',\r\n    'porny',\r\n    'porta',\r\n    'ports',\r\n    'porty',\r\n    'posed',\r\n    'poses',\r\n    'posey',\r\n    'posho',\r\n    'posts',\r\n    'potae',\r\n    'potch',\r\n    'poted',\r\n    'potes',\r\n    'potin',\r\n    'potoo',\r\n    'potsy',\r\n    'potto',\r\n    'potts',\r\n    'potty',\r\n    'pouff',\r\n    'poufs',\r\n    'pouke',\r\n    'pouks',\r\n    'poule',\r\n    'poulp',\r\n    'poult',\r\n    'poupe',\r\n    'poupt',\r\n    'pours',\r\n    'pouts',\r\n    'powan',\r\n    'powin',\r\n    'pownd',\r\n    'powns',\r\n    'powny',\r\n    'powre',\r\n    'poxed',\r\n    'poxes',\r\n    'poynt',\r\n    'poyou',\r\n    'poyse',\r\n    'pozzy',\r\n    'praam',\r\n    'prads',\r\n    'prahu',\r\n    'prams',\r\n    'prana',\r\n    'prang',\r\n    'praos',\r\n    'prase',\r\n    'prate',\r\n    'prats',\r\n    'pratt',\r\n    'praty',\r\n    'praus',\r\n    'prays',\r\n    'predy',\r\n    'preed',\r\n    'prees',\r\n    'preif',\r\n    'prems',\r\n    'premy',\r\n    'prent',\r\n    'preon',\r\n    'preop',\r\n    'preps',\r\n    'presa',\r\n    'prese',\r\n    'prest',\r\n    'preve',\r\n    'prexy',\r\n    'preys',\r\n    'prial',\r\n    'pricy',\r\n    'prief',\r\n    'prier',\r\n    'pries',\r\n    'prigs',\r\n    'prill',\r\n    'prima',\r\n    'primi',\r\n    'primp',\r\n    'prims',\r\n    'primy',\r\n    'prink',\r\n    'prion',\r\n    'prise',\r\n    'priss',\r\n    'proas',\r\n    'probs',\r\n    'prods',\r\n    'proem',\r\n    'profs',\r\n    'progs',\r\n    'proin',\r\n    'proke',\r\n    'prole',\r\n    'proll',\r\n    'promo',\r\n    'proms',\r\n    'pronk',\r\n    'props',\r\n    'prore',\r\n    'proso',\r\n    'pross',\r\n    'prost',\r\n    'prosy',\r\n    'proto',\r\n    'proul',\r\n    'prows',\r\n    'proyn',\r\n    'prunt',\r\n    'pruta',\r\n    'pryer',\r\n    'pryse',\r\n    'pseud',\r\n    'pshaw',\r\n    'psion',\r\n    'psoae',\r\n    'psoai',\r\n    'psoas',\r\n    'psora',\r\n    'psych',\r\n    'psyop',\r\n    'pubco',\r\n    'pubes',\r\n    'pubis',\r\n    'pucan',\r\n    'pucer',\r\n    'puces',\r\n    'pucka',\r\n    'pucks',\r\n    'puddy',\r\n    'pudge',\r\n    'pudic',\r\n    'pudor',\r\n    'pudsy',\r\n    'pudus',\r\n    'puers',\r\n    'puffa',\r\n    'puffs',\r\n    'puggy',\r\n    'pugil',\r\n    'puhas',\r\n    'pujah',\r\n    'pujas',\r\n    'pukas',\r\n    'puked',\r\n    'puker',\r\n    'pukes',\r\n    'pukey',\r\n    'pukka',\r\n    'pukus',\r\n    'pulao',\r\n    'pulas',\r\n    'puled',\r\n    'puler',\r\n    'pules',\r\n    'pulik',\r\n    'pulis',\r\n    'pulka',\r\n    'pulks',\r\n    'pulli',\r\n    'pulls',\r\n    'pully',\r\n    'pulmo',\r\n    'pulps',\r\n    'pulus',\r\n    'pumas',\r\n    'pumie',\r\n    'pumps',\r\n    'punas',\r\n    'punce',\r\n    'punga',\r\n    'pungs',\r\n    'punji',\r\n    'punka',\r\n    'punks',\r\n    'punky',\r\n    'punny',\r\n    'punto',\r\n    'punts',\r\n    'punty',\r\n    'pupae',\r\n    'pupas',\r\n    'pupus',\r\n    'purda',\r\n    'pured',\r\n    'pures',\r\n    'purin',\r\n    'puris',\r\n    'purls',\r\n    'purpy',\r\n    'purrs',\r\n    'pursy',\r\n    'purty',\r\n    'puses',\r\n    'pusle',\r\n    'pussy',\r\n    'putid',\r\n    'puton',\r\n    'putti',\r\n    'putto',\r\n    'putts',\r\n    'puzel',\r\n    'pwned',\r\n    'pyats',\r\n    'pyets',\r\n    'pygal',\r\n    'pyins',\r\n    'pylon',\r\n    'pyned',\r\n    'pynes',\r\n    'pyoid',\r\n    'pyots',\r\n    'pyral',\r\n    'pyran',\r\n    'pyres',\r\n    'pyrex',\r\n    'pyric',\r\n    'pyros',\r\n    'pyxed',\r\n    'pyxes',\r\n    'pyxie',\r\n    'pyxis',\r\n    'pzazz',\r\n    'qadis',\r\n    'qaids',\r\n    'qajaq',\r\n    'qanat',\r\n    'qapik',\r\n    'qibla',\r\n    'qophs',\r\n    'qorma',\r\n    'quads',\r\n    'quaff',\r\n    'quags',\r\n    'quair',\r\n    'quais',\r\n    'quaky',\r\n    'quale',\r\n    'quant',\r\n    'quare',\r\n    'quass',\r\n    'quate',\r\n    'quats',\r\n    'quayd',\r\n    'quays',\r\n    'qubit',\r\n    'quean',\r\n    'queme',\r\n    'quena',\r\n    'quern',\r\n    'queyn',\r\n    'queys',\r\n    'quich',\r\n    'quids',\r\n    'quiff',\r\n    'quims',\r\n    'quina',\r\n    'quine',\r\n    'quino',\r\n    'quins',\r\n    'quint',\r\n    'quipo',\r\n    'quips',\r\n    'quipu',\r\n    'quire',\r\n    'quirt',\r\n    'quist',\r\n    'quits',\r\n    'quoad',\r\n    'quods',\r\n    'quoif',\r\n    'quoin',\r\n    'quoit',\r\n    'quoll',\r\n    'quonk',\r\n    'quops',\r\n    'qursh',\r\n    'quyte',\r\n    'rabat',\r\n    'rabic',\r\n    'rabis',\r\n    'raced',\r\n    'races',\r\n    'rache',\r\n    'racks',\r\n    'racon',\r\n    'radge',\r\n    'radix',\r\n    'radon',\r\n    'raffs',\r\n    'rafts',\r\n    'ragas',\r\n    'ragde',\r\n    'raged',\r\n    'ragee',\r\n    'rager',\r\n    'rages',\r\n    'ragga',\r\n    'raggs',\r\n    'raggy',\r\n    'ragis',\r\n    'ragus',\r\n    'rahed',\r\n    'rahui',\r\n    'raias',\r\n    'raids',\r\n    'raiks',\r\n    'raile',\r\n    'rails',\r\n    'raine',\r\n    'rains',\r\n    'raird',\r\n    'raita',\r\n    'raits',\r\n    'rajas',\r\n    'rajes',\r\n    'raked',\r\n    'rakee',\r\n    'raker',\r\n    'rakes',\r\n    'rakia',\r\n    'rakis',\r\n    'rakus',\r\n    'rales',\r\n    'ramal',\r\n    'ramee',\r\n    'ramet',\r\n    'ramie',\r\n    'ramin',\r\n    'ramis',\r\n    'rammy',\r\n    'ramps',\r\n    'ramus',\r\n    'ranas',\r\n    'rance',\r\n    'rands',\r\n    'ranee',\r\n    'ranga',\r\n    'rangi',\r\n    'rangs',\r\n    'rangy',\r\n    'ranid',\r\n    'ranis',\r\n    'ranke',\r\n    'ranks',\r\n    'rants',\r\n    'raped',\r\n    'raper',\r\n    'rapes',\r\n    'raphe',\r\n    'rappe',\r\n    'rared',\r\n    'raree',\r\n    'rares',\r\n    'rarks',\r\n    'rased',\r\n    'raser',\r\n    'rases',\r\n    'rasps',\r\n    'rasse',\r\n    'rasta',\r\n    'ratal',\r\n    'ratan',\r\n    'ratas',\r\n    'ratch',\r\n    'rated',\r\n    'ratel',\r\n    'rater',\r\n    'rates',\r\n    'ratha',\r\n    'rathe',\r\n    'raths',\r\n    'ratoo',\r\n    'ratos',\r\n    'ratus',\r\n    'rauns',\r\n    'raupo',\r\n    'raved',\r\n    'ravel',\r\n    'raver',\r\n    'raves',\r\n    'ravey',\r\n    'ravin',\r\n    'rawer',\r\n    'rawin',\r\n    'rawly',\r\n    'rawns',\r\n    'raxed',\r\n    'raxes',\r\n    'rayah',\r\n    'rayas',\r\n    'rayed',\r\n    'rayle',\r\n    'rayne',\r\n    'razed',\r\n    'razee',\r\n    'razer',\r\n    'razes',\r\n    'razoo',\r\n    'readd',\r\n    'reads',\r\n    'reais',\r\n    'reaks',\r\n    'realo',\r\n    'reals',\r\n    'reame',\r\n    'reams',\r\n    'reamy',\r\n    'reans',\r\n    'reaps',\r\n    'rears',\r\n    'reast',\r\n    'reata',\r\n    'reate',\r\n    'reave',\r\n    'rebbe',\r\n    'rebec',\r\n    'rebid',\r\n    'rebit',\r\n    'rebop',\r\n    'rebuy',\r\n    'recal',\r\n    'recce',\r\n    'recco',\r\n    'reccy',\r\n    'recit',\r\n    'recks',\r\n    'recon',\r\n    'recta',\r\n    'recti',\r\n    'recto',\r\n    'redan',\r\n    'redds',\r\n    'reddy',\r\n    'reded',\r\n    'redes',\r\n    'redia',\r\n    'redid',\r\n    'redip',\r\n    'redly',\r\n    'redon',\r\n    'redos',\r\n    'redox',\r\n    'redry',\r\n    'redub',\r\n    'redux',\r\n    'redye',\r\n    'reech',\r\n    'reede',\r\n    'reeds',\r\n    'reefs',\r\n    'reefy',\r\n    'reeks',\r\n    'reeky',\r\n    'reels',\r\n    'reens',\r\n    'reest',\r\n    'reeve',\r\n    'refed',\r\n    'refel',\r\n    'reffo',\r\n    'refis',\r\n    'refix',\r\n    'refly',\r\n    'refry',\r\n    'regar',\r\n    'reges',\r\n    'reggo',\r\n    'regie',\r\n    'regma',\r\n    'regna',\r\n    'regos',\r\n    'regur',\r\n    'rehem',\r\n    'reifs',\r\n    'reify',\r\n    'reiki',\r\n    'reiks',\r\n    'reink',\r\n    'reins',\r\n    'reird',\r\n    'reist',\r\n    'reive',\r\n    'rejig',\r\n    'rejon',\r\n    'reked',\r\n    'rekes',\r\n    'rekey',\r\n    'relet',\r\n    'relie',\r\n    'relit',\r\n    'rello',\r\n    'reman',\r\n    'remap',\r\n    'remen',\r\n    'remet',\r\n    'remex',\r\n    'remix',\r\n    'renay',\r\n    'rends',\r\n    'reney',\r\n    'renga',\r\n    'renig',\r\n    'renin',\r\n    'renne',\r\n    'renos',\r\n    'rente',\r\n    'rents',\r\n    'reoil',\r\n    'reorg',\r\n    'repeg',\r\n    'repin',\r\n    'repla',\r\n    'repos',\r\n    'repot',\r\n    'repps',\r\n    'repro',\r\n    'reran',\r\n    'rerig',\r\n    'resat',\r\n    'resaw',\r\n    'resay',\r\n    'resee',\r\n    'reses',\r\n    'resew',\r\n    'resid',\r\n    'resit',\r\n    'resod',\r\n    'resow',\r\n    'resto',\r\n    'rests',\r\n    'resty',\r\n    'resus',\r\n    'retag',\r\n    'retax',\r\n    'retem',\r\n    'retia',\r\n    'retie',\r\n    'retox',\r\n    'revet',\r\n    'revie',\r\n    'rewan',\r\n    'rewax',\r\n    'rewed',\r\n    'rewet',\r\n    'rewin',\r\n    'rewon',\r\n    'rewth',\r\n    'rexes',\r\n    'rezes',\r\n    'rheas',\r\n    'rheme',\r\n    'rheum',\r\n    'rhies',\r\n    'rhime',\r\n    'rhine',\r\n    'rhody',\r\n    'rhomb',\r\n    'rhone',\r\n    'rhumb',\r\n    'rhyne',\r\n    'rhyta',\r\n    'riads',\r\n    'rials',\r\n    'riant',\r\n    'riata',\r\n    'ribas',\r\n    'ribby',\r\n    'ribes',\r\n    'riced',\r\n    'ricer',\r\n    'rices',\r\n    'ricey',\r\n    'richt',\r\n    'ricin',\r\n    'ricks',\r\n    'rides',\r\n    'ridgy',\r\n    'ridic',\r\n    'riels',\r\n    'riems',\r\n    'rieve',\r\n    'rifer',\r\n    'riffs',\r\n    'rifte',\r\n    'rifts',\r\n    'rifty',\r\n    'riggs',\r\n    'rigol',\r\n    'riled',\r\n    'riles',\r\n    'riley',\r\n    'rille',\r\n    'rills',\r\n    'rimae',\r\n    'rimed',\r\n    'rimer',\r\n    'rimes',\r\n    'rimus',\r\n    'rinds',\r\n    'rindy',\r\n    'rines',\r\n    'rings',\r\n    'rinks',\r\n    'rioja',\r\n    'riots',\r\n    'riped',\r\n    'ripes',\r\n    'ripps',\r\n    'rises',\r\n    'rishi',\r\n    'risks',\r\n    'risps',\r\n    'risus',\r\n    'rites',\r\n    'ritts',\r\n    'ritzy',\r\n    'rivas',\r\n    'rived',\r\n    'rivel',\r\n    'riven',\r\n    'rives',\r\n    'riyal',\r\n    'rizas',\r\n    'roads',\r\n    'roams',\r\n    'roans',\r\n    'roars',\r\n    'roary',\r\n    'roate',\r\n    'robed',\r\n    'robes',\r\n    'roble',\r\n    'rocks',\r\n    'roded',\r\n    'rodes',\r\n    'roguy',\r\n    'rohes',\r\n    'roids',\r\n    'roils',\r\n    'roily',\r\n    'roins',\r\n    'roist',\r\n    'rojak',\r\n    'rojis',\r\n    'roked',\r\n    'roker',\r\n    'rokes',\r\n    'rolag',\r\n    'roles',\r\n    'rolfs',\r\n    'rolls',\r\n    'romal',\r\n    'roman',\r\n    'romeo',\r\n    'romps',\r\n    'ronde',\r\n    'rondo',\r\n    'roneo',\r\n    'rones',\r\n    'ronin',\r\n    'ronne',\r\n    'ronte',\r\n    'ronts',\r\n    'roods',\r\n    'roofs',\r\n    'roofy',\r\n    'rooks',\r\n    'rooky',\r\n    'rooms',\r\n    'roons',\r\n    'roops',\r\n    'roopy',\r\n    'roosa',\r\n    'roose',\r\n    'roots',\r\n    'rooty',\r\n    'roped',\r\n    'roper',\r\n    'ropes',\r\n    'ropey',\r\n    'roque',\r\n    'roral',\r\n    'rores',\r\n    'roric',\r\n    'rorid',\r\n    'rorie',\r\n    'rorts',\r\n    'rorty',\r\n    'rosed',\r\n    'roses',\r\n    'roset',\r\n    'roshi',\r\n    'rosin',\r\n    'rosit',\r\n    'rosti',\r\n    'rosts',\r\n    'rotal',\r\n    'rotan',\r\n    'rotas',\r\n    'rotch',\r\n    'roted',\r\n    'rotes',\r\n    'rotis',\r\n    'rotls',\r\n    'roton',\r\n    'rotos',\r\n    'rotte',\r\n    'rouen',\r\n    'roues',\r\n    'roule',\r\n    'rouls',\r\n    'roums',\r\n    'roups',\r\n    'roupy',\r\n    'roust',\r\n    'routh',\r\n    'routs',\r\n    'roved',\r\n    'roven',\r\n    'roves',\r\n    'rowan',\r\n    'rowed',\r\n    'rowel',\r\n    'rowen',\r\n    'rowie',\r\n    'rowme',\r\n    'rownd',\r\n    'rowth',\r\n    'rowts',\r\n    'royne',\r\n    'royst',\r\n    'rozet',\r\n    'rozit',\r\n    'ruana',\r\n    'rubai',\r\n    'rubby',\r\n    'rubel',\r\n    'rubes',\r\n    'rubin',\r\n    'ruble',\r\n    'rubli',\r\n    'rubus',\r\n    'ruche',\r\n    'rucks',\r\n    'rudas',\r\n    'rudds',\r\n    'rudes',\r\n    'rudie',\r\n    'rudis',\r\n    'rueda',\r\n    'ruers',\r\n    'ruffe',\r\n    'ruffs',\r\n    'rugae',\r\n    'rugal',\r\n    'ruggy',\r\n    'ruing',\r\n    'ruins',\r\n    'rukhs',\r\n    'ruled',\r\n    'rules',\r\n    'rumal',\r\n    'rumbo',\r\n    'rumen',\r\n    'rumes',\r\n    'rumly',\r\n    'rummy',\r\n    'rumpo',\r\n    'rumps',\r\n    'rumpy',\r\n    'runch',\r\n    'runds',\r\n    'runed',\r\n    'runes',\r\n    'rungs',\r\n    'runic',\r\n    'runny',\r\n    'runts',\r\n    'runty',\r\n    'rupia',\r\n    'rurps',\r\n    'rurus',\r\n    'rusas',\r\n    'ruses',\r\n    'rushy',\r\n    'rusks',\r\n    'rusma',\r\n    'russe',\r\n    'rusts',\r\n    'ruths',\r\n    'rutin',\r\n    'rutty',\r\n    'ryals',\r\n    'rybat',\r\n    'ryked',\r\n    'rykes',\r\n    'rymme',\r\n    'rynds',\r\n    'ryots',\r\n    'ryper',\r\n    'saags',\r\n    'sabal',\r\n    'sabed',\r\n    'saber',\r\n    'sabes',\r\n    'sabha',\r\n    'sabin',\r\n    'sabir',\r\n    'sable',\r\n    'sabot',\r\n    'sabra',\r\n    'sabre',\r\n    'sacks',\r\n    'sacra',\r\n    'saddo',\r\n    'sades',\r\n    'sadhe',\r\n    'sadhu',\r\n    'sadis',\r\n    'sados',\r\n    'sadza',\r\n    'safed',\r\n    'safes',\r\n    'sagas',\r\n    'sager',\r\n    'sages',\r\n    'saggy',\r\n    'sagos',\r\n    'sagum',\r\n    'saheb',\r\n    'sahib',\r\n    'saice',\r\n    'saick',\r\n    'saics',\r\n    'saids',\r\n    'saiga',\r\n    'sails',\r\n    'saims',\r\n    'saine',\r\n    'sains',\r\n    'sairs',\r\n    'saist',\r\n    'saith',\r\n    'sajou',\r\n    'sakai',\r\n    'saker',\r\n    'sakes',\r\n    'sakia',\r\n    'sakis',\r\n    'sakti',\r\n    'salal',\r\n    'salat',\r\n    'salep',\r\n    'sales',\r\n    'salet',\r\n    'salic',\r\n    'salix',\r\n    'salle',\r\n    'salmi',\r\n    'salol',\r\n    'salop',\r\n    'salpa',\r\n    'salps',\r\n    'salse',\r\n    'salto',\r\n    'salts',\r\n    'salue',\r\n    'salut',\r\n    'saman',\r\n    'samas',\r\n    'samba',\r\n    'sambo',\r\n    'samek',\r\n    'samel',\r\n    'samen',\r\n    'sames',\r\n    'samey',\r\n    'samfu',\r\n    'sammy',\r\n    'sampi',\r\n    'samps',\r\n    'sands',\r\n    'saned',\r\n    'sanes',\r\n    'sanga',\r\n    'sangh',\r\n    'sango',\r\n    'sangs',\r\n    'sanko',\r\n    'sansa',\r\n    'santo',\r\n    'sants',\r\n    'saola',\r\n    'sapan',\r\n    'sapid',\r\n    'sapor',\r\n    'saran',\r\n    'sards',\r\n    'sared',\r\n    'saree',\r\n    'sarge',\r\n    'sargo',\r\n    'sarin',\r\n    'saris',\r\n    'sarks',\r\n    'sarky',\r\n    'sarod',\r\n    'saros',\r\n    'sarus',\r\n    'saser',\r\n    'sasin',\r\n    'sasse',\r\n    'satai',\r\n    'satay',\r\n    'sated',\r\n    'satem',\r\n    'sates',\r\n    'satis',\r\n    'sauba',\r\n    'sauch',\r\n    'saugh',\r\n    'sauls',\r\n    'sault',\r\n    'saunt',\r\n    'saury',\r\n    'sauts',\r\n    'saved',\r\n    'saver',\r\n    'saves',\r\n    'savey',\r\n    'savin',\r\n    'sawah',\r\n    'sawed',\r\n    'sawer',\r\n    'saxes',\r\n    'sayed',\r\n    'sayer',\r\n    'sayid',\r\n    'sayne',\r\n    'sayon',\r\n    'sayst',\r\n    'sazes',\r\n    'scabs',\r\n    'scads',\r\n    'scaff',\r\n    'scags',\r\n    'scail',\r\n    'scala',\r\n    'scall',\r\n    'scams',\r\n    'scand',\r\n    'scans',\r\n    'scapa',\r\n    'scape',\r\n    'scapi',\r\n    'scarp',\r\n    'scars',\r\n    'scart',\r\n    'scath',\r\n    'scats',\r\n    'scatt',\r\n    'scaud',\r\n    'scaup',\r\n    'scaur',\r\n    'scaws',\r\n    'sceat',\r\n    'scena',\r\n    'scend',\r\n    'schav',\r\n    'schmo',\r\n    'schul',\r\n    'schwa',\r\n    'sclim',\r\n    'scody',\r\n    'scogs',\r\n    'scoog',\r\n    'scoot',\r\n    'scopa',\r\n    'scops',\r\n    'scots',\r\n    'scoug',\r\n    'scoup',\r\n    'scowp',\r\n    'scows',\r\n    'scrab',\r\n    'scrae',\r\n    'scrag',\r\n    'scran',\r\n    'scrat',\r\n    'scraw',\r\n    'scray',\r\n    'scrim',\r\n    'scrip',\r\n    'scrob',\r\n    'scrod',\r\n    'scrog',\r\n    'scrow',\r\n    'scudi',\r\n    'scudo',\r\n    'scuds',\r\n    'scuff',\r\n    'scuft',\r\n    'scugs',\r\n    'sculk',\r\n    'scull',\r\n    'sculp',\r\n    'sculs',\r\n    'scums',\r\n    'scups',\r\n    'scurf',\r\n    'scurs',\r\n    'scuse',\r\n    'scuta',\r\n    'scute',\r\n    'scuts',\r\n    'scuzz',\r\n    'scyes',\r\n    'sdayn',\r\n    'sdein',\r\n    'seals',\r\n    'seame',\r\n    'seams',\r\n    'seamy',\r\n    'seans',\r\n    'seare',\r\n    'sears',\r\n    'sease',\r\n    'seats',\r\n    'seaze',\r\n    'sebum',\r\n    'secco',\r\n    'sechs',\r\n    'sects',\r\n    'seder',\r\n    'sedes',\r\n    'sedge',\r\n    'sedgy',\r\n    'sedum',\r\n    'seeds',\r\n    'seeks',\r\n    'seeld',\r\n    'seels',\r\n    'seely',\r\n    'seems',\r\n    'seeps',\r\n    'seepy',\r\n    'seers',\r\n    'sefer',\r\n    'segar',\r\n    'segni',\r\n    'segno',\r\n    'segol',\r\n    'segos',\r\n    'sehri',\r\n    'seifs',\r\n    'seils',\r\n    'seine',\r\n    'seirs',\r\n    'seise',\r\n    'seism',\r\n    'seity',\r\n    'seiza',\r\n    'sekos',\r\n    'sekts',\r\n    'selah',\r\n    'seles',\r\n    'selfs',\r\n    'sella',\r\n    'selle',\r\n    'sells',\r\n    'selva',\r\n    'semee',\r\n    'semes',\r\n    'semie',\r\n    'semis',\r\n    'senas',\r\n    'sends',\r\n    'senes',\r\n    'sengi',\r\n    'senna',\r\n    'senor',\r\n    'sensa',\r\n    'sensi',\r\n    'sente',\r\n    'senti',\r\n    'sents',\r\n    'senvy',\r\n    'senza',\r\n    'sepad',\r\n    'sepal',\r\n    'sepic',\r\n    'sepoy',\r\n    'septa',\r\n    'septs',\r\n    'serac',\r\n    'serai',\r\n    'seral',\r\n    'sered',\r\n    'serer',\r\n    'seres',\r\n    'serfs',\r\n    'serge',\r\n    'seric',\r\n    'serin',\r\n    'serks',\r\n    'seron',\r\n    'serow',\r\n    'serra',\r\n    'serre',\r\n    'serrs',\r\n    'serry',\r\n    'servo',\r\n    'sesey',\r\n    'sessa',\r\n    'setae',\r\n    'setal',\r\n    'seton',\r\n    'setts',\r\n    'sewan',\r\n    'sewar',\r\n    'sewed',\r\n    'sewel',\r\n    'sewen',\r\n    'sewin',\r\n    'sexed',\r\n    'sexer',\r\n    'sexes',\r\n    'sexto',\r\n    'sexts',\r\n    'seyen',\r\n    'shads',\r\n    'shags',\r\n    'shahs',\r\n    'shako',\r\n    'shakt',\r\n    'shalm',\r\n    'shaly',\r\n    'shama',\r\n    'shams',\r\n    'shand',\r\n    'shans',\r\n    'shaps',\r\n    'sharn',\r\n    'shash',\r\n    'shaul',\r\n    'shawm',\r\n    'shawn',\r\n    'shaws',\r\n    'shaya',\r\n    'shays',\r\n    'shchi',\r\n    'sheaf',\r\n    'sheal',\r\n    'sheas',\r\n    'sheds',\r\n    'sheel',\r\n    'shend',\r\n    'shent',\r\n    'sheol',\r\n    'sherd',\r\n    'shere',\r\n    'shero',\r\n    'shets',\r\n    'sheva',\r\n    'shewn',\r\n    'shews',\r\n    'shiai',\r\n    'shiel',\r\n    'shier',\r\n    'shies',\r\n    'shill',\r\n    'shily',\r\n    'shims',\r\n    'shins',\r\n    'ships',\r\n    'shirr',\r\n    'shirs',\r\n    'shish',\r\n    'shiso',\r\n    'shist',\r\n    'shite',\r\n    'shits',\r\n    'shiur',\r\n    'shiva',\r\n    'shive',\r\n    'shivs',\r\n    'shlep',\r\n    'shlub',\r\n    'shmek',\r\n    'shmoe',\r\n    'shoat',\r\n    'shoed',\r\n    'shoer',\r\n    'shoes',\r\n    'shogi',\r\n    'shogs',\r\n    'shoji',\r\n    'shojo',\r\n    'shola',\r\n    'shool',\r\n    'shoon',\r\n    'shoos',\r\n    'shope',\r\n    'shops',\r\n    'shorl',\r\n    'shote',\r\n    'shots',\r\n    'shott',\r\n    'showd',\r\n    'shows',\r\n    'shoyu',\r\n    'shred',\r\n    'shris',\r\n    'shrow',\r\n    'shtik',\r\n    'shtum',\r\n    'shtup',\r\n    'shule',\r\n    'shuln',\r\n    'shuls',\r\n    'shuns',\r\n    'shura',\r\n    'shute',\r\n    'shuts',\r\n    'shwas',\r\n    'shyer',\r\n    'sials',\r\n    'sibbs',\r\n    'sibyl',\r\n    'sices',\r\n    'sicht',\r\n    'sicko',\r\n    'sicks',\r\n    'sicky',\r\n    'sidas',\r\n    'sided',\r\n    'sider',\r\n    'sides',\r\n    'sidha',\r\n    'sidhe',\r\n    'sidle',\r\n    'sield',\r\n    'siens',\r\n    'sient',\r\n    'sieth',\r\n    'sieur',\r\n    'sifts',\r\n    'sighs',\r\n    'sigil',\r\n    'sigla',\r\n    'signa',\r\n    'signs',\r\n    'sijos',\r\n    'sikas',\r\n    'siker',\r\n    'sikes',\r\n    'silds',\r\n    'siled',\r\n    'silen',\r\n    'siler',\r\n    'siles',\r\n    'silex',\r\n    'silks',\r\n    'sills',\r\n    'silos',\r\n    'silts',\r\n    'silty',\r\n    'silva',\r\n    'simar',\r\n    'simas',\r\n    'simba',\r\n    'simis',\r\n    'simps',\r\n    'simul',\r\n    'sinds',\r\n    'sined',\r\n    'sines',\r\n    'sings',\r\n    'sinhs',\r\n    'sinks',\r\n    'sinky',\r\n    'sinus',\r\n    'siped',\r\n    'sipes',\r\n    'sippy',\r\n    'sired',\r\n    'siree',\r\n    'sires',\r\n    'sirih',\r\n    'siris',\r\n    'siroc',\r\n    'sirra',\r\n    'sirup',\r\n    'sisal',\r\n    'sises',\r\n    'sista',\r\n    'sists',\r\n    'sitar',\r\n    'sited',\r\n    'sites',\r\n    'sithe',\r\n    'sitka',\r\n    'situp',\r\n    'situs',\r\n    'siver',\r\n    'sixer',\r\n    'sixes',\r\n    'sixmo',\r\n    'sixte',\r\n    'sizar',\r\n    'sized',\r\n    'sizel',\r\n    'sizer',\r\n    'sizes',\r\n    'skags',\r\n    'skail',\r\n    'skald',\r\n    'skank',\r\n    'skart',\r\n    'skats',\r\n    'skatt',\r\n    'skaws',\r\n    'skean',\r\n    'skear',\r\n    'skeds',\r\n    'skeed',\r\n    'skeef',\r\n    'skeen',\r\n    'skeer',\r\n    'skees',\r\n    'skeet',\r\n    'skegg',\r\n    'skegs',\r\n    'skein',\r\n    'skelf',\r\n    'skell',\r\n    'skelm',\r\n    'skelp',\r\n    'skene',\r\n    'skens',\r\n    'skeos',\r\n    'skeps',\r\n    'skers',\r\n    'skets',\r\n    'skews',\r\n    'skids',\r\n    'skied',\r\n    'skies',\r\n    'skiey',\r\n    'skimo',\r\n    'skims',\r\n    'skink',\r\n    'skins',\r\n    'skint',\r\n    'skios',\r\n    'skips',\r\n    'skirl',\r\n    'skirr',\r\n    'skite',\r\n    'skits',\r\n    'skive',\r\n    'skivy',\r\n    'sklim',\r\n    'skoal',\r\n    'skody',\r\n    'skoff',\r\n    'skogs',\r\n    'skols',\r\n    'skool',\r\n    'skort',\r\n    'skosh',\r\n    'skran',\r\n    'skrik',\r\n    'skuas',\r\n    'skugs',\r\n    'skyed',\r\n    'skyer',\r\n    'skyey',\r\n    'skyfs',\r\n    'skyre',\r\n    'skyrs',\r\n    'skyte',\r\n    'slabs',\r\n    'slade',\r\n    'slaes',\r\n    'slags',\r\n    'slaid',\r\n    'slake',\r\n    'slams',\r\n    'slane',\r\n    'slank',\r\n    'slaps',\r\n    'slart',\r\n    'slats',\r\n    'slaty',\r\n    'slaws',\r\n    'slays',\r\n    'slebs',\r\n    'sleds',\r\n    'sleer',\r\n    'slews',\r\n    'sleys',\r\n    'slier',\r\n    'slily',\r\n    'slims',\r\n    'slipe',\r\n    'slips',\r\n    'slipt',\r\n    'slish',\r\n    'slits',\r\n    'slive',\r\n    'sloan',\r\n    'slobs',\r\n    'sloes',\r\n    'slogs',\r\n    'sloid',\r\n    'slojd',\r\n    'slomo',\r\n    'sloom',\r\n    'sloot',\r\n    'slops',\r\n    'slopy',\r\n    'slorm',\r\n    'slots',\r\n    'slove',\r\n    'slows',\r\n    'sloyd',\r\n    'slubb',\r\n    'slubs',\r\n    'slued',\r\n    'slues',\r\n    'sluff',\r\n    'slugs',\r\n    'sluit',\r\n    'slums',\r\n    'slurb',\r\n    'slurs',\r\n    'sluse',\r\n    'sluts',\r\n    'slyer',\r\n    'slype',\r\n    'smaak',\r\n    'smaik',\r\n    'smalm',\r\n    'smalt',\r\n    'smarm',\r\n    'smaze',\r\n    'smeek',\r\n    'smees',\r\n    'smeik',\r\n    'smeke',\r\n    'smerk',\r\n    'smews',\r\n    'smirr',\r\n    'smirs',\r\n    'smits',\r\n    'smogs',\r\n    'smoko',\r\n    'smolt',\r\n    'smoor',\r\n    'smoot',\r\n    'smore',\r\n    'smorg',\r\n    'smout',\r\n    'smowt',\r\n    'smugs',\r\n    'smurs',\r\n    'smush',\r\n    'smuts',\r\n    'snabs',\r\n    'snafu',\r\n    'snags',\r\n    'snaps',\r\n    'snarf',\r\n    'snark',\r\n    'snars',\r\n    'snary',\r\n    'snash',\r\n    'snath',\r\n    'snaws',\r\n    'snead',\r\n    'sneap',\r\n    'snebs',\r\n    'sneck',\r\n    'sneds',\r\n    'sneed',\r\n    'snees',\r\n    'snell',\r\n    'snibs',\r\n    'snick',\r\n    'snies',\r\n    'snift',\r\n    'snigs',\r\n    'snips',\r\n    'snipy',\r\n    'snirt',\r\n    'snits',\r\n    'snobs',\r\n    'snods',\r\n    'snoek',\r\n    'snoep',\r\n    'snogs',\r\n    'snoke',\r\n    'snood',\r\n    'snook',\r\n    'snool',\r\n    'snoot',\r\n    'snots',\r\n    'snowk',\r\n    'snows',\r\n    'snubs',\r\n    'snugs',\r\n    'snush',\r\n    'snyes',\r\n    'soaks',\r\n    'soaps',\r\n    'soare',\r\n    'soars',\r\n    'soave',\r\n    'sobas',\r\n    'socas',\r\n    'soces',\r\n    'socko',\r\n    'socks',\r\n    'socle',\r\n    'sodas',\r\n    'soddy',\r\n    'sodic',\r\n    'sodom',\r\n    'sofar',\r\n    'sofas',\r\n    'softa',\r\n    'softs',\r\n    'softy',\r\n    'soger',\r\n    'sohur',\r\n    'soils',\r\n    'soily',\r\n    'sojas',\r\n    'sojus',\r\n    'sokah',\r\n    'soken',\r\n    'sokes',\r\n    'sokol',\r\n    'solah',\r\n    'solan',\r\n    'solas',\r\n    'solde',\r\n    'soldi',\r\n    'soldo',\r\n    'solds',\r\n    'soled',\r\n    'solei',\r\n    'soler',\r\n    'soles',\r\n    'solon',\r\n    'solos',\r\n    'solum',\r\n    'solus',\r\n    'soman',\r\n    'somas',\r\n    'sonce',\r\n    'sonde',\r\n    'sones',\r\n    'songs',\r\n    'sonly',\r\n    'sonne',\r\n    'sonny',\r\n    'sonse',\r\n    'sonsy',\r\n    'sooey',\r\n    'sooks',\r\n    'sooky',\r\n    'soole',\r\n    'sools',\r\n    'sooms',\r\n    'soops',\r\n    'soote',\r\n    'soots',\r\n    'sophs',\r\n    'sophy',\r\n    'sopor',\r\n    'soppy',\r\n    'sopra',\r\n    'soral',\r\n    'soras',\r\n    'sorbo',\r\n    'sorbs',\r\n    'sorda',\r\n    'sordo',\r\n    'sords',\r\n    'sored',\r\n    'soree',\r\n    'sorel',\r\n    'sorer',\r\n    'sores',\r\n    'sorex',\r\n    'sorgo',\r\n    'sorns',\r\n    'sorra',\r\n    'sorta',\r\n    'sorts',\r\n    'sorus',\r\n    'soths',\r\n    'sotol',\r\n    'souce',\r\n    'souct',\r\n    'sough',\r\n    'souks',\r\n    'souls',\r\n    'soums',\r\n    'soups',\r\n    'soupy',\r\n    'sours',\r\n    'souse',\r\n    'souts',\r\n    'sowar',\r\n    'sowce',\r\n    'sowed',\r\n    'sowff',\r\n    'sowfs',\r\n    'sowle',\r\n    'sowls',\r\n    'sowms',\r\n    'sownd',\r\n    'sowne',\r\n    'sowps',\r\n    'sowse',\r\n    'sowth',\r\n    'soyas',\r\n    'soyle',\r\n    'soyuz',\r\n    'sozin',\r\n    'spacy',\r\n    'spado',\r\n    'spaed',\r\n    'spaer',\r\n    'spaes',\r\n    'spags',\r\n    'spahi',\r\n    'spail',\r\n    'spain',\r\n    'spait',\r\n    'spake',\r\n    'spald',\r\n    'spale',\r\n    'spall',\r\n    'spalt',\r\n    'spams',\r\n    'spane',\r\n    'spang',\r\n    'spans',\r\n    'spard',\r\n    'spars',\r\n    'spart',\r\n    'spate',\r\n    'spats',\r\n    'spaul',\r\n    'spawl',\r\n    'spaws',\r\n    'spayd',\r\n    'spays',\r\n    'spaza',\r\n    'spazz',\r\n    'speal',\r\n    'spean',\r\n    'speat',\r\n    'specs',\r\n    'spect',\r\n    'speel',\r\n    'speer',\r\n    'speil',\r\n    'speir',\r\n    'speks',\r\n    'speld',\r\n    'spelk',\r\n    'speos',\r\n    'spets',\r\n    'speug',\r\n    'spews',\r\n    'spewy',\r\n    'spial',\r\n    'spica',\r\n    'spick',\r\n    'spics',\r\n    'spide',\r\n    'spier',\r\n    'spies',\r\n    'spiff',\r\n    'spifs',\r\n    'spiks',\r\n    'spile',\r\n    'spims',\r\n    'spina',\r\n    'spink',\r\n    'spins',\r\n    'spirt',\r\n    'spiry',\r\n    'spits',\r\n    'spitz',\r\n    'spivs',\r\n    'splay',\r\n    'splog',\r\n    'spode',\r\n    'spods',\r\n    'spoom',\r\n    'spoor',\r\n    'spoot',\r\n    'spork',\r\n    'sposh',\r\n    'spots',\r\n    'sprad',\r\n    'sprag',\r\n    'sprat',\r\n    'spred',\r\n    'sprew',\r\n    'sprit',\r\n    'sprod',\r\n    'sprog',\r\n    'sprue',\r\n    'sprug',\r\n    'spuds',\r\n    'spued',\r\n    'spuer',\r\n    'spues',\r\n    'spugs',\r\n    'spule',\r\n    'spume',\r\n    'spumy',\r\n    'spurs',\r\n    'sputa',\r\n    'spyal',\r\n    'spyre',\r\n    'squab',\r\n    'squaw',\r\n    'squeg',\r\n    'squid',\r\n    'squit',\r\n    'squiz',\r\n    'stabs',\r\n    'stade',\r\n    'stags',\r\n    'stagy',\r\n    'staig',\r\n    'stane',\r\n    'stang',\r\n    'staph',\r\n    'staps',\r\n    'starn',\r\n    'starr',\r\n    'stars',\r\n    'stats',\r\n    'staun',\r\n    'staws',\r\n    'stays',\r\n    'stean',\r\n    'stear',\r\n    'stedd',\r\n    'stede',\r\n    'steds',\r\n    'steek',\r\n    'steem',\r\n    'steen',\r\n    'steil',\r\n    'stela',\r\n    'stele',\r\n    'stell',\r\n    'steme',\r\n    'stems',\r\n    'stend',\r\n    'steno',\r\n    'stens',\r\n    'stent',\r\n    'steps',\r\n    'stept',\r\n    'stere',\r\n    'stets',\r\n    'stews',\r\n    'stewy',\r\n    'steys',\r\n    'stich',\r\n    'stied',\r\n    'sties',\r\n    'stilb',\r\n    'stile',\r\n    'stime',\r\n    'stims',\r\n    'stimy',\r\n    'stipa',\r\n    'stipe',\r\n    'stire',\r\n    'stirk',\r\n    'stirp',\r\n    'stirs',\r\n    'stive',\r\n    'stivy',\r\n    'stoae',\r\n    'stoai',\r\n    'stoas',\r\n    'stoat',\r\n    'stobs',\r\n    'stoep',\r\n    'stogy',\r\n    'stoit',\r\n    'stoln',\r\n    'stoma',\r\n    'stond',\r\n    'stong',\r\n    'stonk',\r\n    'stonn',\r\n    'stook',\r\n    'stoor',\r\n    'stope',\r\n    'stops',\r\n    'stopt',\r\n    'stoss',\r\n    'stots',\r\n    'stott',\r\n    'stoun',\r\n    'stoup',\r\n    'stour',\r\n    'stown',\r\n    'stowp',\r\n    'stows',\r\n    'strad',\r\n    'strae',\r\n    'strag',\r\n    'strak',\r\n    'strep',\r\n    'strew',\r\n    'stria',\r\n    'strig',\r\n    'strim',\r\n    'strop',\r\n    'strow',\r\n    'stroy',\r\n    'strum',\r\n    'stubs',\r\n    'stude',\r\n    'studs',\r\n    'stull',\r\n    'stulm',\r\n    'stumm',\r\n    'stums',\r\n    'stuns',\r\n    'stupa',\r\n    'stupe',\r\n    'sture',\r\n    'sturt',\r\n    'styed',\r\n    'styes',\r\n    'styli',\r\n    'stylo',\r\n    'styme',\r\n    'stymy',\r\n    'styre',\r\n    'styte',\r\n    'subah',\r\n    'subas',\r\n    'subby',\r\n    'suber',\r\n    'subha',\r\n    'succi',\r\n    'sucks',\r\n    'sucky',\r\n    'sucre',\r\n    'sudds',\r\n    'sudor',\r\n    'sudsy',\r\n    'suede',\r\n    'suent',\r\n    'suers',\r\n    'suete',\r\n    'suets',\r\n    'suety',\r\n    'sugan',\r\n    'sughs',\r\n    'sugos',\r\n    'suhur',\r\n    'suids',\r\n    'suint',\r\n    'suits',\r\n    'sujee',\r\n    'sukhs',\r\n    'sukuk',\r\n    'sulci',\r\n    'sulfa',\r\n    'sulfo',\r\n    'sulks',\r\n    'sulph',\r\n    'sulus',\r\n    'sumis',\r\n    'summa',\r\n    'sumos',\r\n    'sumph',\r\n    'sumps',\r\n    'sunis',\r\n    'sunks',\r\n    'sunna',\r\n    'sunns',\r\n    'sunup',\r\n    'supes',\r\n    'supra',\r\n    'surah',\r\n    'sural',\r\n    'suras',\r\n    'surat',\r\n    'surds',\r\n    'sured',\r\n    'sures',\r\n    'surfs',\r\n    'surfy',\r\n    'surgy',\r\n    'surra',\r\n    'sused',\r\n    'suses',\r\n    'susus',\r\n    'sutor',\r\n    'sutra',\r\n    'sutta',\r\n    'swabs',\r\n    'swack',\r\n    'swads',\r\n    'swage',\r\n    'swags',\r\n    'swail',\r\n    'swain',\r\n    'swale',\r\n    'swaly',\r\n    'swamy',\r\n    'swang',\r\n    'swank',\r\n    'swans',\r\n    'swaps',\r\n    'swapt',\r\n    'sward',\r\n    'sware',\r\n    'swarf',\r\n    'swart',\r\n    'swats',\r\n    'swayl',\r\n    'sways',\r\n    'sweal',\r\n    'swede',\r\n    'sweed',\r\n    'sweel',\r\n    'sweer',\r\n    'swees',\r\n    'sweir',\r\n    'swelt',\r\n    'swerf',\r\n    'sweys',\r\n    'swies',\r\n    'swigs',\r\n    'swile',\r\n    'swims',\r\n    'swink',\r\n    'swipe',\r\n    'swire',\r\n    'swiss',\r\n    'swith',\r\n    'swits',\r\n    'swive',\r\n    'swizz',\r\n    'swobs',\r\n    'swole',\r\n    'swoln',\r\n    'swops',\r\n    'swopt',\r\n    'swots',\r\n    'swoun',\r\n    'sybbe',\r\n    'sybil',\r\n    'syboe',\r\n    'sybow',\r\n    'sycee',\r\n    'syces',\r\n    'sycon',\r\n    'syens',\r\n    'syker',\r\n    'sykes',\r\n    'sylis',\r\n    'sylph',\r\n    'sylva',\r\n    'symar',\r\n    'synch',\r\n    'syncs',\r\n    'synds',\r\n    'syned',\r\n    'synes',\r\n    'synth',\r\n    'syped',\r\n    'sypes',\r\n    'syphs',\r\n    'syrah',\r\n    'syren',\r\n    'sysop',\r\n    'sythe',\r\n    'syver',\r\n    'taals',\r\n    'taata',\r\n    'taber',\r\n    'tabes',\r\n    'tabid',\r\n    'tabis',\r\n    'tabla',\r\n    'tabor',\r\n    'tabun',\r\n    'tabus',\r\n    'tacan',\r\n    'taces',\r\n    'tacet',\r\n    'tache',\r\n    'tacho',\r\n    'tachs',\r\n    'tacks',\r\n    'tacos',\r\n    'tacts',\r\n    'taels',\r\n    'tafia',\r\n    'taggy',\r\n    'tagma',\r\n    'tahas',\r\n    'tahrs',\r\n    'taiga',\r\n    'taigs',\r\n    'taiko',\r\n    'tails',\r\n    'tains',\r\n    'taira',\r\n    'taish',\r\n    'taits',\r\n    'tajes',\r\n    'takas',\r\n    'takes',\r\n    'takhi',\r\n    'takin',\r\n    'takis',\r\n    'takky',\r\n    'talak',\r\n    'talaq',\r\n    'talar',\r\n    'talas',\r\n    'talcs',\r\n    'talcy',\r\n    'talea',\r\n    'taler',\r\n    'tales',\r\n    'talks',\r\n    'talky',\r\n    'talls',\r\n    'talma',\r\n    'talpa',\r\n    'taluk',\r\n    'talus',\r\n    'tamal',\r\n    'tamed',\r\n    'tames',\r\n    'tamin',\r\n    'tamis',\r\n    'tammy',\r\n    'tamps',\r\n    'tanas',\r\n    'tanga',\r\n    'tangi',\r\n    'tangs',\r\n    'tanhs',\r\n    'tanka',\r\n    'tanks',\r\n    'tanky',\r\n    'tanna',\r\n    'tansy',\r\n    'tanti',\r\n    'tanto',\r\n    'tanty',\r\n    'tapas',\r\n    'taped',\r\n    'tapen',\r\n    'tapes',\r\n    'tapet',\r\n    'tapis',\r\n    'tappa',\r\n    'tapus',\r\n    'taras',\r\n    'tardo',\r\n    'tared',\r\n    'tares',\r\n    'targa',\r\n    'targe',\r\n    'tarns',\r\n    'taroc',\r\n    'tarok',\r\n    'taros',\r\n    'tarps',\r\n    'tarre',\r\n    'tarry',\r\n    'tarsi',\r\n    'tarts',\r\n    'tarty',\r\n    'tasar',\r\n    'tased',\r\n    'taser',\r\n    'tases',\r\n    'tasks',\r\n    'tassa',\r\n    'tasse',\r\n    'tasso',\r\n    'tatar',\r\n    'tater',\r\n    'tates',\r\n    'taths',\r\n    'tatie',\r\n    'tatou',\r\n    'tatts',\r\n    'tatus',\r\n    'taube',\r\n    'tauld',\r\n    'tauon',\r\n    'taupe',\r\n    'tauts',\r\n    'tavah',\r\n    'tavas',\r\n    'taver',\r\n    'tawai',\r\n    'tawas',\r\n    'tawed',\r\n    'tawer',\r\n    'tawie',\r\n    'tawse',\r\n    'tawts',\r\n    'taxed',\r\n    'taxer',\r\n    'taxes',\r\n    'taxis',\r\n    'taxol',\r\n    'taxon',\r\n    'taxor',\r\n    'taxus',\r\n    'tayra',\r\n    'tazza',\r\n    'tazze',\r\n    'teade',\r\n    'teads',\r\n    'teaed',\r\n    'teaks',\r\n    'teals',\r\n    'teams',\r\n    'tears',\r\n    'teats',\r\n    'teaze',\r\n    'techs',\r\n    'techy',\r\n    'tecta',\r\n    'teels',\r\n    'teems',\r\n    'teend',\r\n    'teene',\r\n    'teens',\r\n    'teeny',\r\n    'teers',\r\n    'teffs',\r\n    'teggs',\r\n    'tegua',\r\n    'tegus',\r\n    'tehrs',\r\n    'teiid',\r\n    'teils',\r\n    'teind',\r\n    'teins',\r\n    'telae',\r\n    'telco',\r\n    'teles',\r\n    'telex',\r\n    'telia',\r\n    'telic',\r\n    'tells',\r\n    'telly',\r\n    'teloi',\r\n    'telos',\r\n    'temed',\r\n    'temes',\r\n    'tempi',\r\n    'temps',\r\n    'tempt',\r\n    'temse',\r\n    'tench',\r\n    'tends',\r\n    'tendu',\r\n    'tenes',\r\n    'tenge',\r\n    'tenia',\r\n    'tenne',\r\n    'tenno',\r\n    'tenny',\r\n    'tenon',\r\n    'tents',\r\n    'tenty',\r\n    'tenue',\r\n    'tepal',\r\n    'tepas',\r\n    'tepoy',\r\n    'terai',\r\n    'teras',\r\n    'terce',\r\n    'terek',\r\n    'teres',\r\n    'terfe',\r\n    'terfs',\r\n    'terga',\r\n    'terms',\r\n    'terne',\r\n    'terns',\r\n    'terry',\r\n    'terts',\r\n    'tesla',\r\n    'testa',\r\n    'teste',\r\n    'tests',\r\n    'tetes',\r\n    'teths',\r\n    'tetra',\r\n    'tetri',\r\n    'teuch',\r\n    'teugh',\r\n    'tewed',\r\n    'tewel',\r\n    'tewit',\r\n    'texas',\r\n    'texes',\r\n    'texts',\r\n    'thack',\r\n    'thagi',\r\n    'thaim',\r\n    'thale',\r\n    'thali',\r\n    'thana',\r\n    'thane',\r\n    'thang',\r\n    'thans',\r\n    'thanx',\r\n    'tharm',\r\n    'thars',\r\n    'thaws',\r\n    'thawy',\r\n    'thebe',\r\n    'theca',\r\n    'theed',\r\n    'theek',\r\n    'thees',\r\n    'thegn',\r\n    'theic',\r\n    'thein',\r\n    'thelf',\r\n    'thema',\r\n    'thens',\r\n    'theow',\r\n    'therm',\r\n    'thesp',\r\n    'thete',\r\n    'thews',\r\n    'thewy',\r\n    'thigs',\r\n    'thilk',\r\n    'thill',\r\n    'thine',\r\n    'thins',\r\n    'thiol',\r\n    'thirl',\r\n    'thoft',\r\n    'thole',\r\n    'tholi',\r\n    'thoro',\r\n    'thorp',\r\n    'thous',\r\n    'thowl',\r\n    'thrae',\r\n    'thraw',\r\n    'thrid',\r\n    'thrip',\r\n    'throe',\r\n    'thuds',\r\n    'thugs',\r\n    'thuja',\r\n    'thunk',\r\n    'thurl',\r\n    'thuya',\r\n    'thymi',\r\n    'thymy',\r\n    'tians',\r\n    'tiars',\r\n    'tical',\r\n    'ticca',\r\n    'ticed',\r\n    'tices',\r\n    'tichy',\r\n    'ticks',\r\n    'ticky',\r\n    'tiddy',\r\n    'tided',\r\n    'tides',\r\n    'tiers',\r\n    'tiffs',\r\n    'tifos',\r\n    'tifts',\r\n    'tiges',\r\n    'tigon',\r\n    'tikas',\r\n    'tikes',\r\n    'tikis',\r\n    'tikka',\r\n    'tilak',\r\n    'tiled',\r\n    'tiler',\r\n    'tiles',\r\n    'tills',\r\n    'tilly',\r\n    'tilth',\r\n    'tilts',\r\n    'timbo',\r\n    'timed',\r\n    'times',\r\n    'timon',\r\n    'timps',\r\n    'tinas',\r\n    'tinct',\r\n    'tinds',\r\n    'tinea',\r\n    'tined',\r\n    'tines',\r\n    'tinge',\r\n    'tings',\r\n    'tinks',\r\n    'tinny',\r\n    'tints',\r\n    'tinty',\r\n    'tipis',\r\n    'tippy',\r\n    'tired',\r\n    'tires',\r\n    'tirls',\r\n    'tiros',\r\n    'tirrs',\r\n    'titch',\r\n    'titer',\r\n    'titis',\r\n    'titre',\r\n    'titty',\r\n    'titup',\r\n    'tiyin',\r\n    'tiyns',\r\n    'tizes',\r\n    'tizzy',\r\n    'toads',\r\n    'toady',\r\n    'toaze',\r\n    'tocks',\r\n    'tocky',\r\n    'tocos',\r\n    'todde',\r\n    'toeas',\r\n    'toffs',\r\n    'toffy',\r\n    'tofts',\r\n    'tofus',\r\n    'togae',\r\n    'togas',\r\n    'toged',\r\n    'toges',\r\n    'togue',\r\n    'tohos',\r\n    'toile',\r\n    'toils',\r\n    'toing',\r\n    'toise',\r\n    'toits',\r\n    'tokay',\r\n    'toked',\r\n    'toker',\r\n    'tokes',\r\n    'tokos',\r\n    'tolan',\r\n    'tolar',\r\n    'tolas',\r\n    'toled',\r\n    'toles',\r\n    'tolls',\r\n    'tolly',\r\n    'tolts',\r\n    'tolus',\r\n    'tolyl',\r\n    'toman',\r\n    'tombs',\r\n    'tomes',\r\n    'tomia',\r\n    'tommy',\r\n    'tomos',\r\n    'tondi',\r\n    'tondo',\r\n    'toned',\r\n    'toner',\r\n    'tones',\r\n    'toney',\r\n    'tongs',\r\n    'tonka',\r\n    'tonks',\r\n    'tonne',\r\n    'tonus',\r\n    'tools',\r\n    'tooms',\r\n    'toons',\r\n    'toots',\r\n    'toped',\r\n    'topee',\r\n    'topek',\r\n    'toper',\r\n    'topes',\r\n    'tophe',\r\n    'tophi',\r\n    'tophs',\r\n    'topis',\r\n    'topoi',\r\n    'topos',\r\n    'toppy',\r\n    'toque',\r\n    'torah',\r\n    'toran',\r\n    'toras',\r\n    'torcs',\r\n    'tores',\r\n    'toric',\r\n    'torii',\r\n    'toros',\r\n    'torot',\r\n    'torrs',\r\n    'torse',\r\n    'torsi',\r\n    'torsk',\r\n    'torta',\r\n    'torte',\r\n    'torts',\r\n    'tosas',\r\n    'tosed',\r\n    'toses',\r\n    'toshy',\r\n    'tossy',\r\n    'toted',\r\n    'toter',\r\n    'totes',\r\n    'totty',\r\n    'touks',\r\n    'touns',\r\n    'tours',\r\n    'touse',\r\n    'tousy',\r\n    'touts',\r\n    'touze',\r\n    'touzy',\r\n    'towed',\r\n    'towie',\r\n    'towns',\r\n    'towny',\r\n    'towse',\r\n    'towsy',\r\n    'towts',\r\n    'towze',\r\n    'towzy',\r\n    'toyed',\r\n    'toyer',\r\n    'toyon',\r\n    'toyos',\r\n    'tozed',\r\n    'tozes',\r\n    'tozie',\r\n    'trabs',\r\n    'trads',\r\n    'tragi',\r\n    'traik',\r\n    'trams',\r\n    'trank',\r\n    'tranq',\r\n    'trans',\r\n    'trant',\r\n    'trape',\r\n    'traps',\r\n    'trapt',\r\n    'trass',\r\n    'trats',\r\n    'tratt',\r\n    'trave',\r\n    'trayf',\r\n    'trays',\r\n    'treck',\r\n    'treed',\r\n    'treen',\r\n    'trees',\r\n    'trefa',\r\n    'treif',\r\n    'treks',\r\n    'trema',\r\n    'trems',\r\n    'tress',\r\n    'trest',\r\n    'trets',\r\n    'trews',\r\n    'treyf',\r\n    'treys',\r\n    'triac',\r\n    'tride',\r\n    'trier',\r\n    'tries',\r\n    'triff',\r\n    'trigo',\r\n    'trigs',\r\n    'trike',\r\n    'trild',\r\n    'trill',\r\n    'trims',\r\n    'trine',\r\n    'trins',\r\n    'triol',\r\n    'trior',\r\n    'trios',\r\n    'trips',\r\n    'tripy',\r\n    'trist',\r\n    'troad',\r\n    'troak',\r\n    'troat',\r\n    'trock',\r\n    'trode',\r\n    'trods',\r\n    'trogs',\r\n    'trois',\r\n    'troke',\r\n    'tromp',\r\n    'trona',\r\n    'tronc',\r\n    'trone',\r\n    'tronk',\r\n    'trons',\r\n    'trooz',\r\n    'troth',\r\n    'trots',\r\n    'trows',\r\n    'troys',\r\n    'trued',\r\n    'trues',\r\n    'trugo',\r\n    'trugs',\r\n    'trull',\r\n    'tryer',\r\n    'tryke',\r\n    'tryma',\r\n    'tryps',\r\n    'tsade',\r\n    'tsadi',\r\n    'tsars',\r\n    'tsked',\r\n    'tsuba',\r\n    'tsubo',\r\n    'tuans',\r\n    'tuart',\r\n    'tuath',\r\n    'tubae',\r\n    'tubar',\r\n    'tubas',\r\n    'tubby',\r\n    'tubed',\r\n    'tubes',\r\n    'tucks',\r\n    'tufas',\r\n    'tuffe',\r\n    'tuffs',\r\n    'tufts',\r\n    'tufty',\r\n    'tugra',\r\n    'tuile',\r\n    'tuina',\r\n    'tuism',\r\n    'tuktu',\r\n    'tules',\r\n    'tulpa',\r\n    'tulsi',\r\n    'tumid',\r\n    'tummy',\r\n    'tumps',\r\n    'tumpy',\r\n    'tunas',\r\n    'tunds',\r\n    'tuned',\r\n    'tuner',\r\n    'tunes',\r\n    'tungs',\r\n    'tunny',\r\n    'tupek',\r\n    'tupik',\r\n    'tuple',\r\n    'tuque',\r\n    'turds',\r\n    'turfs',\r\n    'turfy',\r\n    'turks',\r\n    'turme',\r\n    'turms',\r\n    'turns',\r\n    'turnt',\r\n    'turps',\r\n    'turrs',\r\n    'tushy',\r\n    'tusks',\r\n    'tusky',\r\n    'tutee',\r\n    'tutti',\r\n    'tutty',\r\n    'tutus',\r\n    'tuxes',\r\n    'tuyer',\r\n    'twaes',\r\n    'twain',\r\n    'twals',\r\n    'twank',\r\n    'twats',\r\n    'tways',\r\n    'tweel',\r\n    'tween',\r\n    'tweep',\r\n    'tweer',\r\n    'twerk',\r\n    'twerp',\r\n    'twier',\r\n    'twigs',\r\n    'twill',\r\n    'twilt',\r\n    'twink',\r\n    'twins',\r\n    'twiny',\r\n    'twire',\r\n    'twirp',\r\n    'twite',\r\n    'twits',\r\n    'twoer',\r\n    'twyer',\r\n    'tyees',\r\n    'tyers',\r\n    'tyiyn',\r\n    'tykes',\r\n    'tyler',\r\n    'tymps',\r\n    'tynde',\r\n    'tyned',\r\n    'tynes',\r\n    'typal',\r\n    'typed',\r\n    'types',\r\n    'typey',\r\n    'typic',\r\n    'typos',\r\n    'typps',\r\n    'typto',\r\n    'tyran',\r\n    'tyred',\r\n    'tyres',\r\n    'tyros',\r\n    'tythe',\r\n    'tzars',\r\n    'udals',\r\n    'udons',\r\n    'ugali',\r\n    'ugged',\r\n    'uhlan',\r\n    'uhuru',\r\n    'ukase',\r\n    'ulama',\r\n    'ulans',\r\n    'ulema',\r\n    'ulmin',\r\n    'ulnad',\r\n    'ulnae',\r\n    'ulnar',\r\n    'ulnas',\r\n    'ulpan',\r\n    'ulvas',\r\n    'ulyie',\r\n    'ulzie',\r\n    'umami',\r\n    'umbel',\r\n    'umber',\r\n    'umble',\r\n    'umbos',\r\n    'umbre',\r\n    'umiac',\r\n    'umiak',\r\n    'umiaq',\r\n    'ummah',\r\n    'ummas',\r\n    'ummed',\r\n    'umped',\r\n    'umphs',\r\n    'umpie',\r\n    'umpty',\r\n    'umrah',\r\n    'umras',\r\n    'unais',\r\n    'unapt',\r\n    'unarm',\r\n    'unary',\r\n    'unaus',\r\n    'unbag',\r\n    'unban',\r\n    'unbar',\r\n    'unbed',\r\n    'unbid',\r\n    'unbox',\r\n    'uncap',\r\n    'unces',\r\n    'uncia',\r\n    'uncos',\r\n    'uncoy',\r\n    'uncus',\r\n    'undam',\r\n    'undee',\r\n    'undos',\r\n    'undug',\r\n    'uneth',\r\n    'unfix',\r\n    'ungag',\r\n    'unget',\r\n    'ungod',\r\n    'ungot',\r\n    'ungum',\r\n    'unhat',\r\n    'unhip',\r\n    'unica',\r\n    'units',\r\n    'unjam',\r\n    'unked',\r\n    'unket',\r\n    'unkid',\r\n    'unlaw',\r\n    'unlay',\r\n    'unled',\r\n    'unlet',\r\n    'unlid',\r\n    'unman',\r\n    'unmew',\r\n    'unmix',\r\n    'unpay',\r\n    'unpeg',\r\n    'unpen',\r\n    'unpin',\r\n    'unred',\r\n    'unrid',\r\n    'unrig',\r\n    'unrip',\r\n    'unsaw',\r\n    'unsay',\r\n    'unsee',\r\n    'unsew',\r\n    'unsex',\r\n    'unsod',\r\n    'untax',\r\n    'untin',\r\n    'unwet',\r\n    'unwit',\r\n    'unwon',\r\n    'upbow',\r\n    'upbye',\r\n    'updos',\r\n    'updry',\r\n    'upend',\r\n    'upjet',\r\n    'uplay',\r\n    'upled',\r\n    'uplit',\r\n    'upped',\r\n    'upran',\r\n    'uprun',\r\n    'upsee',\r\n    'upsey',\r\n    'uptak',\r\n    'upter',\r\n    'uptie',\r\n    'uraei',\r\n    'urali',\r\n    'uraos',\r\n    'urare',\r\n    'urari',\r\n    'urase',\r\n    'urate',\r\n    'urbex',\r\n    'urbia',\r\n    'urdee',\r\n    'ureal',\r\n    'ureas',\r\n    'uredo',\r\n    'ureic',\r\n    'urena',\r\n    'urent',\r\n    'urged',\r\n    'urger',\r\n    'urges',\r\n    'urial',\r\n    'urite',\r\n    'urman',\r\n    'urnal',\r\n    'urned',\r\n    'urped',\r\n    'ursae',\r\n    'ursid',\r\n    'urson',\r\n    'urubu',\r\n    'urvas',\r\n    'users',\r\n    'usnea',\r\n    'usque',\r\n    'usure',\r\n    'usury',\r\n    'uteri',\r\n    'uveal',\r\n    'uveas',\r\n    'uvula',\r\n    'vacua',\r\n    'vaded',\r\n    'vades',\r\n    'vagal',\r\n    'vagus',\r\n    'vails',\r\n    'vaire',\r\n    'vairs',\r\n    'vairy',\r\n    'vakas',\r\n    'vakil',\r\n    'vales',\r\n    'valis',\r\n    'valse',\r\n    'vamps',\r\n    'vampy',\r\n    'vanda',\r\n    'vaned',\r\n    'vanes',\r\n    'vangs',\r\n    'vants',\r\n    'vaped',\r\n    'vaper',\r\n    'vapes',\r\n    'varan',\r\n    'varas',\r\n    'vardy',\r\n    'varec',\r\n    'vares',\r\n    'varia',\r\n    'varix',\r\n    'varna',\r\n    'varus',\r\n    'varve',\r\n    'vasal',\r\n    'vases',\r\n    'vasts',\r\n    'vasty',\r\n    'vatic',\r\n    'vatus',\r\n    'vauch',\r\n    'vaute',\r\n    'vauts',\r\n    'vawte',\r\n    'vaxes',\r\n    'veale',\r\n    'veals',\r\n    'vealy',\r\n    'veena',\r\n    'veeps',\r\n    'veers',\r\n    'veery',\r\n    'vegas',\r\n    'veges',\r\n    'vegie',\r\n    'vegos',\r\n    'vehme',\r\n    'veils',\r\n    'veily',\r\n    'veins',\r\n    'veiny',\r\n    'velar',\r\n    'velds',\r\n    'veldt',\r\n    'veles',\r\n    'vells',\r\n    'velum',\r\n    'venae',\r\n    'venal',\r\n    'vends',\r\n    'vendu',\r\n    'veney',\r\n    'venge',\r\n    'venin',\r\n    'vents',\r\n    'venus',\r\n    'verbs',\r\n    'verra',\r\n    'verry',\r\n    'verst',\r\n    'verts',\r\n    'vertu',\r\n    'vespa',\r\n    'vesta',\r\n    'vests',\r\n    'vetch',\r\n    'vexed',\r\n    'vexer',\r\n    'vexes',\r\n    'vexil',\r\n    'vezir',\r\n    'vials',\r\n    'viand',\r\n    'vibes',\r\n    'vibex',\r\n    'vibey',\r\n    'viced',\r\n    'vices',\r\n    'vichy',\r\n    'viers',\r\n    'views',\r\n    'viewy',\r\n    'vifda',\r\n    'viffs',\r\n    'vigas',\r\n    'vigia',\r\n    'vilde',\r\n    'viler',\r\n    'villi',\r\n    'vills',\r\n    'vimen',\r\n    'vinal',\r\n    'vinas',\r\n    'vinca',\r\n    'vined',\r\n    'viner',\r\n    'vines',\r\n    'vinew',\r\n    'vinic',\r\n    'vinos',\r\n    'vints',\r\n    'viold',\r\n    'viols',\r\n    'vired',\r\n    'vireo',\r\n    'vires',\r\n    'virga',\r\n    'virge',\r\n    'virid',\r\n    'virls',\r\n    'virtu',\r\n    'visas',\r\n    'vised',\r\n    'vises',\r\n    'visie',\r\n    'visne',\r\n    'vison',\r\n    'visto',\r\n    'vitae',\r\n    'vitas',\r\n    'vitex',\r\n    'vitro',\r\n    'vitta',\r\n    'vivas',\r\n    'vivat',\r\n    'vivda',\r\n    'viver',\r\n    'vives',\r\n    'vizir',\r\n    'vizor',\r\n    'vleis',\r\n    'vlies',\r\n    'vlogs',\r\n    'voars',\r\n    'vocab',\r\n    'voces',\r\n    'voddy',\r\n    'vodou',\r\n    'vodun',\r\n    'voema',\r\n    'vogie',\r\n    'voids',\r\n    'voile',\r\n    'voips',\r\n    'volae',\r\n    'volar',\r\n    'voled',\r\n    'voles',\r\n    'volet',\r\n    'volks',\r\n    'volta',\r\n    'volte',\r\n    'volti',\r\n    'volts',\r\n    'volva',\r\n    'volve',\r\n    'vomer',\r\n    'voted',\r\n    'votes',\r\n    'vouge',\r\n    'voulu',\r\n    'vowed',\r\n    'vower',\r\n    'voxel',\r\n    'vozhd',\r\n    'vraic',\r\n    'vrils',\r\n    'vroom',\r\n    'vrous',\r\n    'vrouw',\r\n    'vrows',\r\n    'vuggs',\r\n    'vuggy',\r\n    'vughs',\r\n    'vughy',\r\n    'vulgo',\r\n    'vulns',\r\n    'vulva',\r\n    'vutty',\r\n    'waacs', // start of w\r\n    'wacke',\r\n    'wacko',\r\n    'wacks',\r\n    'wadds',\r\n    'waddy',\r\n    'waded',\r\n    'wader',\r\n    'wades',\r\n    'wadge',\r\n    'wadis',\r\n    'wadts',\r\n    'waffs',\r\n    'wafts',\r\n    'waged',\r\n    'wages',\r\n    'wagga',\r\n    'wagyu',\r\n    'wahoo',\r\n    'waide',\r\n    'waifs',\r\n    'waift',\r\n    'wails',\r\n    'wains',\r\n    'wairs',\r\n    'waite',\r\n    'waits',\r\n    'wakas',\r\n    'waked',\r\n    'waken',\r\n    'waker',\r\n    'wakes',\r\n    'wakfs',\r\n    'waldo',\r\n    'walds',\r\n    'waled',\r\n    'waler',\r\n    'wales',\r\n    'walie',\r\n    'walis',\r\n    'walks',\r\n    'walla',\r\n    'walls',\r\n    'wally',\r\n    'walty',\r\n    'wamed',\r\n    'wames',\r\n    'wamus',\r\n    'wands',\r\n    'waned',\r\n    'wanes',\r\n    'waney',\r\n    'wangs',\r\n    'wanks',\r\n    'wanky',\r\n    'wanle',\r\n    'wanly',\r\n    'wanna',\r\n    'wants',\r\n    'wanty',\r\n    'wanze',\r\n    'waqfs',\r\n    'warbs',\r\n    'warby',\r\n    'wards',\r\n    'wared',\r\n    'wares',\r\n    'warez',\r\n    'warks',\r\n    'warms',\r\n    'warns',\r\n    'warps',\r\n    'warre',\r\n    'warst',\r\n    'warts',\r\n    'wases',\r\n    'washy',\r\n    'wasms',\r\n    'wasps',\r\n    'waspy',\r\n    'wasts',\r\n    'watap',\r\n    'watts',\r\n    'wauff',\r\n    'waugh',\r\n    'wauks',\r\n    'waulk',\r\n    'wauls',\r\n    'waurs',\r\n    'waved',\r\n    'waves',\r\n    'wavey',\r\n    'wawas',\r\n    'wawes',\r\n    'wawls',\r\n    'waxed',\r\n    'waxer',\r\n    'waxes',\r\n    'wayed',\r\n    'wazir',\r\n    'wazoo',\r\n    'weald',\r\n    'weals',\r\n    'weamb',\r\n    'weans',\r\n    'wears',\r\n    'webby',\r\n    'weber',\r\n    'wecht',\r\n    'wedel',\r\n    'wedgy',\r\n    'weeds',\r\n    'weeke',\r\n    'weeks',\r\n    'weels',\r\n    'weems',\r\n    'weens',\r\n    'weeny',\r\n    'weeps',\r\n    'weepy',\r\n    'weest',\r\n    'weete',\r\n    'weets',\r\n    'wefte',\r\n    'wefts',\r\n    'weids',\r\n    'weils',\r\n    'weirs',\r\n    'weise',\r\n    'weize',\r\n    'wekas',\r\n    'welds',\r\n    'welke',\r\n    'welks',\r\n    'welkt',\r\n    'wells',\r\n    'welly',\r\n    'welts',\r\n    'wembs',\r\n    'wends',\r\n    'wenge',\r\n    'wenny',\r\n    'wents',\r\n    'weros',\r\n    'wersh',\r\n    'wests',\r\n    'wetas',\r\n    'wetly',\r\n    'wexed',\r\n    'wexes',\r\n    'whamo',\r\n    'whams',\r\n    'whang',\r\n    'whaps',\r\n    'whare',\r\n    'whata',\r\n    'whats',\r\n    'whaup',\r\n    'whaur',\r\n    'wheal',\r\n    'whear',\r\n    'wheen',\r\n    'wheep',\r\n    'wheft',\r\n    'whelk',\r\n    'whelm',\r\n    'whens',\r\n    'whets',\r\n    'whews',\r\n    'wheys',\r\n    'whids',\r\n    'whift',\r\n    'whigs',\r\n    'whilk',\r\n    'whims',\r\n    'whins',\r\n    'whios',\r\n    'whips',\r\n    'whipt',\r\n    'whirr',\r\n    'whirs',\r\n    'whish',\r\n    'whiss',\r\n    'whist',\r\n    'whits',\r\n    'whity',\r\n    'whizz',\r\n    'whomp',\r\n    'whoof',\r\n    'whoot',\r\n    'whops',\r\n    'whore',\r\n    'whorl',\r\n    'whort',\r\n    'whoso',\r\n    'whows',\r\n    'whump',\r\n    'whups',\r\n    'whyda',\r\n    'wicca',\r\n    'wicks',\r\n    'wicky',\r\n    'widdy',\r\n    'wides',\r\n    'wiels',\r\n    'wifed',\r\n    'wifes',\r\n    'wifey',\r\n    'wifie',\r\n    'wifty',\r\n    'wigan',\r\n    'wigga',\r\n    'wiggy',\r\n    'wikis',\r\n    'wilco',\r\n    'wilds',\r\n    'wiled',\r\n    'wiles',\r\n    'wilga',\r\n    'wilis',\r\n    'wilja',\r\n    'wills',\r\n    'wilts',\r\n    'wimps',\r\n    'winds',\r\n    'wined',\r\n    'wines',\r\n    'winey',\r\n    'winge',\r\n    'wings',\r\n    'wingy',\r\n    'winks',\r\n    'winna',\r\n    'winns',\r\n    'winos',\r\n    'winze',\r\n    'wiped',\r\n    'wiper',\r\n    'wipes',\r\n    'wired',\r\n    'wirer',\r\n    'wires',\r\n    'wirra',\r\n    'wised',\r\n    'wises',\r\n    'wisha',\r\n    'wisht',\r\n    'wisps',\r\n    'wists',\r\n    'witan',\r\n    'wited',\r\n    'wites',\r\n    'withe',\r\n    'withs',\r\n    'withy',\r\n    'wived',\r\n    'wiver',\r\n    'wives',\r\n    'wizen',\r\n    'wizes',\r\n    'woads',\r\n    'woald',\r\n    'wocks',\r\n    'wodge',\r\n    'woful',\r\n    'wojus',\r\n    'woker',\r\n    'wokka',\r\n    'wolds',\r\n    'wolfs',\r\n    'wolly',\r\n    'wolve',\r\n    'wombs',\r\n    'womby',\r\n    'womyn',\r\n    'wonga',\r\n    'wongi',\r\n    'wonks',\r\n    'wonky',\r\n    'wonts',\r\n    'woods',\r\n    'wooed',\r\n    'woofs',\r\n    'woofy',\r\n    'woold',\r\n    'wools',\r\n    'woons',\r\n    'woops',\r\n    'woopy',\r\n    'woose',\r\n    'woosh',\r\n    'wootz',\r\n    'words',\r\n    'works',\r\n    'worms',\r\n    'wormy',\r\n    'worts',\r\n    'wowed',\r\n    'wowee',\r\n    'woxen',\r\n    'wrang',\r\n    'wraps',\r\n    'wrapt',\r\n    'wrast',\r\n    'wrate',\r\n    'wrawl',\r\n    'wrens',\r\n    'wrick',\r\n    'wried',\r\n    'wrier',\r\n    'wries',\r\n    'writs',\r\n    'wroke',\r\n    'wroot',\r\n    'wroth',\r\n    'wryer',\r\n    'wuddy',\r\n    'wudus',\r\n    'wulls',\r\n    'wurst',\r\n    'wuses',\r\n    'wushu',\r\n    'wussy',\r\n    'wuxia',\r\n    'wyled',\r\n    'wyles',\r\n    'wynds',\r\n    'wynns',\r\n    'wyted',\r\n    'wytes',\r\n    'xebec', // start of x\r\n    'xenia',\r\n    'xenic',\r\n    'xenon',\r\n    'xeric',\r\n    'xerox',\r\n    'xerus',\r\n    'xoana',\r\n    'xrays',\r\n    'xylan',\r\n    'xylem',\r\n    'xylic',\r\n    'xylol',\r\n    'xylyl',\r\n    'xysti',\r\n    'xysts',\r\n    'yaars', // start of y\r\n    'yabas',\r\n    'yabba',\r\n    'yabby',\r\n    'yacca',\r\n    'yacka',\r\n    'yacks',\r\n    'yaffs',\r\n    'yager',\r\n    'yages',\r\n    'yagis',\r\n    'yahoo',\r\n    'yaird',\r\n    'yakka',\r\n    'yakow',\r\n    'yales',\r\n    'yamen',\r\n    'yampy',\r\n    'yamun',\r\n    'yangs',\r\n    'yanks',\r\n    'yapok',\r\n    'yapon',\r\n    'yapps',\r\n    'yappy',\r\n    'yarak',\r\n    'yarco',\r\n    'yards',\r\n    'yarer',\r\n    'yarfa',\r\n    'yarks',\r\n    'yarns',\r\n    'yarrs',\r\n    'yarta',\r\n    'yarto',\r\n    'yates',\r\n    'yauds',\r\n    'yauld',\r\n    'yaups',\r\n    'yawed',\r\n    'yawey',\r\n    'yawls',\r\n    'yawns',\r\n    'yawny',\r\n    'yawps',\r\n    'ybore',\r\n    'yclad',\r\n    'ycled',\r\n    'ycond',\r\n    'ydrad',\r\n    'ydred',\r\n    'yeads',\r\n    'yeahs',\r\n    'yealm',\r\n    'yeans',\r\n    'yeard',\r\n    'years',\r\n    'yecch',\r\n    'yechs',\r\n    'yechy',\r\n    'yedes',\r\n    'yeeds',\r\n    'yeesh',\r\n    'yeggs',\r\n    'yelks',\r\n    'yells',\r\n    'yelms',\r\n    'yelps',\r\n    'yelts',\r\n    'yenta',\r\n    'yente',\r\n    'yerba',\r\n    'yerds',\r\n    'yerks',\r\n    'yeses',\r\n    'yesks',\r\n    'yests',\r\n    'yesty',\r\n    'yetis',\r\n    'yetts',\r\n    'yeuks',\r\n    'yeuky',\r\n    'yeven',\r\n    'yeves',\r\n    'yewen',\r\n    'yexed',\r\n    'yexes',\r\n    'yfere',\r\n    'yiked',\r\n    'yikes',\r\n    'yills',\r\n    'yince',\r\n    'yipes',\r\n    'yippy',\r\n    'yirds',\r\n    'yirks',\r\n    'yirrs',\r\n    'yirth',\r\n    'yites',\r\n    'yitie',\r\n    'ylems',\r\n    'ylike',\r\n    'ylkes',\r\n    'ymolt',\r\n    'ympes',\r\n    'yobbo',\r\n    'yobby',\r\n    'yocks',\r\n    'yodel',\r\n    'yodhs',\r\n    'yodle',\r\n    'yogas',\r\n    'yogee',\r\n    'yoghs',\r\n    'yogic',\r\n    'yogin',\r\n    'yogis',\r\n    'yoick',\r\n    'yojan',\r\n    'yoked',\r\n    'yokel',\r\n    'yoker',\r\n    'yokes',\r\n    'yokul',\r\n    'yolks',\r\n    'yolky',\r\n    'yomim',\r\n    'yomps',\r\n    'yonic',\r\n    'yonis',\r\n    'yonks',\r\n    'yoofs',\r\n    'yoops',\r\n    'yores',\r\n    'yorks',\r\n    'yorps',\r\n    'youks',\r\n    'yourn',\r\n    'yours',\r\n    'yourt',\r\n    'youse',\r\n    'yowed',\r\n    'yowes',\r\n    'yowie',\r\n    'yowls',\r\n    'yowza',\r\n    'yrapt',\r\n    'yrent',\r\n    'yrivd',\r\n    'yrneh',\r\n    'ysame',\r\n    'ytost',\r\n    'yuans',\r\n    'yucas',\r\n    'yucca',\r\n    'yucch',\r\n    'yucko',\r\n    'yucks',\r\n    'yucky',\r\n    'yufts',\r\n    'yugas',\r\n    'yuked',\r\n    'yukes',\r\n    'yukky',\r\n    'yukos',\r\n    'yulan',\r\n    'yules',\r\n    'yummo',\r\n    'yummy',\r\n    'yumps',\r\n    'yupon',\r\n    'yuppy',\r\n    'yurta',\r\n    'yurts',\r\n    'yuzus',\r\n    'zabra',// start of z\r\n    'zacks',\r\n    'zaida',\r\n    'zaidy',\r\n    'zaire',\r\n    'zakat',\r\n    'zaman',\r\n    'zambo',\r\n    'zamia',\r\n    'zanja',\r\n    'zante',\r\n    'zanza',\r\n    'zanze',\r\n    'zappy',\r\n    'zarfs',\r\n    'zaris',\r\n    'zatis',\r\n    'zaxes',\r\n    'zayin',\r\n    'zazen',\r\n    'zeals',\r\n    'zebec',\r\n    'zebub',\r\n    'zebus',\r\n    'zedas',\r\n    'zeins',\r\n    'zendo',\r\n    'zerda',\r\n    'zerks',\r\n    'zeros',\r\n    'zests',\r\n    'zetas',\r\n    'zexes',\r\n    'zezes',\r\n    'zhomo',\r\n    'zibet',\r\n    'ziffs',\r\n    'zigan',\r\n    'zilas',\r\n    'zilch',\r\n    'zilla',\r\n    'zills',\r\n    'zimbi',\r\n    'zimbs',\r\n    'zinco',\r\n    'zincs',\r\n    'zincy',\r\n    'zineb',\r\n    'zines',\r\n    'zings',\r\n    'zingy',\r\n    'zinke',\r\n    'zinky',\r\n    'zippo',\r\n    'zippy',\r\n    'ziram',\r\n    'zitis',\r\n    'zizel',\r\n    'zizit',\r\n    'zlote',\r\n    'zloty',\r\n    'zoaea',\r\n    'zobos',\r\n    'zobus',\r\n    'zocco',\r\n    'zoeae',\r\n    'zoeal',\r\n    'zoeas',\r\n    'zoism',\r\n    'zoist',\r\n    'zombi',\r\n    'zonae',\r\n    'zonda',\r\n    'zoned',\r\n    'zoner',\r\n    'zones',\r\n    'zonks',\r\n    'zooea',\r\n    'zooey',\r\n    'zooid',\r\n    'zooks',\r\n    'zooms',\r\n    'zoons',\r\n    'zooty',\r\n    'zoppa',\r\n    'zoppo',\r\n    'zoril',\r\n    'zoris',\r\n    'zorro',\r\n    'zouks',\r\n    'zowee',\r\n    'zowie',\r\n    'zulus',\r\n    'zupan',\r\n    'zupas',\r\n    'zuppa',\r\n    'zurfs',\r\n    'zuzim',\r\n    'zygal',\r\n    'zygon',\r\n    'zymes',\r\n    'zymic',\r\n]","import { words } from './words';\r\n\r\n// ================================================================================\r\n/*\r\n  1. ENTER YOUR CURRENT GUESS FOR currGuess BETWEEN ''\r\n      ONLY ENTER LETTERS THAT ARE GREEN (KNOWN POSITION)\r\n      ENTER * FOR ALL OTHER LETTERS, EVEN IF ORANGE\r\n  2. ENTER ALL ORANGE LETTERS IN orangeLetters BETWEEN ''\r\n      POSITION DOES MATTER\r\n      ENTER * FOR NON ORANGE LETTERS (INCLUDING GREEN)\r\n  3. ENTER ALL GREY LETTERS IN notLetters BETWEEN '' (POSITION DOES NOT MATTER)\r\n  3. RUN tsc *.ts && node index.js\r\n*/\r\n\r\n// let currGuess = '*e*t*';\r\n// let orangeLetters = 'a***a';\r\n// let notLetters = 'dlros';\r\n\r\n// ================================================================================\r\n\r\n// currGuess = currGuess.toLowerCase();\r\n// orangeLetters = orangeLetters.toLowerCase();\r\n\r\nconst processInput = (guess: string) => {\r\n  const known: number[] = [];\r\n  const unknown: number[] = [];\r\n\r\n  for (let i = 0; i < guess.length; i++) {\r\n    if (guess[i] == '*') unknown.push(i);\r\n    else known.push(i);\r\n  }\r\n\r\n  return { known, unknown };\r\n};\r\n\r\nconst makeTruthWord = (known: number[], unknown: number[]): boolean[] => {\r\n  let result: boolean[] = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    if (known.indexOf(i) >= 0) result[i] = true;\r\n    else result[i] = false;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst orangeToArr = (oranges: string): string[] => {\r\n  let result = [];\r\n\r\n  for (let i = 0; i < oranges.length; i++) {\r\n    result.push(oranges[i]);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst searchWords = (\r\n  truthWord: boolean[],\r\n  currGuess: string,\r\n  orangeLetters: string,\r\n  notLetters: string\r\n): string[] => {\r\n  let possWords: string[] = [];\r\n\r\n  for (let i = 0; i < words.length; i++) {\r\n    let matched: boolean = true;\r\n    const word = words[i];\r\n\r\n    for (let j = 0; j < 5; j++) {\r\n      // Check if a green letter doesn't match up\r\n      if (truthWord[j] && word[j] != currGuess[j]) {\r\n        matched = false;\r\n      }\r\n    }\r\n\r\n    // Only do further checks if necessary\r\n    if (matched) {\r\n      // If it has a grey letter, throw it out\r\n      for (let l = 0; l < notLetters.length; l++) {\r\n        if (word.indexOf(notLetters[l]) >= 0) matched = false;\r\n      }\r\n\r\n      if (matched) {\r\n        // If it DOESNT have an orange letter, throw it out\r\n        for (let k = 0; k < orangeLetters.length; k++) {\r\n          if (orangeLetters[k] != '*' && word.indexOf(orangeLetters[k]) < 0)\r\n            matched = false;\r\n          else if (orangeLetters[k] != '*' && word[k] == orangeLetters[k]) {\r\n            matched = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (matched) {\r\n      possWords.push(word);\r\n    }\r\n  }\r\n\r\n  return possWords;\r\n};\r\n\r\nexport const solveWordle = async (currGuess: string, orangeLetters: string, notLetters: string) => {\r\n  const { known, unknown } = processInput(currGuess);\r\n  const truthWordTable = makeTruthWord(known, unknown);\r\n\r\n  const results = searchWords(truthWordTable, currGuess, orangeLetters, notLetters);\r\n\r\n  console.log('Possible words, based on given info:');\r\n\r\n  for (let word of results) {\r\n    console.log(word);\r\n  }\r\n\r\n  let map: { [key: string]: number } = {};\r\n\r\n  for (let word of results) {\r\n    for (let i = 0; i < word.length; i++) {\r\n      if (known.indexOf(i) >= 0) continue;\r\n\r\n      if (map[word[i]] == undefined) map[word[i]] = 0;\r\n\r\n      map[word[i]] = map[word[i]] + 1;\r\n    }\r\n  }\r\n\r\n  let maxOccurIndex = 0;\r\n  let maxOccurs = 0;\r\n\r\n  for (let i = 0; i < results.length; i++) {\r\n    // Check relative letter frequencies\r\n    const word = results[i];\r\n    let usedLetters: string[] = [];\r\n    let numOccurs = 0;\r\n\r\n    for (let j = 0; j < word.length; j++) {\r\n      if (usedLetters.indexOf(word[j]) >= 0) continue;\r\n\r\n      numOccurs += map[word[j]];\r\n      usedLetters.push(word[j]);\r\n    }\r\n\r\n    if (numOccurs > maxOccurs) {\r\n      maxOccurs = numOccurs;\r\n      maxOccurIndex = i;\r\n    }\r\n  }\r\n\r\n  // Check frequency in entire English language\r\n\r\n  type WordData = { tags: string[] }[];\r\n\r\n  const checkWordFreq = async (word: string): Promise<number> => {\r\n    const res = await fetch(\r\n      `https://api.datamuse.com/words?sp=${word}&md=f&max=1`\r\n    );\r\n    const data = (await res.json()) as WordData;\r\n\r\n    const freq = parseFloat(data[0].tags[0].slice(2));\r\n    return freq;\r\n  };\r\n\r\n  const checkAllResults = async (): Promise<string> => {\r\n    let maxFreq = 0;\r\n    let maxFreqIndex = 0;\r\n\r\n    for (let i = 0; i < results.length; i++) {\r\n      const word = results[i];\r\n\r\n      const freq = await checkWordFreq(word);\r\n\r\n      if (freq > maxFreq) {\r\n        maxFreq = freq;\r\n        maxFreqIndex = i;\r\n      }\r\n    }\r\n\r\n    return results[maxFreqIndex];\r\n    //alert(`Most commonly used word of the results in normal English: ${results[maxFreqIndex]}`);\r\n  }\r\n\r\n\r\n  const result1 = results[maxOccurIndex];\r\n  //alert(`Based on the frequencies of letters in this list of words, the word with the highest number of letter commonalities is: ${results[maxOccurIndex]}`);\r\n  console.log(maxOccurs);\r\n\r\n  if (results.length < 40) {\r\n    const result2 = await checkAllResults();\r\n\r\n    return { result1, result2 };\r\n  } else {\r\n    return { result1, result2: null };\r\n  }\r\n\r\n}\r\n","<script lang=\"ts\">\r\n    import { solveWordle } from './index';\r\n\r\n    export let currGuess: string;\r\n    export let orangeLetters: string;\r\n    export let notLetters: string;\r\n\r\n    export let result1: string, result2: string;\r\n\r\n    export let ranOnce = false;\r\n    export let invalidInput = false;\r\n\r\n    async function runSolver() {\r\n        ranOnce = true;\r\n        invalidInput = false;\r\n\r\n        let inputs = [ currGuess, orangeLetters, notLetters ];\r\n\r\n        inputs.reduce((acc, curr, i) => {\r\n            inputs[i] = curr.toLowerCase().trim();\r\n\r\n            if (inputs[i] == '' || inputs[i].length > 5 && i != 2) {\r\n                invalidInput = true;\r\n            }\r\n\r\n            return inputs[i];\r\n        });\r\n\r\n        ({ result1, result2 } = await solveWordle(currGuess, orangeLetters, notLetters));\r\n        console.log(result1, result2);\r\n    }\r\n</script>\r\n\r\n<main>\r\n    <h1>wordlde thing</h1>\r\n\r\n    <div id=\"inputs\">\r\n        <div id=\"green-letters\">\r\n            <span class=\"green-in\">green letters</span>\r\n            <input class=\"green-in\" bind:value={currGuess} placeholder=\"ex. *o**s\">\r\n        </div>\r\n        <div id=\"orange-letters\">\r\n            <span class=\"orange-in\">orange letters</span>\r\n            <input class=\"orange-in\" bind:value={orangeLetters} placeholder=\"ex. t**s*\">\r\n        </div>\r\n        <div id=\"not-letters\">\r\n            <span class=\"grey-in\">greyed letters</span>\r\n            <input class=\"grey-in\" bind:value={notLetters} \r\n            on:keyup={key => {\r\n                if (key.key == 'Enter') {\r\n                    runSolver();\r\n                }\r\n            }} placeholder=\"ex. ghvab\">\r\n        </div>\r\n    </div>\r\n\r\n    <button on:click={runSolver}>solve</button>\r\n\r\n    {#if invalidInput}\r\n        <p>Invalid input: try again</p>\r\n    {/if}\r\n    \r\n    {#if result1}\r\n        <div id=\"results\">\r\n            <p>Most letter combinations: {result1}</p>\r\n            {#if result2}\r\n                <p>Most commonly used word: {result2}</p>\r\n            {/if}\r\n        </div>\r\n    {:else if ranOnce}\r\n        <div id=\"results\">\r\n            <p>\r\n                No results: make sure the input is entered correctly.\r\n                Make sure there are no repeats in the green letters category and the grey letters category.\r\n                If you're sure that it's entered correctly, then kindly stop breaking my thing.\r\n            </p>\r\n        </div>\r\n    {/if}\r\n</main>\r\n\r\n<style>\r\n    main {\r\n        font-size: 1.25rem;\r\n    }\r\n\r\n    div#inputs {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        margin: 0.5rem;\r\n    }\r\n\r\n    div#inputs > div {\r\n        padding-bottom: 0.25rem;\r\n    }\r\n\r\n    div#green-letters {\r\n        color: #538d4e;\r\n    }\r\n\r\n    div#orange-letters {\r\n        color: #b59f3b;\r\n    }\r\n\r\n    div#not-letters {\r\n        color: #3a3a3c;\r\n    }\r\n\r\n    div#results {\r\n        width: 50%;\r\n    }\r\n\r\n    button {\r\n        padding: 0.5rem;\r\n        padding-left: 0.75rem;\r\n        padding-right: 0.72rem;\r\n        border-radius: 1rem;\r\n        outline: none;\r\n        border: 2px solid black;\r\n        background-color: white;\r\n        color: black;\r\n\r\n        transition: border-width 0.25s ease-in-out;\r\n    }\r\n\r\n    button:active, button:hover {\r\n        border-width: 3px;\r\n    }\r\n\r\n    input {\r\n        padding: 0.5rem;\r\n        border-radius: 1rem;\r\n        transition: border 0.25s ease-in-out;\r\n        outline: none;\r\n    }\r\n\r\n    input.green-in {\r\n        border: 2px solid #538d4e;\r\n        color: #538d4e;\r\n    }\r\n\r\n    input.green-in:focus {\r\n        border: 3px solid #538d4e;\r\n    }\r\n\r\n    input.orange-in {\r\n        border: 2px solid #b59f3b;\r\n        color: #b59f3b;\r\n    }\r\n\r\n    input.orange-in:focus {\r\n        border: 3px solid #b59f3b;\r\n    }\r\n\r\n    input.grey-in {\r\n        border: 2px solid #3a3a3c;\r\n        color: #3a3a3c;\r\n    }\r\n\r\n    input.grey-in:focus {\r\n        border: 3px solid #3a3a3c;\r\n    }\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tcurrGuess: '',\r\n\t\torangeLetters: '',\r\n\t\tnotLetters: '',\r\n\t\tresult1: null,\r\n\t\tresult2: null,\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":[],"mappings":"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"}